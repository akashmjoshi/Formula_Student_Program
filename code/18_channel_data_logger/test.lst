;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8/3/2011 9:53:36 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x000000040A18  	GOTO	_main
0x0004	0x000000  	0
0x0006	0x000000  	0
0x0008	0x000000  	0
0x000A	0x000000  	0
0x000C	0x000000  	0
0x000E	0x000000  	0
0x0010	0x000000  	0
0x0012	0x000000  	0
0x0014	0x000000  	0
0x0016	0x000000  	0
0x0018	0x000000  	0
0x001A	0x000000  	0
0x001C	0x000000  	0
0x001E	0x000000  	0
0x0020	0x000000  	0
0x0022	0x000000  	0
0x0024	0x000000  	0
0x0026	0x000000  	0
0x0028	0x000000  	0
0x002A	0x000000  	0
0x002C	0x000000  	0
0x002E	0x000000  	0
0x0030	0x000000  	0
0x0032	0x000000  	0
0x0034	0x000000  	0
0x0036	0x000000  	0
0x0038	0x000000  	0
0x003A	0x000000  	0
0x003C	0x000000  	0
0x003E	0x000000  	0
0x0040	0x000000  	0
0x0042	0x000000  	0
0x0044	0x000000  	0
0x0046	0x000000  	0
0x0048	0x000000  	0
0x004A	0x000000  	0
0x004C	0x000000  	0
0x004E	0x000000  	0
0x0050	0x000000  	0
0x0052	0x000000  	0
0x0054	0x000000  	0
0x0056	0x000000  	0
0x0058	0x000000  	0
0x005A	0x000000  	0
0x005C	0x000000  	0
0x005E	0x000000  	0
0x0060	0x000000  	0
0x0062	0x000000  	0
0x0064	0x000000  	0
0x0066	0x000000  	0
0x0068	0x000000  	0
0x006A	0x000000  	0
0x006C	0x000000  	0
0x006E	0x000000  	0
0x0070	0x000000  	0
0x0072	0x000000  	0
0x0074	0x000000  	0
0x0076	0x000000  	0
0x0078	0x000000  	0
0x007A	0x000000  	0
0x007C	0x000000  	0
0x007E	0x000000  	0
0x0080	0x000000  	0
0x0082	0x000000  	0
0x0084	0x000000  	0
0x0086	0x000000  	0
0x0088	0x000000  	0
0x008A	0x000000  	0
0x008C	0x000000  	0
0x008E	0x000000  	0
0x0090	0x000000  	0
0x0092	0x000000  	0
0x0094	0x000000  	0
0x0096	0x000000  	0
0x0098	0x000000  	0
0x009A	0x000000  	0
0x009C	0x000000  	0
0x009E	0x000000  	0
0x00A0	0x000000  	0
0x00A2	0x000000  	0
0x00A4	0x000000  	0
0x00A6	0x000000  	0
0x00A8	0x000000  	0
0x00AA	0x000000  	0
0x00AC	0x000000  	0
0x00AE	0x000000  	0
0x00B0	0x000000  	0
0x00B2	0x000000  	0
0x00B4	0x000000  	0
0x00B6	0x000000  	0
0x00B8	0x000000  	0
0x00BA	0x000000  	0
0x00BC	0x000000  	0
0x00BE	0x000000  	0
0x00C0	0x000000  	0
0x00C2	0x000000  	0
0x00C4	0x000000  	0
0x00C6	0x000000  	0
0x00C8	0x000000  	0
0x00CA	0x000000  	0
0x00CC	0x000000  	0
0x00CE	0x000000  	0
0x00D0	0x000000  	0
0x00D2	0x000000  	0
0x00D4	0x000000  	0
0x00D6	0x000000  	0
0x00D8	0x000000  	0
0x00DA	0x000000  	0
0x00DC	0x000000  	0
0x00DE	0x000000  	0
0x00E0	0x000000  	0
0x00E2	0x000000  	0
0x00E4	0x000000  	0
0x00E6	0x000000  	0
0x00E8	0x000000  	0
0x00EA	0x000000  	0
0x00EC	0x000000  	0
0x00EE	0x000000  	0
0x00F0	0x000000  	0
0x00F2	0x000000  	0
0x00F4	0x000000  	0
0x00F6	0x000000  	0
0x00F8	0x000000  	0
0x00FA	0x000000  	0
0x00FC	0x000000  	0
0x00FE	0x000000  	0
0x0100	0x000000  	0
0x0102	0x000000  	0
0x0104	0x000000  	0
0x0106	0x000000  	0
0x0108	0x000000  	0
0x010A	0x000000  	0
0x010C	0x000000  	0
0x010E	0x000000  	0
0x0110	0x000000  	0
0x0112	0x000000  	0
0x0114	0x000000  	0
0x0116	0x000000  	0
0x0118	0x000000  	0
0x011A	0x000000  	0
0x011C	0x000000  	0
0x011E	0x000000  	0
0x0120	0x000000  	0
0x0122	0x000000  	0
0x0124	0x000000  	0
0x0126	0x000000  	0
0x0128	0x000000  	0
0x012A	0x000000  	0
0x012C	0x000000  	0
0x012E	0x000000  	0
0x0130	0x000000  	0
0x0132	0x000000  	0
0x0134	0x000000  	0
0x0136	0x000000  	0
0x0138	0x000000  	0
0x013A	0x000000  	0
0x013C	0x000000  	0
0x013E	0x000000  	0
0x0140	0x000000  	0
0x0142	0x000000  	0
0x0144	0x000000  	0
0x0146	0x000000  	0
0x0148	0x000000  	0
0x014A	0x000000  	0
0x014C	0x000000  	0
0x014E	0x000000  	0
0x0150	0x000000  	0
0x0152	0x000000  	0
0x0154	0x000000  	0
0x0156	0x000000  	0
0x0158	0x000000  	0
0x015A	0x000000  	0
0x015C	0x000000  	0
0x015E	0x000000  	0
0x0160	0x000000  	0
0x0162	0x000000  	0
0x0164	0x000000  	0
0x0166	0x000000  	0
0x0168	0x000000  	0
0x016A	0x000000  	0
0x016C	0x000000  	0
0x016E	0x000000  	0
0x0170	0x000000  	0
0x0172	0x000000  	0
0x0174	0x000000  	0
0x0176	0x000000  	0
0x0178	0x000000  	0
0x017A	0x000000  	0
0x017C	0x000000  	0
0x017E	0x000000  	0
0x0180	0x000000  	0
0x0182	0x000000  	0
0x0184	0x000000  	0
0x0186	0x000000  	0
0x0188	0x000000  	0
0x018A	0x000000  	0
0x018C	0x000000  	0
0x018E	0x000000  	0
0x0190	0x000000  	0
0x0192	0x000000  	0
0x0194	0x000000  	0
0x0196	0x000000  	0
0x0198	0x000000  	0
0x019A	0x000000  	0
0x019C	0x000000  	0
0x019E	0x000000  	0
0x01A0	0x000000  	0
0x01A2	0x000000  	0
0x01A4	0x000000  	0
0x01A6	0x000000  	0
0x01A8	0x000000  	0
0x01AA	0x000000  	0
0x01AC	0x000000  	0
0x01AE	0x000000  	0
0x01B0	0x000000  	0
0x01B2	0x000000  	0
0x01B4	0x000000  	0
0x01B6	0x000000  	0
0x01B8	0x000000  	0
0x01BA	0x000000  	0
0x01BC	0x000000  	0
0x01BE	0x000000  	0
0x01C0	0x000000  	0
0x01C2	0x000000  	0
0x01C4	0x000000  	0
0x01C6	0x000000  	0
0x01C8	0x000000  	0
0x01CA	0x000000  	0
0x01CC	0x000000  	0
0x01CE	0x000000  	0
0x01D0	0x000000  	0
0x01D2	0x000000  	0
0x01D4	0x000000  	0
0x01D6	0x000000  	0
0x01D8	0x000000  	0
0x01DA	0x000000  	0
0x01DC	0x000000  	0
0x01DE	0x000000  	0
0x01E0	0x000000  	0
0x01E2	0x000000  	0
0x01E4	0x000000  	0
0x01E6	0x000000  	0
0x01E8	0x000000  	0
0x01EA	0x000000  	0
0x01EC	0x000000  	0
0x01EE	0x000000  	0
0x01F0	0x000000  	0
0x01F2	0x000000  	0
0x01F4	0x000000  	0
0x01F6	0x000000  	0
0x01F8	0x000000  	0
0x01FA	0x000000  	0
0x01FC	0x000000  	0
0x01FE	0x000000  	0
_main:
0x0A18	0x20840F  	MOV	#2112, WREG15
0x0A1A	0x247FF0  	MOV	#18431, WREG0
0x0A1C	0xB7A020  	MOV	WREG, SPLIM
0x0A1E	0x200010  	MOV	#1, WREG0
0x0A20	0xB7A034  	MOV	WREG, PSVPAG
0x0A22	0x200040  	MOV	#4, WREG0
0x0A24	0xB72044  	IOR	CORCON
0x0A26	0xFA0050  	LNK	#80
0x0A28	0x000000020D2A  	CALL	3370
;test.c,63 :: 		void main()
;test.c,72 :: 		TRISG=0x0000;
0x0A2C	0x781F8A  	PUSH	WREG10
0x0A2E	0x781F8B  	PUSH	WREG11
0x0A30	0xEF22E4  	CLR	TRISG
;test.c,73 :: 		TRISD.B0=1;
0x0A32	0xA802D2  	BSET	TRISD, #0
;test.c,75 :: 		ADC1_Init_Advanced(_ADC_12bit, _ADC_INTERNAL_REF);
0x0A34	0xEF2016  	CLR	WREG11
0x0A36	0x20001A  	MOV	#1, WREG10
0x0A38	0x07FF33  	RCALL	_ADC1_Init_Advanced
;test.c,76 :: 		pll_init();
0x0A3A	0x07FEF5  	RCALL	_pll_init
;test.c,77 :: 		UART2_Init(9600);
0x0A3C	0x22580A  	MOV	#9600, WREG10
0x0A3E	0x20000B  	MOV	#0, WREG11
0x0A40	0x07FE79  	RCALL	_UART2_Init
;test.c,78 :: 		UART1_Init(57600);
0x0A42	0x2E100A  	MOV	#57600, WREG10
0x0A44	0x20000B  	MOV	#0, WREG11
0x0A46	0x07FF3F  	RCALL	_UART1_Init
;test.c,79 :: 		UART2_Write('E');
0x0A48	0x20045A  	MOV	#69, WREG10
0x0A4A	0x07FFDF  	RCALL	_UART2_Write
;test.c,80 :: 		UART2_Write('\r');
0x0A4C	0x2000DA  	MOV	#13, WREG10
0x0A4E	0x07FFDD  	RCALL	_UART2_Write
;test.c,81 :: 		delay_ms(100);
0x0A50	0x200158  	MOV	#21, WREG8
0x0A52	0x2585B7  	MOV	#22619, WREG7
L_main16:
0x0A54	0xED200E  	DEC	WREG7
0x0A56	0x3AFFFE  	BRA NZ	L_main16
0x0A58	0xED2010  	DEC	WREG8
0x0A5A	0x3AFFFC  	BRA NZ	L_main16
;test.c,82 :: 		PORTG=0x4000;
0x0A5C	0x240000  	MOV	#16384, WREG0
0x0A5E	0xB7A2E6  	MOV	WREG, PORTG
;test.c,83 :: 		delay_ms(100);
0x0A60	0x200158  	MOV	#21, WREG8
0x0A62	0x2585B7  	MOV	#22619, WREG7
L_main18:
0x0A64	0xED200E  	DEC	WREG7
0x0A66	0x3AFFFE  	BRA NZ	L_main18
0x0A68	0xED2010  	DEC	WREG8
0x0A6A	0x3AFFFC  	BRA NZ	L_main18
;test.c,84 :: 		UART2_Write_Text("IPA");
0x0A6C	0x20800A  	MOV	#lo_addr(?lstr1_test), WREG10
0x0A6E	0x07FFBC  	RCALL	_UART2_Write_Text
;test.c,85 :: 		UART2_Write('\r');
0x0A70	0x2000DA  	MOV	#13, WREG10
0x0A72	0x07FFCB  	RCALL	_UART2_Write
;test.c,86 :: 		delay_ms(100);
0x0A74	0x200158  	MOV	#21, WREG8
0x0A76	0x2585B7  	MOV	#22619, WREG7
L_main20:
0x0A78	0xED200E  	DEC	WREG7
0x0A7A	0x3AFFFE  	BRA NZ	L_main20
0x0A7C	0xED2010  	DEC	WREG8
0x0A7E	0x3AFFFC  	BRA NZ	L_main20
;test.c,87 :: 		UART2_Write_Text("ECS");
0x0A80	0x20811A  	MOV	#lo_addr(?lstr2_test), WREG10
0x0A82	0x07FFB2  	RCALL	_UART2_Write_Text
;test.c,88 :: 		UART2_Write('\r');
0x0A84	0x2000DA  	MOV	#13, WREG10
0x0A86	0x07FFC1  	RCALL	_UART2_Write
;test.c,89 :: 		delay_ms(100);
0x0A88	0x200158  	MOV	#21, WREG8
0x0A8A	0x2585B7  	MOV	#22619, WREG7
L_main22:
0x0A8C	0xED200E  	DEC	WREG7
0x0A8E	0x3AFFFE  	BRA NZ	L_main22
0x0A90	0xED2010  	DEC	WREG8
0x0A92	0x3AFFFC  	BRA NZ	L_main22
;test.c,91 :: 		UART2_Write_Text("SBD ");
0x0A94	0x20804A  	MOV	#lo_addr(?lstr3_test), WREG10
0x0A96	0x07FFA8  	RCALL	_UART2_Write_Text
;test.c,92 :: 		UART2_Write_Text("$0D0000");
0x0A98	0x20809A  	MOV	#lo_addr(?lstr4_test), WREG10
0x0A9A	0x07FFA6  	RCALL	_UART2_Write_Text
;test.c,93 :: 		UART2_Write('\r');
0x0A9C	0x2000DA  	MOV	#13, WREG10
0x0A9E	0x07FFB5  	RCALL	_UART2_Write
;test.c,94 :: 		delay_ms(100);
0x0AA0	0x200158  	MOV	#21, WREG8
0x0AA2	0x2585B7  	MOV	#22619, WREG7
L_main24:
0x0AA4	0xED200E  	DEC	WREG7
0x0AA6	0x3AFFFE  	BRA NZ	L_main24
0x0AA8	0xED2010  	DEC	WREG8
0x0AAA	0x3AFFFC  	BRA NZ	L_main24
;test.c,95 :: 		UART2_Init(230400);
0x0AAC	0x28400A  	MOV	#33792, WREG10
0x0AAE	0x20003B  	MOV	#3, WREG11
0x0AB0	0x07FE41  	RCALL	_UART2_Init
;test.c,97 :: 		PORTG=0xf000;
0x0AB2	0x2F0000  	MOV	#61440, WREG0
0x0AB4	0xB7A2E6  	MOV	WREG, PORTG
;test.c,99 :: 		while(1)
L_main26:
;test.c,102 :: 		while(RD0_bit);
L_main28:
0x0AB6	0xAE02D4  	BTSS	RD0_bit, #0
0x0AB8	0x370001  	BRA	L_main29
0x0ABA	0x37FFFD  	BRA	L_main28
L_main29:
;test.c,104 :: 		UART2_Write_Text("OPW TEST.csv");
0x0ABC	0x2081CA  	MOV	#lo_addr(?lstr5_test), WREG10
0x0ABE	0x07FF94  	RCALL	_UART2_Write_Text
;test.c,105 :: 		UART2_Write('\r');
0x0AC0	0x2000DA  	MOV	#13, WREG10
0x0AC2	0x07FFA3  	RCALL	_UART2_Write
;test.c,107 :: 		c=0;
0x0AC4	0xEF2000  	CLR	WREG0
0x0AC6	0xEF2002  	CLR	WREG1
0x0AC8	0x981F40  	MOV	WREG0, [WREG14+56]
0x0ACA	0x981F51  	MOV	WREG1, [WREG14+58]
;test.c,109 :: 		while(c<100)
L_main30:
0x0ACC	0x200641  	MOV	#100, WREG1
0x0ACE	0x200002  	MOV	#0, WREG2
0x0AD0	0x200380  	MOV	#56, WREG0
0x0AD2	0x470000  	ADD	WREG14, WREG0, WREG0
0x0AD4	0xE10830  	CP	WREG1, [WREG0++]
0x0AD6	0xE19020  	CPB	WREG2, [WREG0--]
0x0AD8	0x34011E  	BRA LE	L_main31
L__main54:
;test.c,112 :: 		j=0;
0x0ADA	0xEF2000  	CLR	WREG0
0x0ADC	0x981F60  	MOV	WREG0, [WREG14+60]
;test.c,115 :: 		a = ADC1_Get_Sample(0);
0x0ADE	0xEF2014  	CLR	WREG10
0x0AE0	0x07FF6B  	RCALL	_ADC1_Get_Sample
; a start address is: 4 (W2)
0x0AE2	0x780100  	MOV	WREG0, WREG2
0x0AE4	0xEB0180  	CLR	WREG3
;test.c,116 :: 		y=0.024*a;
0x0AE6	0xBE0002  	MOV.D	WREG2, WREG0
0x0AE8	0xEB8100  	SETM	WREG2
0x0AEA	0x07FD3C  	RCALL	__Long2Float
; a end address is: 4 (W2)
0x0AEC	0x29BA62  	MOV	#39846, WREG2
0x0AEE	0x23CC43  	MOV	#15556, WREG3
0x0AF0	0x07FD94  	RCALL	__Mul_FP
;test.c,117 :: 		IntToStr(y,txt);
0x0AF2	0x2003E2  	MOV	#62, WREG2
0x0AF4	0x470102  	ADD	WREG14, WREG2, WREG2
0x0AF6	0x982762  	MOV	WREG2, [WREG14+76]
0x0AF8	0x07FCCC  	RCALL	__Float2Longint
0x0AFA	0x9020EE  	MOV	[WREG14+76], WREG1
0x0AFC	0x780581  	MOV	WREG1, WREG11
0x0AFE	0x780500  	MOV	WREG0, WREG10
0x0B00	0x07FD04  	RCALL	_IntToStr
;test.c,118 :: 		for(i=0;i<6;i++,j++)
; i start address is: 12 (W6)
; i start address is: 12 (W6)
0x0B02	0xEF200C  	CLR	WREG6
; i end address is: 12 (W6)
; i end address is: 12 (W6)
0x0B04	0x780186  	MOV	WREG6, WREG3
L_main32:
; i start address is: 6 (W3)
0x0B06	0xE11866  	CP	WREG3, #6
0x0B08	0x310015  	BRA GEU	L_main33
L__main55:
;test.c,120 :: 		txt1[j]=txt[i];
0x0B0A	0x4700E0  	ADD	WREG14, #0, WREG1
0x0B0C	0x2003C0  	MOV	#60, WREG0
0x0B0E	0x470000  	ADD	WREG14, WREG0, WREG0
0x0B10	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0B12	0x2003E2  	MOV	#62, WREG2
0x0B14	0x470102  	ADD	WREG14, WREG2, WREG2
0x0B16	0x410003  	ADD	WREG2, WREG3, WREG0
0x0B18	0x784890  	MOV.B	[WREG0], [WREG1]
;test.c,121 :: 		txt2[j]=txt[i];
0x0B1A	0x4700FC  	ADD	WREG14, #28, WREG1
0x0B1C	0x2003C0  	MOV	#60, WREG0
0x0B1E	0x470000  	ADD	WREG14, WREG0, WREG0
0x0B20	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0B22	0x410003  	ADD	WREG2, WREG3, WREG0
0x0B24	0x784890  	MOV.B	[WREG0], [WREG1]
;test.c,118 :: 		for(i=0;i<6;i++,j++)
; i start address is: 12 (W6)
0x0B26	0x418361  	ADD	WREG3, #1, WREG6
; i end address is: 6 (W3)
0x0B28	0x9018EE  	MOV	[WREG14+60], WREG1
0x0B2A	0x2003C0  	MOV	#60, WREG0
0x0B2C	0x470000  	ADD	WREG14, WREG0, WREG0
0x0B2E	0x408861  	ADD	WREG1, #1, [WREG0]
;test.c,122 :: 		}
0x0B30	0x780186  	MOV	WREG6, WREG3
; i end address is: 12 (W6)
0x0B32	0x37FFE9  	BRA	L_main32
L_main33:
;test.c,123 :: 		txt2[j]='\t';
0x0B34	0x4700FC  	ADD	WREG14, #28, WREG1
0x0B36	0x2003C0  	MOV	#60, WREG0
0x0B38	0x470000  	ADD	WREG14, WREG0, WREG0
0x0B3A	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0B3C	0xB3C090  	MOV.B	#9, WREG0
0x0B3E	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,124 :: 		txt1[j]  =',';
0x0B40	0x4700E0  	ADD	WREG14, #0, WREG1
0x0B42	0x2003C0  	MOV	#60, WREG0
0x0B44	0x470000  	ADD	WREG14, WREG0, WREG0
0x0B46	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0B48	0xB3C2C0  	MOV.B	#44, WREG0
0x0B4A	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,125 :: 		j++;
0x0B4C	0x9018EE  	MOV	[WREG14+60], WREG1
0x0B4E	0x2003C0  	MOV	#60, WREG0
0x0B50	0x470000  	ADD	WREG14, WREG0, WREG0
0x0B52	0x408861  	ADD	WREG1, #1, [WREG0]
;test.c,130 :: 		a = ADC1_Get_Sample(1);
0x0B54	0x20001A  	MOV	#1, WREG10
0x0B56	0x07FF30  	RCALL	_ADC1_Get_Sample
; a start address is: 4 (W2)
0x0B58	0x780100  	MOV	WREG0, WREG2
0x0B5A	0xEB0180  	CLR	WREG3
;test.c,131 :: 		y=0.024*a;
0x0B5C	0xBE0002  	MOV.D	WREG2, WREG0
0x0B5E	0xEB8100  	SETM	WREG2
0x0B60	0x07FD01  	RCALL	__Long2Float
; a end address is: 4 (W2)
0x0B62	0x29BA62  	MOV	#39846, WREG2
0x0B64	0x23CC43  	MOV	#15556, WREG3
0x0B66	0x07FD59  	RCALL	__Mul_FP
;test.c,132 :: 		IntToStr(y,txt);
0x0B68	0x2003E2  	MOV	#62, WREG2
0x0B6A	0x470102  	ADD	WREG14, WREG2, WREG2
0x0B6C	0x982762  	MOV	WREG2, [WREG14+76]
0x0B6E	0x07FC91  	RCALL	__Float2Longint
0x0B70	0x9020EE  	MOV	[WREG14+76], WREG1
0x0B72	0x780581  	MOV	WREG1, WREG11
0x0B74	0x780500  	MOV	WREG0, WREG10
0x0B76	0x07FCC9  	RCALL	_IntToStr
;test.c,134 :: 		for(i=0;i<6;i++,j++)
; i start address is: 12 (W6)
; i start address is: 12 (W6)
0x0B78	0xEF200C  	CLR	WREG6
; i end address is: 12 (W6)
; i end address is: 12 (W6)
0x0B7A	0x780186  	MOV	WREG6, WREG3
L_main35:
; i start address is: 6 (W3)
0x0B7C	0xE11866  	CP	WREG3, #6
0x0B7E	0x310015  	BRA GEU	L_main36
L__main56:
;test.c,136 :: 		txt1[j]=txt[i];
0x0B80	0x4700E0  	ADD	WREG14, #0, WREG1
0x0B82	0x2003C0  	MOV	#60, WREG0
0x0B84	0x470000  	ADD	WREG14, WREG0, WREG0
0x0B86	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0B88	0x2003E2  	MOV	#62, WREG2
0x0B8A	0x470102  	ADD	WREG14, WREG2, WREG2
0x0B8C	0x410003  	ADD	WREG2, WREG3, WREG0
0x0B8E	0x784890  	MOV.B	[WREG0], [WREG1]
;test.c,137 :: 		txt2[j]=txt[i];
0x0B90	0x4700FC  	ADD	WREG14, #28, WREG1
0x0B92	0x2003C0  	MOV	#60, WREG0
0x0B94	0x470000  	ADD	WREG14, WREG0, WREG0
0x0B96	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0B98	0x410003  	ADD	WREG2, WREG3, WREG0
0x0B9A	0x784890  	MOV.B	[WREG0], [WREG1]
;test.c,134 :: 		for(i=0;i<6;i++,j++)
; i start address is: 12 (W6)
0x0B9C	0x418361  	ADD	WREG3, #1, WREG6
; i end address is: 6 (W3)
0x0B9E	0x9018EE  	MOV	[WREG14+60], WREG1
0x0BA0	0x2003C0  	MOV	#60, WREG0
0x0BA2	0x470000  	ADD	WREG14, WREG0, WREG0
0x0BA4	0x408861  	ADD	WREG1, #1, [WREG0]
;test.c,138 :: 		}
0x0BA6	0x780186  	MOV	WREG6, WREG3
; i end address is: 12 (W6)
0x0BA8	0x37FFE9  	BRA	L_main35
L_main36:
;test.c,139 :: 		txt2[j]='\t';
0x0BAA	0x4700FC  	ADD	WREG14, #28, WREG1
0x0BAC	0x2003C0  	MOV	#60, WREG0
0x0BAE	0x470000  	ADD	WREG14, WREG0, WREG0
0x0BB0	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0BB2	0xB3C090  	MOV.B	#9, WREG0
0x0BB4	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,140 :: 		txt1[j]  =',';
0x0BB6	0x4700E0  	ADD	WREG14, #0, WREG1
0x0BB8	0x2003C0  	MOV	#60, WREG0
0x0BBA	0x470000  	ADD	WREG14, WREG0, WREG0
0x0BBC	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0BBE	0xB3C2C0  	MOV.B	#44, WREG0
0x0BC0	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,141 :: 		j++;
0x0BC2	0x9018EE  	MOV	[WREG14+60], WREG1
0x0BC4	0x2003C0  	MOV	#60, WREG0
0x0BC6	0x470000  	ADD	WREG14, WREG0, WREG0
0x0BC8	0x408861  	ADD	WREG1, #1, [WREG0]
;test.c,144 :: 		a = ADC1_Get_Sample(4);
0x0BCA	0x20004A  	MOV	#4, WREG10
0x0BCC	0x07FEF5  	RCALL	_ADC1_Get_Sample
; a start address is: 4 (W2)
0x0BCE	0x780100  	MOV	WREG0, WREG2
0x0BD0	0xEB0180  	CLR	WREG3
;test.c,145 :: 		z=a*a;
0x0BD2	0xBE9F82  	PUSH.D	WREG2
0x0BD4	0xBE0002  	MOV.D	WREG2, WREG0
0x0BD6	0x07FB14  	RCALL	__Multiply_32x32
0x0BD8	0xEB8100  	SETM	WREG2
0x0BDA	0x07FCC4  	RCALL	__Long2Float
;test.c,146 :: 		y=0.0000031*z-0.038*a+130;
0x0BDC	0x209982  	MOV	#2456, WREG2
0x0BDE	0x236503  	MOV	#13904, WREG3
0x0BE0	0x07FD1C  	RCALL	__Mul_FP
0x0BE2	0xBE014F  	POP.D	WREG2
0x0BE4	0x982760  	MOV	WREG0, [WREG14+76]
0x0BE6	0x982771  	MOV	WREG1, [WREG14+78]
0x0BE8	0xBE0002  	MOV.D	WREG2, WREG0
0x0BEA	0xEB8100  	SETM	WREG2
0x0BEC	0x07FCBB  	RCALL	__Long2Float
; a end address is: 4 (W2)
0x0BEE	0x2A5E32  	MOV	#42467, WREG2
0x0BF0	0x23D1B3  	MOV	#15643, WREG3
0x0BF2	0x07FD13  	RCALL	__Mul_FP
0x0BF4	0x982720  	MOV	WREG0, [WREG14+68]
0x0BF6	0x982731  	MOV	WREG1, [WREG14+70]
0x0BF8	0x90212E  	MOV	[WREG14+68], WREG2
0x0BFA	0x9021BE  	MOV	[WREG14+70], WREG3
0x0BFC	0x90206E  	MOV	[WREG14+76], WREG0
0x0BFE	0x9020FE  	MOV	[WREG14+78], WREG1
0x0C00	0x07FCAC  	RCALL	__Sub_FP
0x0C02	0x200002  	MOV	#0, WREG2
0x0C04	0x243023  	MOV	#17154, WREG3
0x0C06	0x07FB85  	RCALL	__AddSub_FP
;test.c,147 :: 		IntToStr(y,txt);
0x0C08	0x2003E2  	MOV	#62, WREG2
0x0C0A	0x470102  	ADD	WREG14, WREG2, WREG2
0x0C0C	0x982762  	MOV	WREG2, [WREG14+76]
0x0C0E	0x07FC41  	RCALL	__Float2Longint
0x0C10	0x9020EE  	MOV	[WREG14+76], WREG1
0x0C12	0x780581  	MOV	WREG1, WREG11
0x0C14	0x780500  	MOV	WREG0, WREG10
0x0C16	0x07FC79  	RCALL	_IntToStr
;test.c,149 :: 		for(i=0;i<6;i++,j++)
; i start address is: 6 (W3)
; i start address is: 6 (W3)
0x0C18	0xEF2006  	CLR	WREG3
; i end address is: 6 (W3)
; i end address is: 6 (W3)
L_main38:
; i start address is: 6 (W3)
0x0C1A	0xE11866  	CP	WREG3, #6
0x0C1C	0x310015  	BRA GEU	L_main39
L__main57:
;test.c,151 :: 		txt1[j]=txt[i];
0x0C1E	0x4700E0  	ADD	WREG14, #0, WREG1
0x0C20	0x2003C0  	MOV	#60, WREG0
0x0C22	0x470000  	ADD	WREG14, WREG0, WREG0
0x0C24	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0C26	0x2003E2  	MOV	#62, WREG2
0x0C28	0x470102  	ADD	WREG14, WREG2, WREG2
0x0C2A	0x410003  	ADD	WREG2, WREG3, WREG0
0x0C2C	0x784890  	MOV.B	[WREG0], [WREG1]
;test.c,152 :: 		txt2[j]=txt[i];
0x0C2E	0x4700FC  	ADD	WREG14, #28, WREG1
0x0C30	0x2003C0  	MOV	#60, WREG0
0x0C32	0x470000  	ADD	WREG14, WREG0, WREG0
0x0C34	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0C36	0x410003  	ADD	WREG2, WREG3, WREG0
0x0C38	0x784890  	MOV.B	[WREG0], [WREG1]
;test.c,149 :: 		for(i=0;i<6;i++,j++)
; i start address is: 12 (W6)
0x0C3A	0x418361  	ADD	WREG3, #1, WREG6
; i end address is: 6 (W3)
0x0C3C	0x9018EE  	MOV	[WREG14+60], WREG1
0x0C3E	0x2003C0  	MOV	#60, WREG0
0x0C40	0x470000  	ADD	WREG14, WREG0, WREG0
0x0C42	0x408861  	ADD	WREG1, #1, [WREG0]
;test.c,153 :: 		}
0x0C44	0x780186  	MOV	WREG6, WREG3
; i end address is: 12 (W6)
0x0C46	0x37FFE9  	BRA	L_main38
L_main39:
;test.c,154 :: 		txt2[j]='\t';
0x0C48	0x4700FC  	ADD	WREG14, #28, WREG1
0x0C4A	0x2003C0  	MOV	#60, WREG0
0x0C4C	0x470000  	ADD	WREG14, WREG0, WREG0
0x0C4E	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0C50	0xB3C090  	MOV.B	#9, WREG0
0x0C52	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,155 :: 		txt1[j]  =',';
0x0C54	0x4700E0  	ADD	WREG14, #0, WREG1
0x0C56	0x2003C0  	MOV	#60, WREG0
0x0C58	0x470000  	ADD	WREG14, WREG0, WREG0
0x0C5A	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0C5C	0xB3C2C0  	MOV.B	#44, WREG0
0x0C5E	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,156 :: 		j++;
0x0C60	0x9018EE  	MOV	[WREG14+60], WREG1
0x0C62	0x2003C0  	MOV	#60, WREG0
0x0C64	0x470000  	ADD	WREG14, WREG0, WREG0
0x0C66	0x408861  	ADD	WREG1, #1, [WREG0]
;test.c,160 :: 		a = ADC1_Get_Sample(3);
0x0C68	0x20003A  	MOV	#3, WREG10
0x0C6A	0x07FEA6  	RCALL	_ADC1_Get_Sample
; a start address is: 4 (W2)
0x0C6C	0x780100  	MOV	WREG0, WREG2
0x0C6E	0xEB0180  	CLR	WREG3
;test.c,161 :: 		y=2.9*a;
0x0C70	0xBE0002  	MOV.D	WREG2, WREG0
0x0C72	0xEB8100  	SETM	WREG2
0x0C74	0x07FC77  	RCALL	__Long2Float
; a end address is: 4 (W2)
0x0C76	0x2999A2  	MOV	#39322, WREG2
0x0C78	0x240393  	MOV	#16441, WREG3
0x0C7A	0x07FCCF  	RCALL	__Mul_FP
;test.c,162 :: 		IntToStr(y,txt);
0x0C7C	0x2003E2  	MOV	#62, WREG2
0x0C7E	0x470102  	ADD	WREG14, WREG2, WREG2
0x0C80	0x982762  	MOV	WREG2, [WREG14+76]
0x0C82	0x07FC07  	RCALL	__Float2Longint
0x0C84	0x9020EE  	MOV	[WREG14+76], WREG1
0x0C86	0x780581  	MOV	WREG1, WREG11
0x0C88	0x780500  	MOV	WREG0, WREG10
0x0C8A	0x07FC3F  	RCALL	_IntToStr
;test.c,164 :: 		for(i=0;i<6;i++,j++)
; i start address is: 12 (W6)
; i start address is: 12 (W6)
0x0C8C	0xEF200C  	CLR	WREG6
; i end address is: 12 (W6)
; i end address is: 12 (W6)
0x0C8E	0x780186  	MOV	WREG6, WREG3
L_main41:
; i start address is: 6 (W3)
0x0C90	0xE11866  	CP	WREG3, #6
0x0C92	0x310015  	BRA GEU	L_main42
L__main58:
;test.c,166 :: 		txt1[j]=txt[i];
0x0C94	0x4700E0  	ADD	WREG14, #0, WREG1
0x0C96	0x2003C0  	MOV	#60, WREG0
0x0C98	0x470000  	ADD	WREG14, WREG0, WREG0
0x0C9A	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0C9C	0x2003E2  	MOV	#62, WREG2
0x0C9E	0x470102  	ADD	WREG14, WREG2, WREG2
0x0CA0	0x410003  	ADD	WREG2, WREG3, WREG0
0x0CA2	0x784890  	MOV.B	[WREG0], [WREG1]
;test.c,167 :: 		txt2[j]=txt[i];
0x0CA4	0x4700FC  	ADD	WREG14, #28, WREG1
0x0CA6	0x2003C0  	MOV	#60, WREG0
0x0CA8	0x470000  	ADD	WREG14, WREG0, WREG0
0x0CAA	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0CAC	0x410003  	ADD	WREG2, WREG3, WREG0
0x0CAE	0x784890  	MOV.B	[WREG0], [WREG1]
;test.c,164 :: 		for(i=0;i<6;i++,j++)
; i start address is: 12 (W6)
0x0CB0	0x418361  	ADD	WREG3, #1, WREG6
; i end address is: 6 (W3)
0x0CB2	0x9018EE  	MOV	[WREG14+60], WREG1
0x0CB4	0x2003C0  	MOV	#60, WREG0
0x0CB6	0x470000  	ADD	WREG14, WREG0, WREG0
0x0CB8	0x408861  	ADD	WREG1, #1, [WREG0]
;test.c,168 :: 		}
0x0CBA	0x780186  	MOV	WREG6, WREG3
; i end address is: 12 (W6)
0x0CBC	0x37FFE9  	BRA	L_main41
L_main42:
;test.c,169 :: 		txt2[j]='\t';
0x0CBE	0x4700FC  	ADD	WREG14, #28, WREG1
0x0CC0	0x2003C0  	MOV	#60, WREG0
0x0CC2	0x470000  	ADD	WREG14, WREG0, WREG0
0x0CC4	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0CC6	0xB3C090  	MOV.B	#9, WREG0
0x0CC8	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,170 :: 		txt1[j]  ='\n';
0x0CCA	0x4700E0  	ADD	WREG14, #0, WREG1
0x0CCC	0x2003C0  	MOV	#60, WREG0
0x0CCE	0x470000  	ADD	WREG14, WREG0, WREG0
0x0CD0	0x408090  	ADD	WREG1, [WREG0], WREG1
0x0CD2	0xB3C0A0  	MOV.B	#10, WREG0
0x0CD4	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,175 :: 		while(RD0_bit);
L_main44:
0x0CD6	0xAE02D4  	BTSS	RD0_bit, #0
0x0CD8	0x370001  	BRA	L_main45
0x0CDA	0x37FFFD  	BRA	L_main44
L_main45:
;test.c,177 :: 		PORTG=0x1000;
0x0CDC	0x210000  	MOV	#4096, WREG0
0x0CDE	0xB7A2E6  	MOV	WREG, PORTG
;test.c,179 :: 		UART2_Write_Text("WRF 28");
0x0CE0	0x20815A  	MOV	#lo_addr(?lstr6_test), WREG10
0x0CE2	0x07FE82  	RCALL	_UART2_Write_Text
;test.c,180 :: 		UART2_Write('\r');
0x0CE4	0x2000DA  	MOV	#13, WREG10
0x0CE6	0x07FE91  	RCALL	_UART2_Write
;test.c,181 :: 		for(i=0;i<28;i++)
; i start address is: 2 (W1)
; i start address is: 2 (W1)
0x0CE8	0xEF2002  	CLR	WREG1
; i end address is: 2 (W1)
; i end address is: 2 (W1)
L_main46:
; i start address is: 2 (W1)
0x0CEA	0xE1087C  	CP	WREG1, #28
0x0CEC	0x31000B  	BRA GEU	L_main47
L__main59:
;test.c,183 :: 		UART2_Write(txt1[i]);
0x0CEE	0x470060  	ADD	WREG14, #0, WREG0
0x0CF0	0x400001  	ADD	WREG0, WREG1, WREG0
0x0CF2	0xFB8510  	ZE	[WREG0], WREG10
0x0CF4	0x07FE8A  	RCALL	_UART2_Write
;test.c,184 :: 		UART1_Write(txt2[i]);
0x0CF6	0x47007C  	ADD	WREG14, #28, WREG0
0x0CF8	0x400001  	ADD	WREG0, WREG1, WREG0
0x0CFA	0xFB8510  	ZE	[WREG0], WREG10
0x0CFC	0x07FBC3  	RCALL	_UART1_Write
;test.c,181 :: 		for(i=0;i<28;i++)
; i start address is: 6 (W3)
0x0CFE	0x4081E1  	ADD	WREG1, #1, WREG3
; i end address is: 2 (W1)
;test.c,185 :: 		}
0x0D00	0x780083  	MOV	WREG3, WREG1
; i end address is: 6 (W3)
0x0D02	0x37FFF3  	BRA	L_main46
L_main47:
;test.c,186 :: 		UART2_Write('\r');
0x0D04	0x2000DA  	MOV	#13, WREG10
0x0D06	0x07FE81  	RCALL	_UART2_Write
;test.c,188 :: 		c++;
0x0D08	0x9018CE  	MOV	[WREG14+56], WREG1
0x0D0A	0x90195E  	MOV	[WREG14+58], WREG2
0x0D0C	0x200380  	MOV	#56, WREG0
0x0D0E	0x470000  	ADD	WREG14, WREG0, WREG0
0x0D10	0x409861  	ADD	WREG1, #1, [WREG0++]
0x0D12	0x491060  	ADDC	WREG2, #0, [WREG0--]
;test.c,190 :: 		}
0x0D14	0x37FEDB  	BRA	L_main30
L_main31:
;test.c,192 :: 		while(RD0_bit);
L_main49:
0x0D16	0xAE02D4  	BTSS	RD0_bit, #0
0x0D18	0x370001  	BRA	L_main50
0x0D1A	0x37FFFD  	BRA	L_main49
L_main50:
;test.c,194 :: 		UART2_Write_Text("CLF test.csv");
0x0D1C	0x20829A  	MOV	#lo_addr(?lstr7_test), WREG10
0x0D1E	0x07FE64  	RCALL	_UART2_Write_Text
;test.c,195 :: 		UART2_Write('\r');
0x0D20	0x2000DA  	MOV	#13, WREG10
0x0D22	0x07FE73  	RCALL	_UART2_Write
;test.c,196 :: 		}
0x0D24	0x37FEC8  	BRA	L_main26
;test.c,198 :: 		}
L_end_main:
0x0D26	0xFA8000  	ULNK
L__main60:
0x0D28	0x37FFFF  	BRA	L__main60
; end of _main
_ADC1_Init_Advanced:
0x08A0	0xFA0000  	LNK	#0
;__Lib_ADC_12_p24HJ_p33.c,51 :: 		
;__Lib_ADC_12_p24HJ_p33.c,52 :: 		
0x08A2	0x209B80  	MOV	#lo_addr(_ADC1_Get_Sample), WREG0
0x08A4	0x8841D0  	MOV	WREG0, _ADC_Get_Sample_Ptr
;__Lib_ADC_12_p24HJ_p33.c,54 :: 		
0x08A6	0x200E00  	MOV	#224, WREG0
0x08A8	0xB7A320  	MOV	WREG, AD1CON1
;__Lib_ADC_12_p24HJ_p33.c,55 :: 		
0x08AA	0xDD50CA  	SL	WREG10, #10, WREG1
0x08AC	0x203200  	MOV	#lo_addr(AD1CON1), WREG0
0x08AE	0x708810  	IOR	WREG1, [WREG0], [WREG0]
;__Lib_ADC_12_p24HJ_p33.c,57 :: 		
0x08B0	0x2E0001  	MOV	#57344, WREG1
0x08B2	0x203220  	MOV	#lo_addr(AD1CON2), WREG0
0x08B4	0x658801  	AND	WREG11, WREG1, [WREG0]
;__Lib_ADC_12_p24HJ_p33.c,58 :: 		
0x08B6	0x21F3F0  	MOV	#7999, WREG0
0x08B8	0xB7A324  	MOV	WREG, AD1CON3
;__Lib_ADC_12_p24HJ_p33.c,59 :: 		
0x08BA	0xEF2332  	CLR	AD1CON4
;__Lib_ADC_12_p24HJ_p33.c,60 :: 		
0x08BC	0xEF2330  	CLR	AD1CSSL
;__Lib_ADC_12_p24HJ_p33.c,61 :: 		
0x08BE	0xEF232E  	CLR	AD1CSSH
;__Lib_ADC_12_p24HJ_p33.c,62 :: 		
0x08C0	0xA8E321  	BSET	AD1CON1, #15
;__Lib_ADC_12_p24HJ_p33.c,63 :: 		
L_end_ADC1_Init_Advanced:
0x08C2	0xFA8000  	ULNK
0x08C4	0x060000  	RETURN
; end of _ADC1_Init_Advanced
_pll_init:
;test.c,5 :: 		void pll_init(void)
;test.c,7 :: 		CLKLOCK_bit=0;
0x0826	0xA9E742  	BCLR	CLKLOCK_bit, #7
;test.c,8 :: 		PORTG=0xffff;
0x0828	0x2FFFF0  	MOV	#65535, WREG0
0x082A	0xB7A2E6  	MOV	WREG, PORTG
;test.c,9 :: 		Hi(OSCCON)=0x78;
0x082C	0x207431  	MOV	#lo_addr(OSCCON+1), WREG1
0x082E	0xB3C780  	MOV.B	#120, WREG0
0x0830	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,10 :: 		Hi(OSCCON)=0x9A;
0x0832	0x207431  	MOV	#lo_addr(OSCCON+1), WREG1
0x0834	0xB3C9A0  	MOV.B	#154, WREG0
0x0836	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,11 :: 		OSCCONbits.NOSC=0x03;
0x0838	0x203000  	MOV	#768, WREG0
0x083A	0x780080  	MOV	WREG0, WREG1
0x083C	0x207420  	MOV	#lo_addr(OSCCONbits), WREG0
0x083E	0x688090  	XOR	WREG1, [WREG0], WREG1
0x0840	0x207000  	MOV	#1792, WREG0
0x0842	0x608080  	AND	WREG1, WREG0, WREG1
0x0844	0x207420  	MOV	#lo_addr(OSCCONbits), WREG0
0x0846	0x688090  	XOR	WREG1, [WREG0], WREG1
0x0848	0x883A11  	MOV	WREG1, OSCCONbits
;test.c,12 :: 		Lo(OSCCON)=0x46;
0x084A	0x207421  	MOV	#lo_addr(OSCCON), WREG1
0x084C	0xB3C460  	MOV.B	#70, WREG0
0x084E	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,13 :: 		Lo(OSCCON)=0x57;
0x0850	0x207421  	MOV	#lo_addr(OSCCON), WREG1
0x0852	0xB3C570  	MOV.B	#87, WREG0
0x0854	0x784880  	MOV.B	WREG0, [WREG1]
;test.c,14 :: 		CLKDIVbits.PLLPRE=0;
0x0856	0x207440  	MOV	#lo_addr(CLKDIVbits), WREG0
0x0858	0x784090  	MOV.B	[WREG0], WREG1
0x085A	0xB3CE00  	MOV.B	#224, WREG0
0x085C	0x60C080  	AND.B	WREG1, WREG0, WREG1
0x085E	0x207440  	MOV	#lo_addr(CLKDIVbits), WREG0
0x0860	0x784801  	MOV.B	WREG1, [WREG0]
;test.c,15 :: 		CLKDIVbits.PLLPOST=0;
0x0862	0x207440  	MOV	#lo_addr(CLKDIVbits), WREG0
0x0864	0x784090  	MOV.B	[WREG0], WREG1
0x0866	0xB3C3F0  	MOV.B	#63, WREG0
0x0868	0x60C080  	AND.B	WREG1, WREG0, WREG1
0x086A	0x207440  	MOV	#lo_addr(CLKDIVbits), WREG0
0x086C	0x784801  	MOV.B	WREG1, [WREG0]
;test.c,16 :: 		PLLFBDbits.PLLDIV=0x1E;
0x086E	0x2001E0  	MOV	#30, WREG0
0x0870	0x780080  	MOV	WREG0, WREG1
0x0872	0x207460  	MOV	#lo_addr(PLLFBDbits), WREG0
0x0874	0x688090  	XOR	WREG1, [WREG0], WREG1
0x0876	0x201FF0  	MOV	#511, WREG0
0x0878	0x608080  	AND	WREG1, WREG0, WREG1
0x087A	0x207460  	MOV	#lo_addr(PLLFBDbits), WREG0
0x087C	0x688090  	XOR	WREG1, [WREG0], WREG1
0x087E	0x883A31  	MOV	WREG1, PLLFBDbits
;test.c,17 :: 		OSWEN_bit=1;
0x0880	0xA80742  	BSET	OSWEN_bit, #0
;test.c,18 :: 		delay_ms(100);
0x0882	0x200158  	MOV	#21, WREG8
0x0884	0x2585B7  	MOV	#22619, WREG7
L_pll_init0:
0x0886	0xED200E  	DEC	WREG7
0x0888	0x3AFFFE  	BRA NZ	L_pll_init0
0x088A	0xED2010  	DEC	WREG8
0x088C	0x3AFFFC  	BRA NZ	L_pll_init0
;test.c,19 :: 		while(OSWEN_bit==1);
L_pll_init2:
0x088E	0xAE0742  	BTSS	OSWEN_bit, #0
0x0890	0x370001  	BRA	L_pll_init3
0x0892	0x37FFFD  	BRA	L_pll_init2
L_pll_init3:
;test.c,20 :: 		PORTG=0x2000;
0x0894	0x220000  	MOV	#8192, WREG0
0x0896	0xB7A2E6  	MOV	WREG, PORTG
;test.c,21 :: 		while(LOCK_bit==0);
L_pll_init4:
0x0898	0xAFA742  	BTSC	LOCK_bit, #5
0x089A	0x370001  	BRA	L_pll_init5
0x089C	0x37FFFD  	BRA	L_pll_init4
L_pll_init5:
;test.c,22 :: 		}
L_end_pll_init:
0x089E	0x060000  	RETURN
; end of _pll_init
_UART2_Init:
0x0734	0xFA0008  	LNK	#8
;__Lib_UART_12_p24_p33.c,392 :: 		
;__Lib_UART_12_p24_p33.c,395 :: 		
0x0736	0x20A0A0  	MOV	#lo_addr(_UART2_Write), WREG0
0x0738	0x8841C0  	MOV	WREG0, _UART_Wr_Ptr
;__Lib_UART_12_p24_p33.c,396 :: 		
0x073A	0x2FFFF0  	MOV	#lo_addr(_UART2_Read), WREG0
0x073C	0x8841B0  	MOV	WREG0, _UART_Rd_Ptr
;__Lib_UART_12_p24_p33.c,397 :: 		
0x073E	0x2FFFF0  	MOV	#lo_addr(_UART2_Data_Ready), WREG0
0x0740	0x8841F0  	MOV	WREG0, _UART_Rdy_Ptr
;__Lib_UART_12_p24_p33.c,398 :: 		
0x0742	0x2FFFF0  	MOV	#lo_addr(_UART2_Tx_Idle), WREG0
0x0744	0x8841E0  	MOV	WREG0, _UART_Tx_Idle_Ptr
;__Lib_UART_12_p24_p33.c,403 :: 		
0x0746	0xEF2230  	CLR	U2MODE
;__Lib_UART_12_p24_p33.c,404 :: 		
0x0748	0x280000  	MOV	#32768, WREG0
0x074A	0xB7A232  	MOV	WREG, U2STA
;__Lib_UART_12_p24_p33.c,408 :: 		
0x074C	0xA96230  	BCLR	U2MODE, #3
;__Lib_UART_12_p24_p33.c,409 :: 		
0x074E	0x07FE97  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x0750	0xBE0100  	MOV.D	WREG0, WREG2
;__Lib_UART_12_p24_p33.c,411 :: 		
0x0752	0x203E80  	MOV	#1000, WREG0
0x0754	0x200001  	MOV	#0, WREG1
0x0756	0x07FD54  	RCALL	__Multiply_32x32
0x0758	0xBE0100  	MOV.D	WREG0, WREG2
;__Lib_UART_12_p24_p33.c,413 :: 		
0x075A	0x200051  	MOV	#5, WREG1
0x075C	0x470060  	ADD	WREG14, #0, WREG0
0x075E	0xBE880A  	MOV.D	WREG10, [WREG0]
L__UART2_Init110:
0x0760	0xE90081  	DEC	WREG1, WREG1
0x0762	0x350003  	BRA LT	L__UART2_Init111
0x0764	0xD01810  	SL	[WREG0], [WREG0++]
0x0766	0xD29010  	RLC	[WREG0], [WREG0--]
0x0768	0x37FFFB  	BRA	L__UART2_Init110
L__UART2_Init111:
;__Lib_UART_12_p24_p33.c,415 :: 		
0x076A	0xBE9F82  	PUSH.D	WREG2
0x076C	0xBE9F8A  	PUSH.D	WREG10
0x076E	0xBE0002  	MOV.D	WREG2, WREG0
0x0770	0x90010E  	MOV	[WREG14+0], WREG2
0x0772	0x90019E  	MOV	[WREG14+2], WREG3
0x0774	0xEB0200  	CLR	WREG4
0x0776	0x07FD54  	RCALL	__Modulus_32x32
0x0778	0xBE054F  	POP.D	WREG10
0x077A	0xBE014F  	POP.D	WREG2
0x077C	0x980720  	MOV	WREG0, [WREG14+4]
0x077E	0x980731  	MOV	WREG1, [WREG14+6]
;__Lib_UART_12_p24_p33.c,416 :: 		
0x0780	0xBE9F8A  	PUSH.D	WREG10
; tmp end address is: 4 (W2)
0x0782	0xBE0002  	MOV.D	WREG2, WREG0
0x0784	0x90010E  	MOV	[WREG14+0], WREG2
0x0786	0x90019E  	MOV	[WREG14+2], WREG3
0x0788	0xEB0200  	CLR	WREG4
0x078A	0x07FD9A  	RCALL	__Divide_32x32
0x078C	0xBE054F  	POP.D	WREG10
; tmp start address is: 6 (W3)
0x078E	0x780180  	MOV	WREG0, WREG3
0x0790	0x780201  	MOV	WREG1, WREG4
;__Lib_UART_12_p24_p33.c,418 :: 		
0x0792	0x470060  	ADD	WREG14, #0, WREG0
0x0794	0x7800B0  	MOV	[WREG0++], WREG1
0x0796	0x780120  	MOV	[WREG0--], WREG2
0x0798	0xD10102  	LSR	WREG2, WREG2
0x079A	0xD38081  	RRC	WREG1, WREG1
0x079C	0x470064  	ADD	WREG14, #4, WREG0
0x079E	0xE10830  	CP	WREG1, [WREG0++]
0x07A0	0xE19020  	CPB	WREG2, [WREG0--]
0x07A2	0x310004  	BRA GEU	L__UART2_Init55
L__UART2_Init112:
;__Lib_UART_12_p24_p33.c,419 :: 		
0x07A4	0x418061  	ADD	WREG3, #1, WREG0
0x07A6	0x4A00E0  	ADDC	WREG4, #0, WREG1
; tmp end address is: 6 (W3)
; tmp start address is: 4 (W2)
; tmp start address is: 4 (W2)
0x07A8	0xBE0100  	MOV.D	WREG0, WREG2
; tmp end address is: 4 (W2)
; tmp end address is: 4 (W2)
0x07AA	0x370002  	BRA	L_UART2_Init38
L__UART2_Init55:
;__Lib_UART_12_p24_p33.c,418 :: 		
0x07AC	0x780103  	MOV	WREG3, WREG2
0x07AE	0x780184  	MOV	WREG4, WREG3
;__Lib_UART_12_p24_p33.c,419 :: 		
L_UART2_Init38:
;__Lib_UART_12_p24_p33.c,422 :: 		
; tmp start address is: 4 (W2)
0x07B0	0x718002  	IOR	WREG3, WREG2, WREG0
0x07B2	0x3A002F  	BRA NZ	L__UART2_Init57
L__UART2_Init113:
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,424 :: 		
0x07B4	0x07FE64  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x07B6	0xBE0100  	MOV.D	WREG0, WREG2
;__Lib_UART_12_p24_p33.c,426 :: 		
0x07B8	0x203E80  	MOV	#1000, WREG0
0x07BA	0x200001  	MOV	#0, WREG1
0x07BC	0x07FD21  	RCALL	__Multiply_32x32
0x07BE	0xBE0100  	MOV.D	WREG0, WREG2
;__Lib_UART_12_p24_p33.c,428 :: 		
0x07C0	0x200031  	MOV	#3, WREG1
0x07C2	0x470060  	ADD	WREG14, #0, WREG0
0x07C4	0xBE880A  	MOV.D	WREG10, [WREG0]
L__UART2_Init114:
0x07C6	0xE90081  	DEC	WREG1, WREG1
0x07C8	0x350003  	BRA LT	L__UART2_Init115
0x07CA	0xD01810  	SL	[WREG0], [WREG0++]
0x07CC	0xD29010  	RLC	[WREG0], [WREG0--]
0x07CE	0x37FFFB  	BRA	L__UART2_Init114
L__UART2_Init115:
;__Lib_UART_12_p24_p33.c,430 :: 		
0x07D0	0xBE9F82  	PUSH.D	WREG2
0x07D2	0xBE0002  	MOV.D	WREG2, WREG0
0x07D4	0x90010E  	MOV	[WREG14+0], WREG2
0x07D6	0x90019E  	MOV	[WREG14+2], WREG3
0x07D8	0xEB0200  	CLR	WREG4
0x07DA	0x07FD22  	RCALL	__Modulus_32x32
0x07DC	0xBE014F  	POP.D	WREG2
0x07DE	0x980720  	MOV	WREG0, [WREG14+4]
0x07E0	0x980731  	MOV	WREG1, [WREG14+6]
;__Lib_UART_12_p24_p33.c,431 :: 		
0x07E2	0xBE0002  	MOV.D	WREG2, WREG0
0x07E4	0x90010E  	MOV	[WREG14+0], WREG2
0x07E6	0x90019E  	MOV	[WREG14+2], WREG3
0x07E8	0xEB0200  	CLR	WREG4
0x07EA	0x07FD6A  	RCALL	__Divide_32x32
; tmp end address is: 4 (W2)
; tmp start address is: 6 (W3)
0x07EC	0x780180  	MOV	WREG0, WREG3
0x07EE	0x780201  	MOV	WREG1, WREG4
;__Lib_UART_12_p24_p33.c,433 :: 		
0x07F0	0x470060  	ADD	WREG14, #0, WREG0
0x07F2	0x7800B0  	MOV	[WREG0++], WREG1
0x07F4	0x780120  	MOV	[WREG0--], WREG2
0x07F6	0xD10102  	LSR	WREG2, WREG2
0x07F8	0xD38081  	RRC	WREG1, WREG1
0x07FA	0x470064  	ADD	WREG14, #4, WREG0
0x07FC	0xE10830  	CP	WREG1, [WREG0++]
0x07FE	0xE19020  	CPB	WREG2, [WREG0--]
0x0800	0x310004  	BRA GEU	L__UART2_Init56
L__UART2_Init116:
;__Lib_UART_12_p24_p33.c,434 :: 		
0x0802	0x418061  	ADD	WREG3, #1, WREG0
0x0804	0x4A00E0  	ADDC	WREG4, #0, WREG1
; tmp end address is: 6 (W3)
; tmp start address is: 4 (W2)
; tmp start address is: 4 (W2)
0x0806	0xBE0100  	MOV.D	WREG0, WREG2
; tmp end address is: 4 (W2)
; tmp end address is: 4 (W2)
0x0808	0x370002  	BRA	L_UART2_Init40
L__UART2_Init56:
;__Lib_UART_12_p24_p33.c,433 :: 		
0x080A	0x780103  	MOV	WREG3, WREG2
0x080C	0x780184  	MOV	WREG4, WREG3
;__Lib_UART_12_p24_p33.c,434 :: 		
L_UART2_Init40:
;__Lib_UART_12_p24_p33.c,436 :: 		
; tmp start address is: 4 (W2)
0x080E	0xA86230  	BSET	U2MODE, #3
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,437 :: 		
0x0810	0x370000  	BRA	L_UART2_Init39
L__UART2_Init57:
;__Lib_UART_12_p24_p33.c,422 :: 		
;__Lib_UART_12_p24_p33.c,437 :: 		
L_UART2_Init39:
;__Lib_UART_12_p24_p33.c,439 :: 		
; tmp start address is: 4 (W2)
0x0812	0x510061  	SUB	WREG2, #1, WREG0
0x0814	0x5980E0  	SUBB	WREG3, #0, WREG1
; tmp end address is: 4 (W2)
; tmp start address is: 0 (W0)
0x0816	0x8811C0  	MOV	WREG0, U2BRG
; tmp end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,442 :: 		
0x0818	0xA92232  	BCLR	U2STA, #1
;__Lib_UART_12_p24_p33.c,444 :: 		
0x081A	0xA8E231  	BSET	U2MODE, #15
;__Lib_UART_12_p24_p33.c,445 :: 		
0x081C	0xA84233  	BSET	U2STA, #10
;__Lib_UART_12_p24_p33.c,447 :: 		
0x081E	0x07FCF9  	RCALL	_Delay_100ms
0x0820	0x07FCF8  	RCALL	_Delay_100ms
;__Lib_UART_12_p24_p33.c,449 :: 		
L_end_UART2_Init:
0x0822	0xFA8000  	ULNK
0x0824	0x060000  	RETURN
; end of _UART2_Init
_Get_Fosc_kHz:
;__Lib_Delays.c,38 :: 		unsigned long Get_Fosc_kHz() {
;__Lib_Delays.c,39 :: 		return Clock_kHz();
0x047E	0x238800  	MOV	#14464, WREG0
0x0480	0x200011  	MOV	#1, WREG1
;__Lib_Delays.c,40 :: 		}
L_end_Get_Fosc_kHz:
0x0482	0x060000  	RETURN
; end of _Get_Fosc_kHz
_Delay_100ms:
;__Lib_Delays.c,666 :: 		void Delay_100ms()
;__Lib_Delays.c,668 :: 		Delay_ms(100);
0x0212	0x200158  	MOV	#21, WREG8
0x0214	0x2585B7  	MOV	#22619, WREG7
L_Delay_100ms33:
0x0216	0xED200E  	DEC	WREG7
0x0218	0x3AFFFE  	BRA NZ	L_Delay_100ms33
0x021A	0xED2010  	DEC	WREG8
0x021C	0x3AFFFC  	BRA NZ	L_Delay_100ms33
;__Lib_Delays.c,669 :: 		}
L_end_Delay_100ms:
0x021E	0x060000  	RETURN
; end of _Delay_100ms
__Multiply_32x32:
0x0200	0xFA0000  	LNK	#0
;__Lib_Math.c,43 :: 		
;__Lib_Math.c,46 :: 		
0x0202	0xB80A02  	MUL.UU	WREG1, WREG2, WREG4
;__Lib_Math.c,47 :: 		
0x0204	0x880050  	MOV	WREG0, WREG5
;__Lib_Math.c,48 :: 		
0x0206	0xB80002  	MUL.UU	WREG0, WREG2, WREG0
;__Lib_Math.c,49 :: 		
0x0208	0x420081  	ADD	WREG4, WREG1, WREG1
;__Lib_Math.c,50 :: 		
0x020A	0xB82A03  	MUL.UU	WREG5, WREG3, WREG4
;__Lib_Math.c,51 :: 		
0x020C	0x420081  	ADD	WREG4, WREG1, WREG1
;__Lib_Math.c,54 :: 		
L_end__Multiply_32x32:
0x020E	0xFA8000  	ULNK
0x0210	0x060000  	RETURN
; end of __Multiply_32x32
__Modulus_32x32:
0x0220	0xFA0000  	LNK	#0
;__Lib_Math.c,162 :: 		
;__Lib_Math.c,164 :: 		
0x0222	0x070002  	RCALL	Modulus_32x32___testsus
;__Lib_Math.c,166 :: 		
0x0224	0x000000040274  	GOTO	the_end_Modulus_32x32
;__Lib_Math.c,171 :: 		
Modulus_32x32___testsus:
;__Lib_Math.c,172 :: 		
0x0228	0xE20008  	CP0	WREG4
;__Lib_Math.c,173 :: 		
0x022A	0x3A0002  	BRA NZ	Modulus_32x32___modsi3
;__Lib_Math.c,175 :: 		
0x022C	0x070010  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,176 :: 		
0x022E	0x060000  	RETURN
;__Lib_Math.c,178 :: 		
Modulus_32x32___modsi3:
;__Lib_Math.c,179 :: 		
0x0230	0x781F81  	MOV	WREG1, [WREG15++]
;__Lib_Math.c,180 :: 		
0x0232	0xE20002  	CP0	WREG1
;__Lib_Math.c,181 :: 		
0x0234	0x3D0002  	BRA GE	Modulus_32x32_modtestb
;__Lib_Math.c,182 :: 		
0x0236	0x100060  	SUBR	WREG0, #0, WREG0
;__Lib_Math.c,183 :: 		
0x0238	0x1880E0  	SUBBR	WREG1, #0, WREG1
;__Lib_Math.c,184 :: 		
Modulus_32x32_modtestb:
;__Lib_Math.c,185 :: 		
0x023A	0xE20006  	CP0	WREG3
;__Lib_Math.c,186 :: 		
0x023C	0x3D0002  	BRA GE	Modulus_32x32_calcrem
;__Lib_Math.c,187 :: 		
0x023E	0x110160  	SUBR	WREG2, #0, WREG2
;__Lib_Math.c,188 :: 		
0x0240	0x1981E0  	SUBBR	WREG3, #0, WREG3
;__Lib_Math.c,189 :: 		
Modulus_32x32_calcrem:
;__Lib_Math.c,190 :: 		
0x0242	0x070005  	RCALL	Modulus_32x32___umodsi3
;__Lib_Math.c,191 :: 		
0x0244	0xE0004F  	CP0	[--WREG15]
;__Lib_Math.c,192 :: 		
0x0246	0x3B0002  	BRA NN	Modulus_32x32_exitr
;__Lib_Math.c,193 :: 		
0x0248	0x100060  	SUBR	WREG0, #0, WREG0
;__Lib_Math.c,194 :: 		
0x024A	0x1880E0  	SUBBR	WREG1, #0, WREG1
;__Lib_Math.c,195 :: 		
Modulus_32x32_exitr:
;__Lib_Math.c,196 :: 		
0x024C	0x060000  	RETURN
;__Lib_Math.c,197 :: 		
Modulus_32x32___umodsi3:
;__Lib_Math.c,198 :: 		
0x024E	0x070002  	RCALL	Modulus_32x32___udivsi3
;__Lib_Math.c,199 :: 		
0x0250	0xBE8004  	MOV.D	WREG4, WREG0
;__Lib_Math.c,200 :: 		
0x0252	0x060000  	RETURN
;__Lib_Math.c,201 :: 		
Modulus_32x32___udivsi3:
;__Lib_Math.c,202 :: 		
0x0254	0xB82260  	MUL.UU	WREG4, #0, WREG4
;__Lib_Math.c,203 :: 		
0x0256	0x200206  	MOV	#32, WREG6
;__Lib_Math.c,204 :: 		
Modulus_32x32_nextbit:
;__Lib_Math.c,205 :: 		
0x0258	0xD00000  	SL	WREG0, WREG0
;__Lib_Math.c,206 :: 		
0x025A	0xD28081  	RLC	WREG1, WREG1
;__Lib_Math.c,207 :: 		
0x025C	0xD28204  	RLC	WREG4, WREG4
;__Lib_Math.c,208 :: 		
0x025E	0xD28285  	RLC	WREG5, WREG5
;__Lib_Math.c,209 :: 		
0x0260	0xA80000  	BSET	WREG0, #0
;__Lib_Math.c,210 :: 		
0x0262	0x520202  	SUB	WREG4, WREG2, WREG4
;__Lib_Math.c,211 :: 		
0x0264	0x5A8283  	SUBB	WREG5, WREG3, WREG5
;__Lib_Math.c,212 :: 		
0x0266	0x3B0003  	BRA NN	Modulus_32x32_iterate
;__Lib_Math.c,213 :: 		
0x0268	0x420202  	ADD	WREG4, WREG2, WREG4
;__Lib_Math.c,214 :: 		
0x026A	0x4A8283  	ADDC	WREG5, WREG3, WREG5
;__Lib_Math.c,215 :: 		
0x026C	0xA10000  	BCLR	WREG0, #0
;__Lib_Math.c,216 :: 		
Modulus_32x32_iterate:
;__Lib_Math.c,217 :: 		
0x026E	0xE90306  	DEC	WREG6, WREG6
;__Lib_Math.c,218 :: 		
0x0270	0x3AFFF3  	BRA NZ	Modulus_32x32_nextbit
;__Lib_Math.c,219 :: 		
0x0272	0x060000  	RETURN
;__Lib_Math.c,222 :: 		
the_end_Modulus_32x32:
;__Lib_Math.c,225 :: 		
L_end__Modulus_32x32:
0x0274	0xFA8000  	ULNK
0x0276	0x060000  	RETURN
; end of __Modulus_32x32
__Divide_32x32:
0x02C0	0xFA0000  	LNK	#0
;__Lib_Math.c,78 :: 		
;__Lib_Math.c,81 :: 		
0x02C2	0x070002  	RCALL	Divide_32x32___testsus
;__Lib_Math.c,83 :: 		
0x02C4	0x00000004030E  	GOTO	the_end_Divide_32x32
;__Lib_Math.c,88 :: 		
Divide_32x32___testsus:
;__Lib_Math.c,89 :: 		
0x02C8	0xE20008  	CP0	WREG4
;__Lib_Math.c,90 :: 		
0x02CA	0x3A0002  	BRA NZ	Divide_32x32___divsi3
;__Lib_Math.c,92 :: 		
0x02CC	0x070010  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,93 :: 		
0x02CE	0x060000  	RETURN
;__Lib_Math.c,95 :: 		
Divide_32x32___divsi3:
;__Lib_Math.c,96 :: 		
0x02D0	0x689F83  	XOR	WREG1, WREG3, [WREG15++]
;__Lib_Math.c,97 :: 		
0x02D2	0xE20002  	CP0	WREG1
;__Lib_Math.c,98 :: 		
0x02D4	0x3D0002  	BRA GE	Divide_32x32_divtestb
;__Lib_Math.c,99 :: 		
0x02D6	0x100060  	SUBR	WREG0, #0, WREG0
;__Lib_Math.c,100 :: 		
0x02D8	0x1880E0  	SUBBR	WREG1, #0, WREG1
;__Lib_Math.c,101 :: 		
Divide_32x32_divtestb:
;__Lib_Math.c,102 :: 		
0x02DA	0xE20006  	CP0	WREG3
;__Lib_Math.c,103 :: 		
0x02DC	0x3D0002  	BRA GE	Divide_32x32_calcquot
;__Lib_Math.c,104 :: 		
0x02DE	0x110160  	SUBR	WREG2, #0, WREG2
;__Lib_Math.c,105 :: 		
0x02E0	0x1981E0  	SUBBR	WREG3, #0, WREG3
;__Lib_Math.c,106 :: 		
Divide_32x32_calcquot:
;__Lib_Math.c,107 :: 		
0x02E2	0x070005  	RCALL	Divide_32x32___udivsi3
;__Lib_Math.c,108 :: 		
0x02E4	0xE0004F  	CP0	[--WREG15]
;__Lib_Math.c,109 :: 		
0x02E6	0x3B0002  	BRA NN	Divide_32x32_returnq
;__Lib_Math.c,110 :: 		
0x02E8	0x100060  	SUBR	WREG0, #0, WREG0
;__Lib_Math.c,111 :: 		
0x02EA	0x1880E0  	SUBBR	WREG1, #0, WREG1
;__Lib_Math.c,112 :: 		
Divide_32x32_returnq:
;__Lib_Math.c,113 :: 		
0x02EC	0x060000  	RETURN
;__Lib_Math.c,114 :: 		
Divide_32x32___udivsi3:
;__Lib_Math.c,115 :: 		
0x02EE	0xB82260  	MUL.UU	WREG4, #0, WREG4
;__Lib_Math.c,116 :: 		
0x02F0	0x200206  	MOV	#32, WREG6
;__Lib_Math.c,117 :: 		
Divide_32x32_nextbit:
;__Lib_Math.c,118 :: 		
0x02F2	0xD00000  	SL	WREG0, WREG0
;__Lib_Math.c,119 :: 		
0x02F4	0xD28081  	RLC	WREG1, WREG1
;__Lib_Math.c,120 :: 		
0x02F6	0xD28204  	RLC	WREG4, WREG4
;__Lib_Math.c,121 :: 		
0x02F8	0xD28285  	RLC	WREG5, WREG5
;__Lib_Math.c,122 :: 		
0x02FA	0xA80000  	BSET	WREG0, #0
;__Lib_Math.c,123 :: 		
0x02FC	0x520202  	SUB	WREG4, WREG2, WREG4
;__Lib_Math.c,124 :: 		
0x02FE	0x5A8283  	SUBB	WREG5, WREG3, WREG5
;__Lib_Math.c,125 :: 		
0x0300	0x3B0003  	BRA NN	Divide_32x32_iterate
;__Lib_Math.c,126 :: 		
0x0302	0x420202  	ADD	WREG4, WREG2, WREG4
;__Lib_Math.c,127 :: 		
0x0304	0x4A8283  	ADDC	WREG5, WREG3, WREG5
;__Lib_Math.c,128 :: 		
0x0306	0xA10000  	BCLR	WREG0, #0
;__Lib_Math.c,129 :: 		
Divide_32x32_iterate:
;__Lib_Math.c,130 :: 		
0x0308	0xE90306  	DEC	WREG6, WREG6
;__Lib_Math.c,131 :: 		
0x030A	0x3AFFF3  	BRA NZ	Divide_32x32_nextbit
;__Lib_Math.c,132 :: 		
0x030C	0x060000  	RETURN
;__Lib_Math.c,135 :: 		
the_end_Divide_32x32:
;__Lib_Math.c,138 :: 		
L_end__Divide_32x32:
0x030E	0xFA8000  	ULNK
0x0310	0x060000  	RETURN
; end of __Divide_32x32
_UART1_Init:
0x08C6	0xFA0008  	LNK	#8
;__Lib_UART_12_p24_p33.c,145 :: 		
;__Lib_UART_12_p24_p33.c,148 :: 		
0x08C8	0x204840  	MOV	#lo_addr(_UART1_Write), WREG0
0x08CA	0x8841C0  	MOV	WREG0, _UART_Wr_Ptr
;__Lib_UART_12_p24_p33.c,149 :: 		
0x08CC	0x2FFFF0  	MOV	#lo_addr(_UART1_Read), WREG0
0x08CE	0x8841B0  	MOV	WREG0, _UART_Rd_Ptr
;__Lib_UART_12_p24_p33.c,150 :: 		
0x08D0	0x2FFFF0  	MOV	#lo_addr(_UART1_Data_Ready), WREG0
0x08D2	0x8841F0  	MOV	WREG0, _UART_Rdy_Ptr
;__Lib_UART_12_p24_p33.c,151 :: 		
0x08D4	0x2FFFF0  	MOV	#lo_addr(_UART1_Tx_Idle), WREG0
0x08D6	0x8841E0  	MOV	WREG0, _UART_Tx_Idle_Ptr
;__Lib_UART_12_p24_p33.c,156 :: 		
0x08D8	0xEF2220  	CLR	U1MODE
;__Lib_UART_12_p24_p33.c,157 :: 		
0x08DA	0x280000  	MOV	#32768, WREG0
0x08DC	0xB7A222  	MOV	WREG, U1STA
;__Lib_UART_12_p24_p33.c,161 :: 		
0x08DE	0xA96220  	BCLR	U1MODE, #3
;__Lib_UART_12_p24_p33.c,162 :: 		
0x08E0	0x07FDCE  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x08E2	0xBE0100  	MOV.D	WREG0, WREG2
;__Lib_UART_12_p24_p33.c,164 :: 		
0x08E4	0x203E80  	MOV	#1000, WREG0
0x08E6	0x200001  	MOV	#0, WREG1
0x08E8	0x07FC8B  	RCALL	__Multiply_32x32
0x08EA	0xBE0100  	MOV.D	WREG0, WREG2
;__Lib_UART_12_p24_p33.c,166 :: 		
0x08EC	0x200051  	MOV	#5, WREG1
0x08EE	0x470060  	ADD	WREG14, #0, WREG0
0x08F0	0xBE880A  	MOV.D	WREG10, [WREG0]
L__UART1_Init72:
0x08F2	0xE90081  	DEC	WREG1, WREG1
0x08F4	0x350003  	BRA LT	L__UART1_Init73
0x08F6	0xD01810  	SL	[WREG0], [WREG0++]
0x08F8	0xD29010  	RLC	[WREG0], [WREG0--]
0x08FA	0x37FFFB  	BRA	L__UART1_Init72
L__UART1_Init73:
;__Lib_UART_12_p24_p33.c,168 :: 		
0x08FC	0xBE9F82  	PUSH.D	WREG2
0x08FE	0xBE9F8A  	PUSH.D	WREG10
0x0900	0xBE0002  	MOV.D	WREG2, WREG0
0x0902	0x90010E  	MOV	[WREG14+0], WREG2
0x0904	0x90019E  	MOV	[WREG14+2], WREG3
0x0906	0xEB0200  	CLR	WREG4
0x0908	0x07FC8B  	RCALL	__Modulus_32x32
0x090A	0xBE054F  	POP.D	WREG10
0x090C	0xBE014F  	POP.D	WREG2
0x090E	0x980720  	MOV	WREG0, [WREG14+4]
0x0910	0x980731  	MOV	WREG1, [WREG14+6]
;__Lib_UART_12_p24_p33.c,169 :: 		
0x0912	0xBE9F8A  	PUSH.D	WREG10
; tmp end address is: 4 (W2)
0x0914	0xBE0002  	MOV.D	WREG2, WREG0
0x0916	0x90010E  	MOV	[WREG14+0], WREG2
0x0918	0x90019E  	MOV	[WREG14+2], WREG3
0x091A	0xEB0200  	CLR	WREG4
0x091C	0x07FCD1  	RCALL	__Divide_32x32
0x091E	0xBE054F  	POP.D	WREG10
; tmp start address is: 6 (W3)
0x0920	0x780180  	MOV	WREG0, WREG3
0x0922	0x780201  	MOV	WREG1, WREG4
;__Lib_UART_12_p24_p33.c,171 :: 		
0x0924	0x470060  	ADD	WREG14, #0, WREG0
0x0926	0x7800B0  	MOV	[WREG0++], WREG1
0x0928	0x780120  	MOV	[WREG0--], WREG2
0x092A	0xD10102  	LSR	WREG2, WREG2
0x092C	0xD38081  	RRC	WREG1, WREG1
0x092E	0x470064  	ADD	WREG14, #4, WREG0
0x0930	0xE10830  	CP	WREG1, [WREG0++]
0x0932	0xE19020  	CPB	WREG2, [WREG0--]
0x0934	0x310004  	BRA GEU	L__UART1_Init51
L__UART1_Init74:
;__Lib_UART_12_p24_p33.c,172 :: 		
0x0936	0x418061  	ADD	WREG3, #1, WREG0
0x0938	0x4A00E0  	ADDC	WREG4, #0, WREG1
; tmp end address is: 6 (W3)
; tmp start address is: 4 (W2)
; tmp start address is: 4 (W2)
0x093A	0xBE0100  	MOV.D	WREG0, WREG2
; tmp end address is: 4 (W2)
; tmp end address is: 4 (W2)
0x093C	0x370002  	BRA	L_UART1_Init13
L__UART1_Init51:
;__Lib_UART_12_p24_p33.c,171 :: 		
0x093E	0x780103  	MOV	WREG3, WREG2
0x0940	0x780184  	MOV	WREG4, WREG3
;__Lib_UART_12_p24_p33.c,172 :: 		
L_UART1_Init13:
;__Lib_UART_12_p24_p33.c,175 :: 		
; tmp start address is: 4 (W2)
0x0942	0x718002  	IOR	WREG3, WREG2, WREG0
0x0944	0x3A002F  	BRA NZ	L__UART1_Init53
L__UART1_Init75:
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,177 :: 		
0x0946	0x07FD9B  	RCALL	_Get_Fosc_kHz
; tmp start address is: 4 (W2)
0x0948	0xBE0100  	MOV.D	WREG0, WREG2
;__Lib_UART_12_p24_p33.c,179 :: 		
0x094A	0x203E80  	MOV	#1000, WREG0
0x094C	0x200001  	MOV	#0, WREG1
0x094E	0x07FC58  	RCALL	__Multiply_32x32
0x0950	0xBE0100  	MOV.D	WREG0, WREG2
;__Lib_UART_12_p24_p33.c,181 :: 		
0x0952	0x200031  	MOV	#3, WREG1
0x0954	0x470060  	ADD	WREG14, #0, WREG0
0x0956	0xBE880A  	MOV.D	WREG10, [WREG0]
L__UART1_Init76:
0x0958	0xE90081  	DEC	WREG1, WREG1
0x095A	0x350003  	BRA LT	L__UART1_Init77
0x095C	0xD01810  	SL	[WREG0], [WREG0++]
0x095E	0xD29010  	RLC	[WREG0], [WREG0--]
0x0960	0x37FFFB  	BRA	L__UART1_Init76
L__UART1_Init77:
;__Lib_UART_12_p24_p33.c,183 :: 		
0x0962	0xBE9F82  	PUSH.D	WREG2
0x0964	0xBE0002  	MOV.D	WREG2, WREG0
0x0966	0x90010E  	MOV	[WREG14+0], WREG2
0x0968	0x90019E  	MOV	[WREG14+2], WREG3
0x096A	0xEB0200  	CLR	WREG4
0x096C	0x07FC59  	RCALL	__Modulus_32x32
0x096E	0xBE014F  	POP.D	WREG2
0x0970	0x980720  	MOV	WREG0, [WREG14+4]
0x0972	0x980731  	MOV	WREG1, [WREG14+6]
;__Lib_UART_12_p24_p33.c,184 :: 		
0x0974	0xBE0002  	MOV.D	WREG2, WREG0
0x0976	0x90010E  	MOV	[WREG14+0], WREG2
0x0978	0x90019E  	MOV	[WREG14+2], WREG3
0x097A	0xEB0200  	CLR	WREG4
0x097C	0x07FCA1  	RCALL	__Divide_32x32
; tmp end address is: 4 (W2)
; tmp start address is: 6 (W3)
0x097E	0x780180  	MOV	WREG0, WREG3
0x0980	0x780201  	MOV	WREG1, WREG4
;__Lib_UART_12_p24_p33.c,186 :: 		
0x0982	0x470060  	ADD	WREG14, #0, WREG0
0x0984	0x7800B0  	MOV	[WREG0++], WREG1
0x0986	0x780120  	MOV	[WREG0--], WREG2
0x0988	0xD10102  	LSR	WREG2, WREG2
0x098A	0xD38081  	RRC	WREG1, WREG1
0x098C	0x470064  	ADD	WREG14, #4, WREG0
0x098E	0xE10830  	CP	WREG1, [WREG0++]
0x0990	0xE19020  	CPB	WREG2, [WREG0--]
0x0992	0x310004  	BRA GEU	L__UART1_Init52
L__UART1_Init78:
;__Lib_UART_12_p24_p33.c,187 :: 		
0x0994	0x418061  	ADD	WREG3, #1, WREG0
0x0996	0x4A00E0  	ADDC	WREG4, #0, WREG1
; tmp end address is: 6 (W3)
; tmp start address is: 4 (W2)
; tmp start address is: 4 (W2)
0x0998	0xBE0100  	MOV.D	WREG0, WREG2
; tmp end address is: 4 (W2)
; tmp end address is: 4 (W2)
0x099A	0x370002  	BRA	L_UART1_Init15
L__UART1_Init52:
;__Lib_UART_12_p24_p33.c,186 :: 		
0x099C	0x780103  	MOV	WREG3, WREG2
0x099E	0x780184  	MOV	WREG4, WREG3
;__Lib_UART_12_p24_p33.c,187 :: 		
L_UART1_Init15:
;__Lib_UART_12_p24_p33.c,189 :: 		
; tmp start address is: 4 (W2)
0x09A0	0xA86220  	BSET	U1MODE, #3
; tmp end address is: 4 (W2)
;__Lib_UART_12_p24_p33.c,190 :: 		
0x09A2	0x370000  	BRA	L_UART1_Init14
L__UART1_Init53:
;__Lib_UART_12_p24_p33.c,175 :: 		
;__Lib_UART_12_p24_p33.c,190 :: 		
L_UART1_Init14:
;__Lib_UART_12_p24_p33.c,192 :: 		
; tmp start address is: 4 (W2)
0x09A4	0x510061  	SUB	WREG2, #1, WREG0
0x09A6	0x5980E0  	SUBB	WREG3, #0, WREG1
; tmp end address is: 4 (W2)
; tmp start address is: 0 (W0)
0x09A8	0x881140  	MOV	WREG0, U1BRG
; tmp end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,195 :: 		
0x09AA	0xA92222  	BCLR	U1STA, #1
;__Lib_UART_12_p24_p33.c,197 :: 		
0x09AC	0xA8E221  	BSET	U1MODE, #15
;__Lib_UART_12_p24_p33.c,198 :: 		
0x09AE	0xA84223  	BSET	U1STA, #10
;__Lib_UART_12_p24_p33.c,200 :: 		
0x09B0	0x07FC30  	RCALL	_Delay_100ms
0x09B2	0x07FC2F  	RCALL	_Delay_100ms
;__Lib_UART_12_p24_p33.c,202 :: 		
L_end_UART1_Init:
0x09B4	0xFA8000  	ULNK
0x09B6	0x060000  	RETURN
; end of _UART1_Init
_UART2_Write:
0x0A0A	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,317 :: 		
;__Lib_UART_12_p24_p33.c,318 :: 		
L_UART2_Write25:
0x0A0C	0xAF0233  	BTSC	U2STA, #8
0x0A0E	0x370001  	BRA	L_UART2_Write26
0x0A10	0x37FFFD  	BRA	L_UART2_Write25
L_UART2_Write26:
;__Lib_UART_12_p24_p33.c,319 :: 		
0x0A12	0x8811AA  	MOV	WREG10, U2TXREG
;__Lib_UART_12_p24_p33.c,320 :: 		
L_end_UART2_Write:
0x0A14	0xFA8000  	ULNK
0x0A16	0x060000  	RETURN
; end of _UART2_Write
_UART2_Write_Text:
0x09E8	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,323 :: 		
;__Lib_UART_12_p24_p33.c,324 :: 		
; counter start address is: 2 (W1)
0x09EA	0xEF2002  	CLR	WREG1
;__Lib_UART_12_p24_p33.c,326 :: 		
; data_ start address is: 0 (W0)
; data_ start address is: 0 (W0)
0x09EC	0x78401A  	MOV.B	[WREG10], WREG0
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
; data_ end address is: 0 (W0)
;__Lib_UART_12_p24_p33.c,327 :: 		
L_UART2_Write_Text27:
; data_ start address is: 0 (W0)
; counter start address is: 2 (W1)
0x09EE	0xE10460  	CP.B	WREG0, #0
0x09F0	0x32000A  	BRA Z	L_UART2_Write_Text28
L__UART2_Write_Text98:
;__Lib_UART_12_p24_p33.c,328 :: 		
0x09F2	0x781F8A  	PUSH	WREG10
; data_ end address is: 0 (W0)
0x09F4	0xFB8500  	ZE	WREG0, WREG10
0x09F6	0x070009  	RCALL	_UART2_Write
0x09F8	0x78054F  	POP	WREG10
;__Lib_UART_12_p24_p33.c,329 :: 		
0x09FA	0x40C061  	ADD.B	WREG1, #1, WREG0
0x09FC	0x784080  	MOV.B	WREG0, WREG1
;__Lib_UART_12_p24_p33.c,330 :: 		
0x09FE	0xFB8000  	ZE	WREG0, WREG0
0x0A00	0x450000  	ADD	WREG10, WREG0, WREG0
; data_ start address is: 0 (W0)
0x0A02	0x784010  	MOV.B	[WREG0], WREG0
;__Lib_UART_12_p24_p33.c,331 :: 		
; counter end address is: 2 (W1)
; data_ end address is: 0 (W0)
0x0A04	0x37FFF4  	BRA	L_UART2_Write_Text27
L_UART2_Write_Text28:
;__Lib_UART_12_p24_p33.c,332 :: 		
L_end_UART2_Write_Text:
0x0A06	0xFA8000  	ULNK
0x0A08	0x060000  	RETURN
; end of _UART2_Write_Text
_ADC1_Get_Sample:
0x09B8	0xFA0000  	LNK	#0
;__Lib_ADC_12_p24HJ_p33.c,65 :: 		
;__Lib_ADC_12_p24HJ_p33.c,66 :: 		
0x09BA	0xE1506F  	CP	WREG10, #15
0x09BC	0x360007  	BRA LEU	L_ADC1_Get_Sample0
L__ADC1_Get_Sample9:
;__Lib_ADC_12_p24HJ_p33.c,67 :: 		
0x09BE	0x5500F0  	SUB	WREG10, #16, WREG1
0x09C0	0x200010  	MOV	#1, WREG0
0x09C2	0xDD0001  	SL	WREG0, WREG1, WREG0
0x09C4	0xEA8080  	COM	WREG0, WREG1
0x09C6	0x2032A0  	MOV	#lo_addr(AD1PCFGH), WREG0
0x09C8	0x608810  	AND	WREG1, [WREG0], [WREG0]
0x09CA	0x370005  	BRA	L_ADC1_Get_Sample1
L_ADC1_Get_Sample0:
;__Lib_ADC_12_p24HJ_p33.c,69 :: 		
0x09CC	0x200010  	MOV	#1, WREG0
0x09CE	0xDD000A  	SL	WREG0, WREG10, WREG0
0x09D0	0xEA8080  	COM	WREG0, WREG1
0x09D2	0x2032C0  	MOV	#lo_addr(AD1PCFGL), WREG0
0x09D4	0x608810  	AND	WREG1, [WREG0], [WREG0]
L_ADC1_Get_Sample1:
;__Lib_ADC_12_p24HJ_p33.c,71 :: 		
0x09D6	0x88194A  	MOV	WREG10, AD1CHS0
;__Lib_ADC_12_p24HJ_p33.c,72 :: 		
0x09D8	0xA82320  	BSET	AD1CON1, #1
;__Lib_ADC_12_p24HJ_p33.c,74 :: 		
L_ADC1_Get_Sample2:
0x09DA	0xAF0320  	BTSC	AD1CON1, #0
0x09DC	0x370001  	BRA	L_ADC1_Get_Sample3
;__Lib_ADC_12_p24HJ_p33.c,75 :: 		
0x09DE	0x37FFFD  	BRA	L_ADC1_Get_Sample2
L_ADC1_Get_Sample3:
;__Lib_ADC_12_p24HJ_p33.c,76 :: 		
0x09E0	0xA90320  	BCLR	AD1CON1, #0
;__Lib_ADC_12_p24HJ_p33.c,78 :: 		
0x09E2	0xBF8300  	MOV	ADC1BUF0, WREG
;__Lib_ADC_12_p24HJ_p33.c,79 :: 		
L_end_ADC1_Get_Sample:
0x09E4	0xFA8000  	ULNK
0x09E6	0x060000  	RETURN
; end of _ADC1_Get_Sample
_IntToStr:
0x050A	0xFA0000  	LNK	#0
;__Lib_Conversions.c,146 :: 		
;__Lib_Conversions.c,152 :: 		
0x050C	0x781F8A  	PUSH	WREG10
; negative start address is: 8 (W4)
0x050E	0xEF2008  	CLR	WREG4
;__Lib_Conversions.c,153 :: 		
; inword start address is: 0 (W0)
0x0510	0x78000A  	MOV	WREG10, WREG0
;__Lib_Conversions.c,154 :: 		
0x0512	0xE15060  	CP	WREG10, #0
0x0514	0x3D0003  	BRA GE	L__IntToStr95
L__IntToStr129:
; inword end address is: 0 (W0)
;__Lib_Conversions.c,155 :: 		
0x0516	0x200014  	MOV	#1, WREG4
;__Lib_Conversions.c,156 :: 		
; inword start address is: 0 (W0)
0x0518	0x150060  	SUBR	WREG10, #0, WREG0
; inword end address is: 0 (W0)
; negative end address is: 8 (W4)
;__Lib_Conversions.c,157 :: 		
0x051A	0x370000  	BRA	L_IntToStr23
L__IntToStr95:
;__Lib_Conversions.c,154 :: 		
;__Lib_Conversions.c,157 :: 		
L_IntToStr23:
;__Lib_Conversions.c,158 :: 		
; inword start address is: 0 (W0)
; negative start address is: 8 (W4)
0x051C	0x780500  	MOV	WREG0, WREG10
; inword end address is: 0 (W0)
0x051E	0x07FEAC  	RCALL	_WordToStr
;__Lib_Conversions.c,160 :: 		
; i start address is: 6 (W3)
; i start address is: 6 (W3)
0x0520	0x200063  	MOV	#6, WREG3
; negative end address is: 8 (W4)
; i end address is: 6 (W3)
; i end address is: 6 (W3)
0x0522	0x780104  	MOV	WREG4, WREG2
;__Lib_Conversions.c,161 :: 		
L_IntToStr24:
; i start address is: 6 (W3)
; negative start address is: 4 (W2)
0x0524	0xE11860  	CP	WREG3, #0
0x0526	0x360006  	BRA LEU	L_IntToStr25
L__IntToStr130:
;__Lib_Conversions.c,162 :: 		
0x0528	0x458083  	ADD	WREG11, WREG3, WREG1
0x052A	0x518061  	SUB	WREG3, #1, WREG0
0x052C	0x458000  	ADD	WREG11, WREG0, WREG0
0x052E	0x784890  	MOV.B	[WREG0], [WREG1]
;__Lib_Conversions.c,163 :: 		
; i start address is: 6 (W3)
0x0530	0xED2006  	DEC	WREG3
; i end address is: 6 (W3)
;__Lib_Conversions.c,164 :: 		
; i end address is: 6 (W3)
0x0532	0x37FFF8  	BRA	L_IntToStr24
L_IntToStr25:
;__Lib_Conversions.c,165 :: 		
0x0534	0xB3C200  	MOV.B	#32, WREG0
0x0536	0x784D80  	MOV.B	WREG0, [WREG11]
;__Lib_Conversions.c,166 :: 		
0x0538	0xE20004  	CP0	WREG2
0x053A	0x32000C  	BRA Z	L_IntToStr26
L__IntToStr131:
; negative end address is: 4 (W2)
;__Lib_Conversions.c,167 :: 		
; i start address is: 4 (W2)
; i start address is: 4 (W2)
0x053C	0xEF2004  	CLR	WREG2
; i end address is: 4 (W2)
; i end address is: 4 (W2)
;__Lib_Conversions.c,168 :: 		
L_IntToStr27:
; i start address is: 4 (W2)
0x053E	0x458002  	ADD	WREG11, WREG2, WREG0
0x0540	0x784090  	MOV.B	[WREG0], WREG1
0x0542	0xB3C200  	MOV.B	#32, WREG0
0x0544	0xE10C00  	CP.B	WREG1, WREG0
0x0546	0x3A0002  	BRA NZ	L_IntToStr28
L__IntToStr132:
; i start address is: 4 (W2)
0x0548	0xEC2004  	INC	WREG2
; i end address is: 4 (W2)
0x054A	0x37FFF9  	BRA	L_IntToStr27
L_IntToStr28:
;__Lib_Conversions.c,169 :: 		
0x054C	0x510061  	SUB	WREG2, #1, WREG0
; i end address is: 4 (W2)
;__Lib_Conversions.c,170 :: 		
0x054E	0x458080  	ADD	WREG11, WREG0, WREG1
0x0550	0xB3C2D0  	MOV.B	#45, WREG0
0x0552	0x784880  	MOV.B	WREG0, [WREG1]
L_IntToStr26:
;__Lib_Conversions.c,171 :: 		
L_end_IntToStr:
0x0554	0x78054F  	POP	WREG10
0x0556	0xFA8000  	ULNK
0x0558	0x060000  	RETURN
; end of _IntToStr
_WordToStr:
0x0278	0xFA0002  	LNK	#2
;__Lib_Conversions.c,84 :: 		
;__Lib_Conversions.c,89 :: 		
; len start address is: 4 (W2)
; len start address is: 4 (W2)
0x027A	0xEF2004  	CLR	WREG2
; len end address is: 4 (W2)
; len end address is: 4 (W2)
L_WordToStr6:
; len start address is: 4 (W2)
0x027C	0xE11465  	CP.B	WREG2, #5
0x027E	0x310006  	BRA GEU	L_WordToStr7
L__WordToStr118:
;__Lib_Conversions.c,90 :: 		
0x0280	0xFB8002  	ZE	WREG2, WREG0
0x0282	0x458080  	ADD	WREG11, WREG0, WREG1
0x0284	0xB3C200  	MOV.B	#32, WREG0
0x0286	0x784880  	MOV.B	WREG0, [WREG1]
;__Lib_Conversions.c,89 :: 		
; len start address is: 4 (W2)
0x0288	0xEC6004  	INC.B	WREG2
; len end address is: 4 (W2)
;__Lib_Conversions.c,90 :: 		
0x028A	0x37FFF8  	BRA	L_WordToStr6
L_WordToStr7:
;__Lib_Conversions.c,91 :: 		
0x028C	0xFB8002  	ZE	WREG2, WREG0
0x028E	0x458080  	ADD	WREG11, WREG0, WREG1
0x0290	0xEF2000  	CLR	WREG0
0x0292	0x784880  	MOV.B	WREG0, [WREG1]
; len start address is: 6 (W3)
0x0294	0x5141E1  	SUB.B	WREG2, #1, WREG3
; len end address is: 4 (W2)
; len end address is: 6 (W3)
;__Lib_Conversions.c,93 :: 		
L_WordToStr9:
; len start address is: 6 (W3)
;__Lib_Conversions.c,94 :: 		
0x0296	0xFB8003  	ZE	WREG3, WREG0
0x0298	0x458000  	ADD	WREG11, WREG0, WREG0
0x029A	0x980700  	MOV	WREG0, [WREG14+0]
0x029C	0x2000A2  	MOV	#10, WREG2
0x029E	0x090011  	REPEAT	#17
0x02A0	0xD88502  	DIV.U	WREG10, WREG2
0x02A2	0x200300  	MOV	#48, WREG0
0x02A4	0x408080  	ADD	WREG1, WREG0, WREG1
0x02A6	0x90000E  	MOV	[WREG14+0], WREG0
0x02A8	0x784801  	MOV.B	WREG1, [WREG0]
;__Lib_Conversions.c,95 :: 		
0x02AA	0x2000A2  	MOV	#10, WREG2
0x02AC	0x090011  	REPEAT	#17
0x02AE	0xD88502  	DIV.U	WREG10, WREG2
0x02B0	0x780500  	MOV	WREG0, WREG10
;__Lib_Conversions.c,96 :: 		
0x02B2	0xE10060  	CP	WREG0, #0
0x02B4	0x3A0001  	BRA NZ	L_WordToStr11
L__WordToStr119:
; len end address is: 6 (W3)
;__Lib_Conversions.c,97 :: 		
0x02B6	0x370002  	BRA	L_WordToStr10
L_WordToStr11:
;__Lib_Conversions.c,98 :: 		
; len start address is: 6 (W3)
; len start address is: 6 (W3)
0x02B8	0xED6006  	DEC.B	WREG3
; len end address is: 6 (W3)
;__Lib_Conversions.c,99 :: 		
; len end address is: 6 (W3)
0x02BA	0x37FFED  	BRA	L_WordToStr9
L_WordToStr10:
;__Lib_Conversions.c,100 :: 		
L_end_WordToStr:
0x02BC	0xFA8000  	ULNK
0x02BE	0x060000  	RETURN
; end of _WordToStr
_UART1_Write:
0x0484	0xFA0000  	LNK	#0
;__Lib_UART_12_p24_p33.c,70 :: 		
;__Lib_UART_12_p24_p33.c,71 :: 		
L_UART1_Write0:
0x0486	0xAF0223  	BTSC	U1STA, #8
0x0488	0x370001  	BRA	L_UART1_Write1
0x048A	0x37FFFD  	BRA	L_UART1_Write0
L_UART1_Write1:
;__Lib_UART_12_p24_p33.c,72 :: 		
0x048C	0x88112A  	MOV	WREG10, U1TXREG
;__Lib_UART_12_p24_p33.c,73 :: 		
L_end_UART1_Write:
0x048E	0xFA8000  	ULNK
0x0490	0x060000  	RETURN
; end of _UART1_Write
__Mul_FP:
0x061A	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,855 :: 		
;__Lib_MathDouble.c,857 :: 		
0x061C	0x070002  	RCALL	MulFP___mulsf3
;__Lib_MathDouble.c,858 :: 		
0x061E	0x000000040730  	GOTO	the_end__Mul_FP
;__Lib_MathDouble.c,861 :: 		
MulFP___mulsf3:
;__Lib_MathDouble.c,862 :: 		
0x0622	0xBE9F88  	MOV.D	WREG8, [WREG15++]
;__Lib_MathDouble.c,863 :: 		
0x0624	0xBE9F8A  	MOV.D	WREG10, [WREG15++]
;__Lib_MathDouble.c,864 :: 		
0x0626	0x781F8C  	MOV	WREG12, [WREG15++]
;__Lib_MathDouble.c,865 :: 		
0x0628	0x070030  	RCALL	MulFP__funpack2
;__Lib_MathDouble.c,866 :: 		
0x062A	0x330037  	BRA N	MulFP__fPropagateNaN
;__Lib_MathDouble.c,867 :: 		
0x062C	0x6C8603  	XOR	WREG9, WREG3, WREG12
;__Lib_MathDouble.c,868 :: 		
0x062E	0xE15064  	CP	WREG10, #4
;__Lib_MathDouble.c,869 :: 		
0x0630	0x320024  	BRA Z	MulFP_aisinfinite
;__Lib_MathDouble.c,870 :: 		
0x0632	0xE12064  	CP	WREG4, #4
;__Lib_MathDouble.c,871 :: 		
0x0634	0x320027  	BRA Z	MulFP_bisinfinite
;__Lib_MathDouble.c,872 :: 		
0x0636	0xE15061  	CP	WREG10, #1
;__Lib_MathDouble.c,873 :: 		
0x0638	0x320022  	BRA Z	MulFP_return8_1
;__Lib_MathDouble.c,874 :: 		
0x063A	0xE12061  	CP	WREG4, #1
;__Lib_MathDouble.c,875 :: 		
0x063C	0x320021  	BRA Z	MulFP_return2_1
;__Lib_MathDouble.c,876 :: 		
0x063E	0x42858B  	ADD	WREG5, WREG11, WREG11
;__Lib_MathDouble.c,877 :: 		
0x0640	0xB107EB  	SUB	#126, WREG11
;__Lib_MathDouble.c,878 :: 		
0x0642	0xB83401  	MUL.UU	WREG6, WREG1, WREG8
;__Lib_MathDouble.c,879 :: 		
0x0644	0xB83A00  	MUL.UU	WREG7, WREG0, WREG4
;__Lib_MathDouble.c,880 :: 		
0x0646	0x420408  	ADD	WREG4, WREG8, WREG8
;__Lib_MathDouble.c,881 :: 		
0x0648	0x4A8489  	ADDC	WREG5, WREG9, WREG9
;__Lib_MathDouble.c,882 :: 		
0x064A	0xB83A01  	MUL.UU	WREG7, WREG1, WREG4
;__Lib_MathDouble.c,883 :: 		
0x064C	0xB83000  	MUL.UU	WREG6, WREG0, WREG0
;__Lib_MathDouble.c,884 :: 		
0x064E	0x408088  	ADD	WREG1, WREG8, WREG1
;__Lib_MathDouble.c,885 :: 		
0x0650	0x4A0109  	ADDC	WREG4, WREG9, WREG2
;__Lib_MathDouble.c,886 :: 		
0x0652	0x330004  	BRA N	MulFP_formsticky
;__Lib_MathDouble.c,887 :: 		
0x0654	0x400000  	ADD	WREG0, WREG0, WREG0
;__Lib_MathDouble.c,888 :: 		
0x0656	0x488081  	ADDC	WREG1, WREG1, WREG1
;__Lib_MathDouble.c,889 :: 		
0x0658	0x490102  	ADDC	WREG2, WREG2, WREG2
;__Lib_MathDouble.c,890 :: 		
0x065A	0xE9058B  	DEC	WREG11, WREG11
;__Lib_MathDouble.c,891 :: 		
MulFP_formsticky:
;__Lib_MathDouble.c,892 :: 		
0x065C	0xDD09C9  	SL	WREG1, #9, WREG3
;__Lib_MathDouble.c,893 :: 		
0x065E	0x700183  	IOR	WREG0, WREG3, WREG3
;__Lib_MathDouble.c,894 :: 		
0x0660	0x320001  	BRA Z	MulFP_formRandSig
;__Lib_MathDouble.c,895 :: 		
0x0662	0x200013  	MOV	#1, WREG3
;__Lib_MathDouble.c,896 :: 		
MulFP_formRandSig:
;__Lib_MathDouble.c,897 :: 		
0x0664	0xDE14C8  	LSR	WREG2, #8, WREG9
;__Lib_MathDouble.c,898 :: 		
0x0666	0xDD1448  	SL	WREG2, #8, WREG8
;__Lib_MathDouble.c,899 :: 		
0x0668	0xDE0947  	LSR	WREG1, #7, WREG2
;__Lib_MathDouble.c,900 :: 		
0x066A	0xB20012  	AND	#1, WREG2
;__Lib_MathDouble.c,901 :: 		
0x066C	0xDE08C8  	LSR	WREG1, #8, WREG1
;__Lib_MathDouble.c,902 :: 		
0x066E	0x708408  	IOR	WREG1, WREG8, WREG8
;__Lib_MathDouble.c,903 :: 		
0x0670	0x070024  	RCALL	MulFP__fpack
;__Lib_MathDouble.c,904 :: 		
MulFP_return0_1:
;__Lib_MathDouble.c,905 :: 		
0x0672	0xA1F001  	BCLR	WREG1, #15
;__Lib_MathDouble.c,906 :: 		
0x0674	0xA7F00C  	BTSC	WREG12, #15
;__Lib_MathDouble.c,907 :: 		
0x0676	0xA8E003  	BSET	WREG1, #15
;__Lib_MathDouble.c,908 :: 		
0x0678	0x370019  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,909 :: 		
MulFP_aisinfinite:
;__Lib_MathDouble.c,910 :: 		
0x067A	0xE12061  	CP	WREG4, #1
;__Lib_MathDouble.c,911 :: 		
0x067C	0x32001B  	BRA Z	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,912 :: 		
MulFP_return8_1:
;__Lib_MathDouble.c,913 :: 		
0x067E	0xBE8108  	MOV.D	WREG8, WREG2
;__Lib_MathDouble.c,914 :: 		
MulFP_return2_1:
;__Lib_MathDouble.c,915 :: 		
0x0680	0xBE8002  	MOV.D	WREG2, WREG0
;__Lib_MathDouble.c,916 :: 		
0x0682	0x37FFF7  	BRA	MulFP_return0_1
;__Lib_MathDouble.c,917 :: 		
MulFP_bisinfinite:
;__Lib_MathDouble.c,918 :: 		
0x0684	0xE15061  	CP	WREG10, #1
;__Lib_MathDouble.c,919 :: 		
0x0686	0x3AFFFC  	BRA NZ	MulFP_return2_1
;__Lib_MathDouble.c,920 :: 		
0x0688	0x370015  	BRA	MulFP__fbopReturnNaN
;__Lib_MathDouble.c,921 :: 		
MulFP__funpack2:
;__Lib_MathDouble.c,922 :: 		
0x068A	0xBE8400  	MOV.D	WREG0, WREG8
;__Lib_MathDouble.c,923 :: 		
0x068C	0x07003C  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,924 :: 		
0x068E	0xBE8300  	MOV.D	WREG0, WREG6
;__Lib_MathDouble.c,925 :: 		
0x0690	0xBE8504  	MOV.D	WREG4, WREG10
;__Lib_MathDouble.c,926 :: 		
0x0692	0xBE8002  	MOV.D	WREG2, WREG0
;__Lib_MathDouble.c,927 :: 		
0x0694	0x070038  	RCALL	MulFP__funpack
;__Lib_MathDouble.c,928 :: 		
0x0696	0x754F84  	IOR.B	WREG10, WREG4, [WREG15]
;__Lib_MathDouble.c,929 :: 		
0x0698	0x060000  	RETURN
;__Lib_MathDouble.c,930 :: 		
MulFP__fPropagateNaN:
;__Lib_MathDouble.c,931 :: 		
0x069A	0xBE8002  	MOV.D	WREG2, WREG0
;__Lib_MathDouble.c,932 :: 		
0x069C	0xE15064  	CP	WREG10, #4
;__Lib_MathDouble.c,933 :: 		
0x069E	0x360005  	BRA LEU	MulFP_return0_2
;__Lib_MathDouble.c,934 :: 		
0x06A0	0xE12064  	CP	WREG4, #4
;__Lib_MathDouble.c,935 :: 		
0x06A2	0x360002  	BRA LEU	MulFP_return8_2
;__Lib_MathDouble.c,936 :: 		
0x06A4	0xA36809  	BTST.Z	WREG9, #6
;__Lib_MathDouble.c,937 :: 		
0x06A6	0x3A0001  	BRA NZ	MulFP_return0_2
;__Lib_MathDouble.c,938 :: 		
MulFP_return8_2:
;__Lib_MathDouble.c,939 :: 		
0x06A8	0xBE8008  	MOV.D	WREG8, WREG0
;__Lib_MathDouble.c,940 :: 		
MulFP_return0_2:
;__Lib_MathDouble.c,941 :: 		
0x06AA	0xA8C002  	BSET	WREG1, #6
;__Lib_MathDouble.c,942 :: 		
MulFP__fbopExit:
;__Lib_MathDouble.c,943 :: 		
0x06AC	0x78064F  	MOV	[--WREG15], WREG12
;__Lib_MathDouble.c,944 :: 		
0x06AE	0xBE054F  	MOV.D	[--WREG15], WREG10
;__Lib_MathDouble.c,945 :: 		
0x06B0	0xBE044F  	MOV.D	[--WREG15], WREG8
;__Lib_MathDouble.c,946 :: 		
0x06B2	0x060000  	RETURN
;__Lib_MathDouble.c,947 :: 		
MulFP__fbopReturnNaN:
;__Lib_MathDouble.c,948 :: 		
0x06B4	0x2FFFF0  	MOV	#65535, WREG0
;__Lib_MathDouble.c,949 :: 		
0x06B6	0x27FFF1  	MOV	#32767, WREG1
;__Lib_MathDouble.c,950 :: 		
0x06B8	0x37FFF9  	BRA	MulFP__fbopExit
;__Lib_MathDouble.c,951 :: 		
MulFP__fpack:
;__Lib_MathDouble.c,952 :: 		
0x06BA	0x200081  	MOV	#8, WREG1
;__Lib_MathDouble.c,953 :: 		
0x06BC	0x558061  	SUB	WREG11, #1, WREG0
;__Lib_MathDouble.c,954 :: 		
0x06BE	0x3D000B  	BRA GE	MulFP_notsubnormal
;__Lib_MathDouble.c,955 :: 		
0x06C0	0x20000B  	MOV	#0, WREG11
;__Lib_MathDouble.c,956 :: 		
0x06C2	0x2FFE61  	MOV	#65510, WREG1
;__Lib_MathDouble.c,957 :: 		
0x06C4	0xE10001  	CP	WREG0, WREG1
;__Lib_MathDouble.c,958 :: 		
0x06C6	0x34001D  	BRA LE	MulFP_zerosig
;__Lib_MathDouble.c,959 :: 		
MulFP_subnormal1:
;__Lib_MathDouble.c,960 :: 		
0x06C8	0x718182  	IOR	WREG3, WREG2, WREG3
;__Lib_MathDouble.c,961 :: 		
0x06CA	0x640161  	AND	WREG8, #1, WREG2
;__Lib_MathDouble.c,962 :: 		
0x06CC	0xD10489  	LSR	WREG9, WREG9
;__Lib_MathDouble.c,963 :: 		
0x06CE	0xD38408  	RRC	WREG8, WREG8
;__Lib_MathDouble.c,964 :: 		
0x06D0	0xE80000  	INC	WREG0, WREG0
;__Lib_MathDouble.c,965 :: 		
0x06D2	0x3AFFFA  	BRA NZ	MulFP_subnormal1
;__Lib_MathDouble.c,966 :: 		
0x06D4	0x200071  	MOV	#7, WREG1
;__Lib_MathDouble.c,967 :: 		
MulFP_notsubnormal:
;__Lib_MathDouble.c,968 :: 		
0x06D6	0x640061  	AND	WREG8, #1, WREG0
;__Lib_MathDouble.c,969 :: 		
0x06D8	0x700003  	IOR	WREG0, WREG3, WREG0
;__Lib_MathDouble.c,970 :: 		
0x06DA	0x600002  	AND	WREG0, WREG2, WREG0
;__Lib_MathDouble.c,971 :: 		
0x06DC	0x320009  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,972 :: 		
0x06DE	0x440461  	ADD	WREG8, #1, WREG8
;__Lib_MathDouble.c,973 :: 		
0x06E0	0x4C84E0  	ADDC	WREG9, #0, WREG9
;__Lib_MathDouble.c,974 :: 		
0x06E2	0xA58809  	BTST.Z	WREG9, WREG1
;__Lib_MathDouble.c,975 :: 		
0x06E4	0x320005  	BRA Z	MulFP_packupandgo
;__Lib_MathDouble.c,976 :: 		
0x06E6	0xE8058B  	INC	WREG11, WREG11
;__Lib_MathDouble.c,977 :: 		
0x06E8	0xE10868  	CP	WREG1, #8
;__Lib_MathDouble.c,978 :: 		
0x06EA	0x3A0002  	BRA NZ	MulFP_packupandgo
;__Lib_MathDouble.c,979 :: 		
0x06EC	0xD10489  	LSR	WREG9, WREG9
;__Lib_MathDouble.c,980 :: 		
0x06EE	0xD38408  	RRC	WREG8, WREG8
;__Lib_MathDouble.c,981 :: 		
MulFP_packupandgo:
;__Lib_MathDouble.c,982 :: 		
0x06F0	0x200FF2  	MOV	#255, WREG2
;__Lib_MathDouble.c,983 :: 		
0x06F2	0xE15802  	CP	WREG11, WREG2
;__Lib_MathDouble.c,984 :: 		
0x06F4	0x3D0005  	BRA GE	MulFP_overflow
;__Lib_MathDouble.c,985 :: 		
0x06F6	0xDD5DC7  	SL	WREG11, #7, WREG11
;__Lib_MathDouble.c,986 :: 		
0x06F8	0xB207F9  	AND	#127, WREG9
;__Lib_MathDouble.c,987 :: 		
0x06FA	0x758089  	IOR	WREG11, WREG9, WREG1
;__Lib_MathDouble.c,988 :: 		
0x06FC	0x880008  	MOV	WREG8, WREG0
;__Lib_MathDouble.c,989 :: 		
0x06FE	0x060000  	RETURN
;__Lib_MathDouble.c,990 :: 		
MulFP_overflow:
;__Lib_MathDouble.c,991 :: 		
0x0700	0x27F80B  	MOV	#32640, WREG11
;__Lib_MathDouble.c,992 :: 		
MulFP_zerosig:
;__Lib_MathDouble.c,993 :: 		
0x0702	0x88001B  	MOV	WREG11, WREG1
;__Lib_MathDouble.c,994 :: 		
0x0704	0x050000  	RETLW	#0, WREG0
;__Lib_MathDouble.c,995 :: 		
MulFP__funpack:
;__Lib_MathDouble.c,996 :: 		
0x0706	0xDE0AC7  	LSR	WREG1, #7, WREG5
;__Lib_MathDouble.c,997 :: 		
0x0708	0xB207F1  	AND	#127, WREG1
;__Lib_MathDouble.c,998 :: 		
0x070A	0xB20FF5  	AND	#255, WREG5
;__Lib_MathDouble.c,999 :: 		
0x070C	0x320008  	BRA Z	MulFP_zeroorsub
;__Lib_MathDouble.c,1000 :: 		
0x070E	0x42CFE1  	ADD.B	WREG5, #1, [WREG15]
;__Lib_MathDouble.c,1001 :: 		
0x0710	0x320002  	BRA Z	MulFP_nanorinf
;__Lib_MathDouble.c,1002 :: 		
MulFP_finitereturn:
;__Lib_MathDouble.c,1003 :: 		
0x0712	0xA8E002  	BSET	WREG1, #7
;__Lib_MathDouble.c,1004 :: 		
0x0714	0x050024  	RETLW	#2, WREG4
;__Lib_MathDouble.c,1005 :: 		
MulFP_nanorinf:
;__Lib_MathDouble.c,1006 :: 		
0x0716	0x700F81  	IOR	WREG0, WREG1, [WREG15]
;__Lib_MathDouble.c,1007 :: 		
0x0718	0x320001  	BRA Z	MulFP_infinite
;__Lib_MathDouble.c,1008 :: 		
0x071A	0x050804  	RETLW	#128, WREG4
;__Lib_MathDouble.c,1009 :: 		
MulFP_infinite:
;__Lib_MathDouble.c,1010 :: 		
0x071C	0x050044  	RETLW	#4, WREG4
;__Lib_MathDouble.c,1011 :: 		
MulFP_zeroorsub:
;__Lib_MathDouble.c,1012 :: 		
0x071E	0x700F81  	IOR	WREG0, WREG1, [WREG15]
;__Lib_MathDouble.c,1013 :: 		
0x0720	0x3A0002  	BRA NZ	MulFP_subnormal2
;__Lib_MathDouble.c,1014 :: 		
0x0722	0x050014  	RETLW	#1, WREG4
;__Lib_MathDouble.c,1015 :: 		
MulFP_normalize:
;__Lib_MathDouble.c,1016 :: 		
0x0724	0xE90285  	DEC	WREG5, WREG5
;__Lib_MathDouble.c,1017 :: 		
MulFP_subnormal2:
;__Lib_MathDouble.c,1018 :: 		
0x0726	0x400000  	ADD	WREG0, WREG0, WREG0
;__Lib_MathDouble.c,1019 :: 		
0x0728	0x48C081  	ADDC.B	WREG1, WREG1, WREG1
;__Lib_MathDouble.c,1020 :: 		
0x072A	0x3BFFFC  	BRA NN	MulFP_normalize
;__Lib_MathDouble.c,1021 :: 		
0x072C	0xA8E002  	BSET	WREG1, #7
;__Lib_MathDouble.c,1022 :: 		
0x072E	0x050024  	RETLW	#2, WREG4
;__Lib_MathDouble.c,1025 :: 		
the_end__Mul_FP:
;__Lib_MathDouble.c,1028 :: 		
L_end__Mul_FP:
0x0730	0xFA8000  	ULNK
0x0732	0x060000  	RETURN
; end of __Mul_FP
__Sub_FP:
0x055A	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,830 :: 		
;__Lib_MathDouble.c,831 :: 		
0x055C	0xAAE007  	BTG	WREG3, #15
;__Lib_MathDouble.c,832 :: 		
0x055E	0x07FED9  	RCALL	__AddSub_FP
;__Lib_MathDouble.c,833 :: 		
L_end__Sub_FP:
0x0560	0xFA8000  	ULNK
0x0562	0x060000  	RETURN
; end of __Sub_FP
__AddSub_FP:
0x0312	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,582 :: 		
;__Lib_MathDouble.c,584 :: 		
0x0314	0x070002  	RCALL	AddSubFP__addsf3
;__Lib_MathDouble.c,585 :: 		
0x0316	0x00000004047A  	GOTO	the_end__AddSub_FP
;__Lib_MathDouble.c,588 :: 		
AddSubFP__addsf3:
;__Lib_MathDouble.c,589 :: 		
0x031A	0xBE9F88  	MOV.D	WREG8, [WREG15++]
;__Lib_MathDouble.c,590 :: 		
0x031C	0xBE9F8A  	MOV.D	WREG10, [WREG15++]
;__Lib_MathDouble.c,591 :: 		
0x031E	0x781F8C  	MOV	WREG12, [WREG15++]
;__Lib_MathDouble.c,592 :: 		
0x0320	0x070059  	RCALL	AddSubFP__funpack2
;__Lib_MathDouble.c,593 :: 		
0x0322	0x330060  	BRA N	AddSubFP__fPropagateNaN
;__Lib_MathDouble.c,594 :: 		
0x0324	0xE15064  	CP	WREG10, #4
;__Lib_MathDouble.c,595 :: 		
0x0326	0x32004F  	BRA Z	AddSubFP_aisinfinite
;__Lib_MathDouble.c,596 :: 		
AddSubFP_checkspecialb:
;__Lib_MathDouble.c,597 :: 		
0x0328	0xE12064  	CP	WREG4, #4
;__Lib_MathDouble.c,598 :: 		
0x032A	0x320052  	BRA Z	AddSubFP_return2_3
;__Lib_MathDouble.c,599 :: 		
0x032C	0x6C8203  	XOR	WREG9, WREG3, WREG4
;__Lib_MathDouble.c,600 :: 		
0x032E	0x3B0007  	BRA NN	AddSubFP_getsign
;__Lib_MathDouble.c,601 :: 		
0x0330	0xD00509  	SL	WREG9, WREG10
;__Lib_MathDouble.c,602 :: 		
0x0332	0xD00603  	SL	WREG3, WREG12
;__Lib_MathDouble.c,603 :: 		
0x0334	0x540F82  	SUB	WREG8, WREG2, [WREG15]
;__Lib_MathDouble.c,604 :: 		
0x0336	0x5D060C  	SUBB	WREG10, WREG12, WREG12
;__Lib_MathDouble.c,605 :: 		
0x0338	0x390002  	BRA NC	AddSubFP_getsign
;__Lib_MathDouble.c,606 :: 		
0x033A	0x320002  	BRA Z	AddSubFP_gotsign
;__Lib_MathDouble.c,607 :: 		
0x033C	0x880039  	MOV	WREG9, WREG3
;__Lib_MathDouble.c,608 :: 		
AddSubFP_getsign:
;__Lib_MathDouble.c,609 :: 		
0x033E	0x8800C3  	MOV	WREG3, WREG12
;__Lib_MathDouble.c,610 :: 		
AddSubFP_gotsign:
;__Lib_MathDouble.c,611 :: 		
0x0340	0x558285  	SUB	WREG11, WREG5, WREG5
;__Lib_MathDouble.c,612 :: 		
0x0342	0x3D0004  	BRA GE	AddSubFP_expcanonical
;__Lib_MathDouble.c,613 :: 		
0x0344	0xFD0300  	EXCH	WREG0, WREG6
;__Lib_MathDouble.c,614 :: 		
0x0346	0xFD0381  	EXCH	WREG1, WREG7
;__Lib_MathDouble.c,615 :: 		
0x0348	0xEA0285  	NEG	WREG5, WREG5
;__Lib_MathDouble.c,616 :: 		
0x034A	0x42858B  	ADD	WREG5, WREG11, WREG11
;__Lib_MathDouble.c,617 :: 		
AddSubFP_expcanonical:
;__Lib_MathDouble.c,618 :: 		
0x034C	0x720F84  	IOR	WREG4, WREG4, [WREG15]
;__Lib_MathDouble.c,619 :: 		
0x034E	0x3B0002  	BRA NN	AddSubFP_nonegate
;__Lib_MathDouble.c,620 :: 		
0x0350	0x100060  	SUBR	WREG0, #0, WREG0
;__Lib_MathDouble.c,621 :: 		
0x0352	0x1880E0  	SUBBR	WREG1, #0, WREG1
;__Lib_MathDouble.c,622 :: 		
AddSubFP_nonegate:
;__Lib_MathDouble.c,623 :: 		
0x0354	0xB81160  	MUL.UU	WREG2, #0, WREG2
;__Lib_MathDouble.c,624 :: 		
0x0356	0xEB0500  	CLR	WREG10
;__Lib_MathDouble.c,625 :: 		
0x0358	0xE1287A  	CP	WREG5, #26
;__Lib_MathDouble.c,626 :: 		
0x035A	0x39000A  	BRA NC	AddSubFP_aligniter
;__Lib_MathDouble.c,627 :: 		
0x035C	0x880006  	MOV	WREG6, WREG0
;__Lib_MathDouble.c,628 :: 		
0x035E	0xDD5DC7  	SL	WREG11, #7, WREG11
;__Lib_MathDouble.c,629 :: 		
0x0360	0xB207F7  	AND	#127, WREG7
;__Lib_MathDouble.c,630 :: 		
0x0362	0x758087  	IOR	WREG11, WREG7, WREG1
;__Lib_MathDouble.c,631 :: 		
0x0364	0x37002D  	BRA	AddSubFP_signoff
;__Lib_MathDouble.c,632 :: 		
AddSubFP_align:
;__Lib_MathDouble.c,633 :: 		
0x0366	0x718182  	IOR	WREG3, WREG2, WREG3
;__Lib_MathDouble.c,634 :: 		
0x0368	0x88002A  	MOV	WREG10, WREG2
;__Lib_MathDouble.c,635 :: 		
0x036A	0x600561  	AND	WREG0, #1, WREG10
;__Lib_MathDouble.c,636 :: 		
0x036C	0xD18081  	ASR	WREG1, WREG1
;__Lib_MathDouble.c,637 :: 		
0x036E	0xD38000  	RRC	WREG0, WREG0
;__Lib_MathDouble.c,638 :: 		
AddSubFP_aligniter:
;__Lib_MathDouble.c,639 :: 		
0x0370	0xE90285  	DEC	WREG5, WREG5
;__Lib_MathDouble.c,640 :: 		
0x0372	0x3BFFF9  	BRA NN	AddSubFP_align
;__Lib_MathDouble.c,641 :: 		
AddSubFP_aligned:
;__Lib_MathDouble.c,642 :: 		
0x0374	0x400406  	ADD	WREG0, WREG6, WREG8
;__Lib_MathDouble.c,643 :: 		
0x0376	0x488487  	ADDC	WREG1, WREG7, WREG9
;__Lib_MathDouble.c,644 :: 		
0x0378	0x3B0002  	BRA NN	AddSubFP_normalizesum
;__Lib_MathDouble.c,645 :: 		
0x037A	0x140460  	SUBR	WREG8, #0, WREG8
;__Lib_MathDouble.c,646 :: 		
0x037C	0x1C84E0  	SUBBR	WREG9, #0, WREG9
;__Lib_MathDouble.c,647 :: 		
AddSubFP_normalizesum:
;__Lib_MathDouble.c,648 :: 		
0x037E	0xA38809  	BTST.Z	WREG9, #8
;__Lib_MathDouble.c,649 :: 		
0x0380	0x320007  	BRA Z	AddSubFP_checknormal
;__Lib_MathDouble.c,650 :: 		
0x0382	0x71818A  	IOR	WREG3, WREG10, WREG3
;__Lib_MathDouble.c,651 :: 		
0x0384	0x718182  	IOR	WREG3, WREG2, WREG3
;__Lib_MathDouble.c,652 :: 		
0x0386	0x640161  	AND	WREG8, #1, WREG2
;__Lib_MathDouble.c,653 :: 		
0x0388	0xD10489  	LSR	WREG9, WREG9
;__Lib_MathDouble.c,654 :: 		
0x038A	0xD38408  	RRC	WREG8, WREG8
;__Lib_MathDouble.c,655 :: 		
0x038C	0xE8058B  	INC	WREG11, WREG11
;__Lib_MathDouble.c,656 :: 		
0x038E	0x370017  	BRA	AddSubFP_round
;__Lib_MathDouble.c,657 :: 		
AddSubFP_checknormal:
;__Lib_MathDouble.c,658 :: 		
0x0390	0xA37809  	BTST.Z	WREG9, #7
;__Lib_MathDouble.c,659 :: 		
0x0392	0x3A0013  	BRA NZ	AddSubFP_discardguard
;__Lib_MathDouble.c,660 :: 		
AddSubFP_underflow:
;__Lib_MathDouble.c,661 :: 		
0x0394	0xE20016  	CP0	WREG11
;__Lib_MathDouble.c,662 :: 		
0x0396	0x340013  	BRA LE	AddSubFP_round
;__Lib_MathDouble.c,663 :: 		
0x0398	0xE9058B  	DEC	WREG11, WREG11
;__Lib_MathDouble.c,664 :: 		
0x039A	0x440408  	ADD	WREG8, WREG8, WREG8
;__Lib_MathDouble.c,665 :: 		
0x039C	0x4C8489  	ADDC	WREG9, WREG9, WREG9
;__Lib_MathDouble.c,666 :: 		
0x039E	0x74440A  	IOR.B	WREG8, WREG10, WREG8
;__Lib_MathDouble.c,667 :: 		
0x03A0	0xA37809  	BTST.Z	WREG9, #7
;__Lib_MathDouble.c,668 :: 		
0x03A2	0x3A000D  	BRA NZ	AddSubFP_round
;__Lib_MathDouble.c,669 :: 		
AddSubFP_normalizeloop:
;__Lib_MathDouble.c,670 :: 		
0x03A4	0xE20016  	CP0	WREG11
;__Lib_MathDouble.c,671 :: 		
0x03A6	0x340007  	BRA LE	AddSubFP_normalizeexit
;__Lib_MathDouble.c,672 :: 		
0x03A8	0xE9058B  	DEC	WREG11, WREG11
;__Lib_MathDouble.c,673 :: 		
0x03AA	0x440408  	ADD	WREG8, WREG8, WREG8
;__Lib_MathDouble.c,674 :: 		
0x03AC	0x4C8489  	ADDC	WREG9, WREG9, WREG9
;__Lib_MathDouble.c,675 :: 		
0x03AE	0x3A0001  	BRA NZ	AddSubFP_normalizetest
;__Lib_MathDouble.c,676 :: 		
0x03B0	0x20000B  	MOV	#0, WREG11
;__Lib_MathDouble.c,677 :: 		
AddSubFP_normalizetest:
;__Lib_MathDouble.c,678 :: 		
0x03B2	0xA37809  	BTST.Z	WREG9, #7
;__Lib_MathDouble.c,679 :: 		
0x03B4	0x32FFF7  	BRA Z	AddSubFP_normalizeloop
;__Lib_MathDouble.c,680 :: 		
AddSubFP_normalizeexit:
;__Lib_MathDouble.c,681 :: 		
0x03B6	0xEB0100  	CLR	WREG2
;__Lib_MathDouble.c,682 :: 		
0x03B8	0x370002  	BRA	AddSubFP_round
;__Lib_MathDouble.c,683 :: 		
AddSubFP_discardguard:
;__Lib_MathDouble.c,684 :: 		
0x03BA	0x718182  	IOR	WREG3, WREG2, WREG3
;__Lib_MathDouble.c,685 :: 		
0x03BC	0x88002A  	MOV	WREG10, WREG2
;__Lib_MathDouble.c,686 :: 		
AddSubFP_round:
;__Lib_MathDouble.c,687 :: 		
0x03BE	0x070022  	RCALL	AddSubFP__fpack
;__Lib_MathDouble.c,688 :: 		
AddSubFP_signoff:
;__Lib_MathDouble.c,689 :: 		
0x03C0	0xA7F00C  	BTSC	WREG12, #15
;__Lib_MathDouble.c,690 :: 		
0x03C2	0xA8E003  	BSET	WREG1, #15
;__Lib_MathDouble.c,691 :: 		
0x03C4	0x370018  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,692 :: 		
AddSubFP_aisinfinite:
;__Lib_MathDouble.c,693 :: 		
0x03C6	0xE12064  	CP	WREG4, #4
;__Lib_MathDouble.c,694 :: 		
0x03C8	0x3A0002  	BRA NZ	AddSubFP_return8_3
;__Lib_MathDouble.c,695 :: 		
0x03CA	0x6C8F83  	XOR	WREG9, WREG3, [WREG15]
;__Lib_MathDouble.c,696 :: 		
0x03CC	0x330018  	BRA N	AddSubFP__fbopReturnNaN
;__Lib_MathDouble.c,697 :: 		
AddSubFP_return8_3:
;__Lib_MathDouble.c,698 :: 		
0x03CE	0xBE8108  	MOV.D	WREG8, WREG2
;__Lib_MathDouble.c,699 :: 		
AddSubFP_return2_3:
;__Lib_MathDouble.c,700 :: 		
0x03D0	0xBE8002  	MOV.D	WREG2, WREG0
;__Lib_MathDouble.c,701 :: 		
0x03D2	0x370011  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,702 :: 		
AddSubFP__funpack2:
;__Lib_MathDouble.c,703 :: 		
0x03D4	0xBE8400  	MOV.D	WREG0, WREG8
;__Lib_MathDouble.c,704 :: 		
0x03D6	0x07003C  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,705 :: 		
0x03D8	0xBE8300  	MOV.D	WREG0, WREG6
;__Lib_MathDouble.c,706 :: 		
0x03DA	0xBE8504  	MOV.D	WREG4, WREG10
;__Lib_MathDouble.c,707 :: 		
0x03DC	0xBE8002  	MOV.D	WREG2, WREG0
;__Lib_MathDouble.c,708 :: 		
0x03DE	0x070038  	RCALL	AddSubFP__funpack
;__Lib_MathDouble.c,709 :: 		
0x03E0	0x754F84  	IOR.B	WREG10, WREG4, [WREG15]
;__Lib_MathDouble.c,710 :: 		
0x03E2	0x060000  	RETURN
;__Lib_MathDouble.c,711 :: 		
AddSubFP__fPropagateNaN:
;__Lib_MathDouble.c,712 :: 		
0x03E4	0xBE8002  	MOV.D	WREG2, WREG0
;__Lib_MathDouble.c,713 :: 		
0x03E6	0xE15064  	CP	WREG10, #4
;__Lib_MathDouble.c,714 :: 		
0x03E8	0x360005  	BRA LEU	AddSubFP_return0_1
;__Lib_MathDouble.c,715 :: 		
0x03EA	0xE12064  	CP	WREG4, #4
;__Lib_MathDouble.c,716 :: 		
0x03EC	0x360002  	BRA LEU	AddSubFP_return8_1
;__Lib_MathDouble.c,717 :: 		
0x03EE	0xA36809  	BTST.Z	WREG9, #6
;__Lib_MathDouble.c,718 :: 		
0x03F0	0x3A0001  	BRA NZ	AddSubFP_return0_1
;__Lib_MathDouble.c,719 :: 		
AddSubFP_return8_1:
;__Lib_MathDouble.c,720 :: 		
0x03F2	0xBE8008  	MOV.D	WREG8, WREG0
;__Lib_MathDouble.c,721 :: 		
AddSubFP_return0_1:
;__Lib_MathDouble.c,722 :: 		
0x03F4	0xA8C002  	BSET	WREG1, #6
;__Lib_MathDouble.c,723 :: 		
AddSubFP__fbopExit:
;__Lib_MathDouble.c,724 :: 		
0x03F6	0x78064F  	MOV	[--WREG15], WREG12
;__Lib_MathDouble.c,725 :: 		
0x03F8	0xBE054F  	MOV.D	[--WREG15], WREG10
;__Lib_MathDouble.c,726 :: 		
0x03FA	0xBE044F  	MOV.D	[--WREG15], WREG8
;__Lib_MathDouble.c,727 :: 		
0x03FC	0x060000  	RETURN
;__Lib_MathDouble.c,728 :: 		
AddSubFP__fbopReturnNaN:
;__Lib_MathDouble.c,729 :: 		
0x03FE	0x2FFFF0  	MOV	#65535, WREG0
;__Lib_MathDouble.c,730 :: 		
0x0400	0x27FFF1  	MOV	#32767, WREG1
;__Lib_MathDouble.c,731 :: 		
0x0402	0x37FFF9  	BRA	AddSubFP__fbopExit
;__Lib_MathDouble.c,732 :: 		
AddSubFP__fpack:
;__Lib_MathDouble.c,733 :: 		
0x0404	0x200081  	MOV	#8, WREG1
;__Lib_MathDouble.c,734 :: 		
0x0406	0x558061  	SUB	WREG11, #1, WREG0
;__Lib_MathDouble.c,735 :: 		
0x0408	0x3D000B  	BRA GE	AddSubFP_notsubnormal_1
;__Lib_MathDouble.c,736 :: 		
0x040A	0x20000B  	MOV	#0, WREG11
;__Lib_MathDouble.c,737 :: 		
0x040C	0x2FFE61  	MOV	#65510, WREG1
;__Lib_MathDouble.c,738 :: 		
0x040E	0xE10001  	CP	WREG0, WREG1
;__Lib_MathDouble.c,739 :: 		
0x0410	0x34001D  	BRA LE	AddSubFP_zerosig
;__Lib_MathDouble.c,740 :: 		
AddSubFP_subnormal_1:
;__Lib_MathDouble.c,741 :: 		
0x0412	0x718182  	IOR	WREG3, WREG2, WREG3
;__Lib_MathDouble.c,742 :: 		
0x0414	0x640161  	AND	WREG8, #1, WREG2
;__Lib_MathDouble.c,743 :: 		
0x0416	0xD10489  	LSR	WREG9, WREG9
;__Lib_MathDouble.c,744 :: 		
0x0418	0xD38408  	RRC	WREG8, WREG8
;__Lib_MathDouble.c,745 :: 		
0x041A	0xE80000  	INC	WREG0, WREG0
;__Lib_MathDouble.c,746 :: 		
0x041C	0x3AFFFA  	BRA NZ	AddSubFP_subnormal_1
;__Lib_MathDouble.c,747 :: 		
0x041E	0x200071  	MOV	#7, WREG1
;__Lib_MathDouble.c,748 :: 		
AddSubFP_notsubnormal_1:
;__Lib_MathDouble.c,749 :: 		
0x0420	0x640061  	AND	WREG8, #1, WREG0
;__Lib_MathDouble.c,750 :: 		
0x0422	0x700003  	IOR	WREG0, WREG3, WREG0
;__Lib_MathDouble.c,751 :: 		
0x0424	0x600002  	AND	WREG0, WREG2, WREG0
;__Lib_MathDouble.c,752 :: 		
0x0426	0x320009  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,753 :: 		
0x0428	0x440461  	ADD	WREG8, #1, WREG8
;__Lib_MathDouble.c,754 :: 		
0x042A	0x4C84E0  	ADDC	WREG9, #0, WREG9
;__Lib_MathDouble.c,755 :: 		
0x042C	0xA58809  	BTST.Z	WREG9, WREG1
;__Lib_MathDouble.c,756 :: 		
0x042E	0x320005  	BRA Z	AddSubFP_packupandgo
;__Lib_MathDouble.c,757 :: 		
0x0430	0xE8058B  	INC	WREG11, WREG11
;__Lib_MathDouble.c,758 :: 		
0x0432	0xE10868  	CP	WREG1, #8
;__Lib_MathDouble.c,759 :: 		
0x0434	0x3A0002  	BRA NZ	AddSubFP_packupandgo
;__Lib_MathDouble.c,760 :: 		
0x0436	0xD10489  	LSR	WREG9, WREG9
;__Lib_MathDouble.c,761 :: 		
0x0438	0xD38408  	RRC	WREG8, WREG8
;__Lib_MathDouble.c,762 :: 		
AddSubFP_packupandgo:
;__Lib_MathDouble.c,763 :: 		
0x043A	0x200FF2  	MOV	#255, WREG2
;__Lib_MathDouble.c,764 :: 		
0x043C	0xE15802  	CP	WREG11, WREG2
;__Lib_MathDouble.c,765 :: 		
0x043E	0x3D0005  	BRA GE	AddSubFP_overflow
;__Lib_MathDouble.c,766 :: 		
0x0440	0xDD5DC7  	SL	WREG11, #7, WREG11
;__Lib_MathDouble.c,767 :: 		
0x0442	0xB207F9  	AND	#127, WREG9
;__Lib_MathDouble.c,768 :: 		
0x0444	0x758089  	IOR	WREG11, WREG9, WREG1
;__Lib_MathDouble.c,769 :: 		
0x0446	0x880008  	MOV	WREG8, WREG0
;__Lib_MathDouble.c,770 :: 		
0x0448	0x060000  	RETURN
;__Lib_MathDouble.c,771 :: 		
AddSubFP_overflow:
;__Lib_MathDouble.c,772 :: 		
0x044A	0x27F80B  	MOV	#32640, WREG11
;__Lib_MathDouble.c,773 :: 		
AddSubFP_zerosig:
;__Lib_MathDouble.c,774 :: 		
0x044C	0x88001B  	MOV	WREG11, WREG1
;__Lib_MathDouble.c,775 :: 		
0x044E	0x050000  	RETLW	#0, WREG0
;__Lib_MathDouble.c,776 :: 		
AddSubFP__funpack:
;__Lib_MathDouble.c,777 :: 		
0x0450	0xDE0AC7  	LSR	WREG1, #7, WREG5
;__Lib_MathDouble.c,778 :: 		
0x0452	0xB207F1  	AND	#127, WREG1
;__Lib_MathDouble.c,779 :: 		
0x0454	0xB20FF5  	AND	#255, WREG5
;__Lib_MathDouble.c,780 :: 		
0x0456	0x320008  	BRA Z	AddSubFP_zeroorsub
;__Lib_MathDouble.c,781 :: 		
0x0458	0x42CFE1  	ADD.B	WREG5, #1, [WREG15]
;__Lib_MathDouble.c,782 :: 		
0x045A	0x320002  	BRA Z	AddSubFP_nanorinf
;__Lib_MathDouble.c,783 :: 		
AddSubFP_finitereturn:
;__Lib_MathDouble.c,784 :: 		
0x045C	0xA8E002  	BSET	WREG1, #7
;__Lib_MathDouble.c,785 :: 		
0x045E	0x050024  	RETLW	#2, WREG4
;__Lib_MathDouble.c,786 :: 		
AddSubFP_nanorinf:
;__Lib_MathDouble.c,787 :: 		
0x0460	0x700F81  	IOR	WREG0, WREG1, [WREG15]
;__Lib_MathDouble.c,788 :: 		
0x0462	0x320001  	BRA Z	AddSubFP_infinite
;__Lib_MathDouble.c,789 :: 		
0x0464	0x050804  	RETLW	#128, WREG4
;__Lib_MathDouble.c,790 :: 		
AddSubFP_infinite:
;__Lib_MathDouble.c,791 :: 		
0x0466	0x050044  	RETLW	#4, WREG4
;__Lib_MathDouble.c,792 :: 		
AddSubFP_zeroorsub:
;__Lib_MathDouble.c,793 :: 		
0x0468	0x700F81  	IOR	WREG0, WREG1, [WREG15]
;__Lib_MathDouble.c,794 :: 		
0x046A	0x3A0002  	BRA NZ	AddSubFP_subnormal_2
;__Lib_MathDouble.c,795 :: 		
0x046C	0x050014  	RETLW	#1, WREG4
;__Lib_MathDouble.c,796 :: 		
AddSubFP_normalize:
;__Lib_MathDouble.c,797 :: 		
0x046E	0xE90285  	DEC	WREG5, WREG5
;__Lib_MathDouble.c,798 :: 		
AddSubFP_subnormal_2:
;__Lib_MathDouble.c,799 :: 		
0x0470	0x400000  	ADD	WREG0, WREG0, WREG0
;__Lib_MathDouble.c,800 :: 		
0x0472	0x48C081  	ADDC.B	WREG1, WREG1, WREG1
;__Lib_MathDouble.c,801 :: 		
0x0474	0x3BFFFC  	BRA NN	AddSubFP_normalize
;__Lib_MathDouble.c,802 :: 		
0x0476	0xA8E002  	BSET	WREG1, #7
;__Lib_MathDouble.c,803 :: 		
0x0478	0x050024  	RETLW	#2, WREG4
;__Lib_MathDouble.c,806 :: 		
the_end__AddSub_FP:
;__Lib_MathDouble.c,809 :: 		
L_end__AddSub_FP:
0x047A	0xFA8000  	ULNK
0x047C	0x060000  	RETURN
; end of __AddSub_FP
__Long2Float:
0x0564	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,104 :: 		
;__Lib_MathDouble.c,106 :: 		
0x0566	0x070002  	RCALL	LL_intro_Long2Float
;__Lib_MathDouble.c,107 :: 		
0x0568	0x000000040616  	GOTO	the_end__Long2Float
;__Lib_MathDouble.c,109 :: 		
LL_intro_Long2Float:
;__Lib_MathDouble.c,110 :: 		
0x056C	0xE20004  	CP0	WREG2
;__Lib_MathDouble.c,111 :: 		
0x056E	0x3A0006  	BRA NZ	Longint2Float__floatsisf
;__Lib_MathDouble.c,113 :: 		
Longword2Float__floatuisf:
;__Lib_MathDouble.c,114 :: 		
0x0570	0xEB0500  	CLR	WREG10
;__Lib_MathDouble.c,115 :: 		
0x0572	0xE20002  	CP0	WREG1
;__Lib_MathDouble.c,116 :: 		
0x0574	0x3E000F  	BRA GTU	Long2Float_notspecial
;__Lib_MathDouble.c,117 :: 		
0x0576	0xE20000  	CP0	WREG0
;__Lib_MathDouble.c,118 :: 		
0x0578	0x320027  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,119 :: 		
0x057A	0x37000C  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,121 :: 		
Longint2Float__floatsisf:
;__Lib_MathDouble.c,122 :: 		
0x057C	0x8800A1  	MOV	WREG1, WREG10
;__Lib_MathDouble.c,123 :: 		
0x057E	0xE20002  	CP0	WREG1
;__Lib_MathDouble.c,124 :: 		
0x0580	0x350004  	BRA LT	Longint2Float_negative
;__Lib_MathDouble.c,125 :: 		
0x0582	0x3C0008  	BRA GT	Long2Float_notspecial
;__Lib_MathDouble.c,126 :: 		
0x0584	0xE20000  	CP0	WREG0
;__Lib_MathDouble.c,127 :: 		
0x0586	0x320020  	BRA Z	Long2Float_return0
;__Lib_MathDouble.c,128 :: 		
0x0588	0x370005  	BRA	Long2Float_notspecial
;__Lib_MathDouble.c,129 :: 		
Longint2Float_negative:
;__Lib_MathDouble.c,130 :: 		
0x058A	0x100060  	SUBR	WREG0, #0, WREG0
;__Lib_MathDouble.c,131 :: 		
0x058C	0x1880E0  	SUBBR	WREG1, #0, WREG1
;__Lib_MathDouble.c,132 :: 		
0x058E	0x3B0002  	BRA NN	Long2Float_notspecial
;__Lib_MathDouble.c,133 :: 		
0x0590	0x2CF001  	MOV	#52992, WREG1
;__Lib_MathDouble.c,134 :: 		
0x0592	0x37001A  	BRA	Long2Float_return0
;__Lib_MathDouble.c,136 :: 		
Long2Float_notspecial:
;__Lib_MathDouble.c,137 :: 		
0x0594	0xBE8400  	MOV.D	WREG0, WREG8
;__Lib_MathDouble.c,138 :: 		
0x0596	0xB81160  	MUL.UU	WREG2, #0, WREG2
;__Lib_MathDouble.c,139 :: 		
0x0598	0x20096B  	MOV	#150, WREG11
;__Lib_MathDouble.c,140 :: 		
0x059A	0xCF8209  	FF1L	WREG9, WREG4
;__Lib_MathDouble.c,141 :: 		
0x059C	0x390002  	BRA NC	Long2Float_fixshift
;__Lib_MathDouble.c,142 :: 		
0x059E	0xCF8208  	FF1L	WREG8, WREG4
;__Lib_MathDouble.c,143 :: 		
0x05A0	0xB04104  	ADD.B	#16, WREG4
;__Lib_MathDouble.c,144 :: 		
Long2Float_fixshift:
;__Lib_MathDouble.c,145 :: 		
0x05A2	0x524269  	SUB.B	WREG4, #9, WREG4
;__Lib_MathDouble.c,146 :: 		
0x05A4	0x32000E  	BRA Z	Long2Float_round
;__Lib_MathDouble.c,147 :: 		
0x05A6	0x3B0008  	BRA NN	Long2Float_shiftleft
;__Lib_MathDouble.c,148 :: 		
Long2Float_shiftright:
;__Lib_MathDouble.c,149 :: 		
0x05A8	0x718182  	IOR	WREG3, WREG2, WREG3
;__Lib_MathDouble.c,150 :: 		
0x05AA	0x640161  	AND	WREG8, #1, WREG2
;__Lib_MathDouble.c,151 :: 		
0x05AC	0xD10489  	LSR	WREG9, WREG9
;__Lib_MathDouble.c,152 :: 		
0x05AE	0xD38408  	RRC	WREG8, WREG8
;__Lib_MathDouble.c,153 :: 		
0x05B0	0xE8058B  	INC	WREG11, WREG11
;__Lib_MathDouble.c,154 :: 		
0x05B2	0xE84204  	INC.B	WREG4, WREG4
;__Lib_MathDouble.c,155 :: 		
0x05B4	0x3AFFF9  	BRA NZ	Long2Float_shiftright
;__Lib_MathDouble.c,156 :: 		
0x05B6	0x370005  	BRA	Long2Float_round
;__Lib_MathDouble.c,157 :: 		
Long2Float_shiftleft:
;__Lib_MathDouble.c,158 :: 		
0x05B8	0x440408  	ADD	WREG8, WREG8, WREG8
;__Lib_MathDouble.c,159 :: 		
0x05BA	0x4C8489  	ADDC	WREG9, WREG9, WREG9
;__Lib_MathDouble.c,160 :: 		
0x05BC	0xE9058B  	DEC	WREG11, WREG11
;__Lib_MathDouble.c,161 :: 		
0x05BE	0xE94204  	DEC.B	WREG4, WREG4
;__Lib_MathDouble.c,162 :: 		
0x05C0	0x3AFFFB  	BRA NZ	Long2Float_shiftleft
;__Lib_MathDouble.c,163 :: 		
Long2Float_round:
;__Lib_MathDouble.c,164 :: 		
0x05C2	0x070003  	RCALL	Long2Float__fpack
;__Lib_MathDouble.c,165 :: 		
0x05C4	0xA7F00A  	BTSC	WREG10, #15
;__Lib_MathDouble.c,166 :: 		
0x05C6	0xA8E003  	BSET	WREG1, #15
;__Lib_MathDouble.c,167 :: 		
Long2Float_return0:
;__Lib_MathDouble.c,168 :: 		
0x05C8	0x060000  	RETURN
;__Lib_MathDouble.c,169 :: 		
Long2Float__fpack:
;__Lib_MathDouble.c,170 :: 		
0x05CA	0x200081  	MOV	#8, WREG1
;__Lib_MathDouble.c,171 :: 		
0x05CC	0x558061  	SUB	WREG11, #1, WREG0
;__Lib_MathDouble.c,172 :: 		
0x05CE	0x3D000B  	BRA GE	Long2Float_notsubnormal
;__Lib_MathDouble.c,173 :: 		
0x05D0	0x20000B  	MOV	#0, WREG11
;__Lib_MathDouble.c,174 :: 		
0x05D2	0x2FFE61  	MOV	#65510, WREG1
;__Lib_MathDouble.c,175 :: 		
0x05D4	0xE10001  	CP	WREG0, WREG1
;__Lib_MathDouble.c,176 :: 		
0x05D6	0x34001D  	BRA LE	Long2Float_zerosig
;__Lib_MathDouble.c,177 :: 		
Long2Float_subnormal:
;__Lib_MathDouble.c,178 :: 		
0x05D8	0x718182  	IOR	WREG3, WREG2, WREG3
;__Lib_MathDouble.c,179 :: 		
0x05DA	0x640161  	AND	WREG8, #1, WREG2
;__Lib_MathDouble.c,180 :: 		
0x05DC	0xD10489  	LSR	WREG9, WREG9
;__Lib_MathDouble.c,181 :: 		
0x05DE	0xD38408  	RRC	WREG8, WREG8
;__Lib_MathDouble.c,182 :: 		
0x05E0	0xE80000  	INC	WREG0, WREG0
;__Lib_MathDouble.c,183 :: 		
0x05E2	0x3AFFFA  	BRA NZ	Long2Float_subnormal
;__Lib_MathDouble.c,184 :: 		
0x05E4	0x200071  	MOV	#7, WREG1
;__Lib_MathDouble.c,185 :: 		
Long2Float_notsubnormal:
;__Lib_MathDouble.c,186 :: 		
0x05E6	0x640061  	AND	WREG8, #1, WREG0
;__Lib_MathDouble.c,187 :: 		
0x05E8	0x700003  	IOR	WREG0, WREG3, WREG0
;__Lib_MathDouble.c,188 :: 		
0x05EA	0x600002  	AND	WREG0, WREG2, WREG0
;__Lib_MathDouble.c,189 :: 		
0x05EC	0x320009  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,190 :: 		
0x05EE	0x440461  	ADD	WREG8, #1, WREG8
;__Lib_MathDouble.c,191 :: 		
0x05F0	0x4C84E0  	ADDC	WREG9, #0, WREG9
;__Lib_MathDouble.c,192 :: 		
0x05F2	0xA58809  	BTST.Z	WREG9, WREG1
;__Lib_MathDouble.c,193 :: 		
0x05F4	0x320005  	BRA Z	Long2Float_packupandgo
;__Lib_MathDouble.c,194 :: 		
0x05F6	0xE8058B  	INC	WREG11, WREG11
;__Lib_MathDouble.c,195 :: 		
0x05F8	0xE10868  	CP	WREG1, #8
;__Lib_MathDouble.c,196 :: 		
0x05FA	0x3A0002  	BRA NZ	Long2Float_packupandgo
;__Lib_MathDouble.c,197 :: 		
0x05FC	0xD10489  	LSR	WREG9, WREG9
;__Lib_MathDouble.c,198 :: 		
0x05FE	0xD38408  	RRC	WREG8, WREG8
;__Lib_MathDouble.c,199 :: 		
Long2Float_packupandgo:
;__Lib_MathDouble.c,200 :: 		
0x0600	0x200FF2  	MOV	#255, WREG2
;__Lib_MathDouble.c,201 :: 		
0x0602	0xE15802  	CP	WREG11, WREG2
;__Lib_MathDouble.c,202 :: 		
0x0604	0x3D0005  	BRA GE	Long2Float_overflow
;__Lib_MathDouble.c,203 :: 		
0x0606	0xDD5DC7  	SL	WREG11, #7, WREG11
;__Lib_MathDouble.c,204 :: 		
0x0608	0xB207F9  	AND	#127, WREG9
;__Lib_MathDouble.c,205 :: 		
0x060A	0x758089  	IOR	WREG11, WREG9, WREG1
;__Lib_MathDouble.c,206 :: 		
0x060C	0x880008  	MOV	WREG8, WREG0
;__Lib_MathDouble.c,207 :: 		
0x060E	0x060000  	RETURN
;__Lib_MathDouble.c,208 :: 		
Long2Float_overflow:
;__Lib_MathDouble.c,209 :: 		
0x0610	0x27F80B  	MOV	#32640, WREG11
;__Lib_MathDouble.c,210 :: 		
Long2Float_zerosig:
;__Lib_MathDouble.c,211 :: 		
0x0612	0x88001B  	MOV	WREG11, WREG1
;__Lib_MathDouble.c,212 :: 		
0x0614	0x050000  	RETLW	#0, WREG0
;__Lib_MathDouble.c,215 :: 		
the_end__Long2Float:
;__Lib_MathDouble.c,218 :: 		
L_end__Long2Float:
0x0616	0xFA8000  	ULNK
0x0618	0x060000  	RETURN
; end of __Long2Float
__Float2Longint:
0x0492	0xFA0000  	LNK	#0
;__Lib_MathDouble.c,479 :: 		
;__Lib_MathDouble.c,481 :: 		
0x0494	0x070002  	RCALL	Float2Longint__fixsfsi
;__Lib_MathDouble.c,482 :: 		
0x0496	0x000000040506  	GOTO	the_end__Float2Longint
;__Lib_MathDouble.c,486 :: 		
Float2Longint__fixsfsi:
;__Lib_MathDouble.c,487 :: 		
0x049A	0xBE8100  	MOV.D	WREG0, WREG2
;__Lib_MathDouble.c,488 :: 		
0x049C	0x07001F  	RCALL	Float2Longint__funpack
;__Lib_MathDouble.c,489 :: 		
0x049E	0xA77004  	BTSC	WREG4, #7
;__Lib_MathDouble.c,490 :: 		
0x04A0	0xA1F003  	BCLR	WREG3, #15
;__Lib_MathDouble.c,491 :: 		
0x04A2	0xB10965  	SUB	#150, WREG5
;__Lib_MathDouble.c,492 :: 		
0x04A4	0x320016  	BRA Z	Float2Longint_setsign
;__Lib_MathDouble.c,493 :: 		
0x04A6	0x35000D  	BRA LT	Float2Longint_shiftright
;__Lib_MathDouble.c,494 :: 		
0x04A8	0xE12868  	CP	WREG5, #8
;__Lib_MathDouble.c,495 :: 		
0x04AA	0x350006  	BRA LT	Float2Longint_shiftleft
;__Lib_MathDouble.c,496 :: 		
0x04AC	0x2FFFF0  	MOV	#65535, WREG0
;__Lib_MathDouble.c,497 :: 		
0x04AE	0x27FFF1  	MOV	#32767, WREG1
;__Lib_MathDouble.c,498 :: 		
0x04B0	0xE20006  	CP0	WREG3
;__Lib_MathDouble.c,499 :: 		
0x04B2	0x3B0013  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,500 :: 		
0x04B4	0x280001  	MOV	#32768, WREG1
;__Lib_MathDouble.c,501 :: 		
0x04B6	0x050000  	RETLW	#0, WREG0
;__Lib_MathDouble.c,502 :: 		
Float2Longint_shiftleft:
;__Lib_MathDouble.c,503 :: 		
0x04B8	0x400000  	ADD	WREG0, WREG0, WREG0
;__Lib_MathDouble.c,504 :: 		
0x04BA	0x488081  	ADDC	WREG1, WREG1, WREG1
;__Lib_MathDouble.c,505 :: 		
0x04BC	0xE90285  	DEC	WREG5, WREG5
;__Lib_MathDouble.c,506 :: 		
0x04BE	0x3AFFFC  	BRA NZ	Float2Longint_shiftleft
;__Lib_MathDouble.c,507 :: 		
0x04C0	0x370008  	BRA	Float2Longint_setsign
;__Lib_MathDouble.c,508 :: 		
Float2Longint_shiftright:
;__Lib_MathDouble.c,509 :: 		
0x04C2	0x428FF8  	ADD	WREG5, #24, [WREG15]
;__Lib_MathDouble.c,510 :: 		
0x04C4	0x3C0002  	BRA GT	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,511 :: 		
0x04C6	0xEB0080  	CLR	WREG1
;__Lib_MathDouble.c,512 :: 		
0x04C8	0x050000  	RETLW	#0, WREG0
;__Lib_MathDouble.c,513 :: 		
Float2Longint_shiftrightloop:
;__Lib_MathDouble.c,514 :: 		
0x04CA	0xD10081  	LSR	WREG1, WREG1
;__Lib_MathDouble.c,515 :: 		
0x04CC	0xD38000  	RRC	WREG0, WREG0
;__Lib_MathDouble.c,516 :: 		
0x04CE	0xE80285  	INC	WREG5, WREG5
;__Lib_MathDouble.c,517 :: 		
0x04D0	0x3AFFFC  	BRA NZ	Float2Longint_shiftrightloop
;__Lib_MathDouble.c,518 :: 		
Float2Longint_setsign:
;__Lib_MathDouble.c,519 :: 		
0x04D2	0xE20006  	CP0	WREG3
;__Lib_MathDouble.c,520 :: 		
0x04D4	0x3B0002  	BRA NN	Float2Longint_exit
;__Lib_MathDouble.c,521 :: 		
0x04D6	0x100060  	SUBR	WREG0, #0, WREG0
;__Lib_MathDouble.c,522 :: 		
0x04D8	0x1880E0  	SUBBR	WREG1, #0, WREG1
;__Lib_MathDouble.c,523 :: 		
Float2Longint_exit:
;__Lib_MathDouble.c,524 :: 		
0x04DA	0x060000  	RETURN
;__Lib_MathDouble.c,525 :: 		
Float2Longint__funpack:
;__Lib_MathDouble.c,526 :: 		
0x04DC	0xDE0AC7  	LSR	WREG1, #7, WREG5
;__Lib_MathDouble.c,527 :: 		
0x04DE	0xB207F1  	AND	#127, WREG1
;__Lib_MathDouble.c,528 :: 		
0x04E0	0xB20FF5  	AND	#255, WREG5
;__Lib_MathDouble.c,529 :: 		
0x04E2	0x320008  	BRA Z	Float2Longint_zeroorsub
;__Lib_MathDouble.c,530 :: 		
0x04E4	0x42CFE1  	ADD.B	WREG5, #1, [WREG15]
;__Lib_MathDouble.c,531 :: 		
0x04E6	0x320002  	BRA Z	Float2Longint_nanorinf
;__Lib_MathDouble.c,532 :: 		
Float2Longint_finitereturn:
;__Lib_MathDouble.c,533 :: 		
0x04E8	0xA8E002  	BSET	WREG1, #7
;__Lib_MathDouble.c,534 :: 		
0x04EA	0x050024  	RETLW	#2, WREG4
;__Lib_MathDouble.c,535 :: 		
Float2Longint_nanorinf:
;__Lib_MathDouble.c,536 :: 		
0x04EC	0x700F81  	IOR	WREG0, WREG1, [WREG15]
;__Lib_MathDouble.c,537 :: 		
0x04EE	0x320001  	BRA Z	Float2Longint_infinite
;__Lib_MathDouble.c,538 :: 		
0x04F0	0x050804  	RETLW	#128, WREG4
;__Lib_MathDouble.c,539 :: 		
Float2Longint_infinite:
;__Lib_MathDouble.c,540 :: 		
0x04F2	0x050044  	RETLW	#4, WREG4
;__Lib_MathDouble.c,541 :: 		
Float2Longint_zeroorsub:
;__Lib_MathDouble.c,542 :: 		
0x04F4	0x700F81  	IOR	WREG0, WREG1, [WREG15]
;__Lib_MathDouble.c,543 :: 		
0x04F6	0x3A0002  	BRA NZ	Float2Longint_subnormal
;__Lib_MathDouble.c,544 :: 		
0x04F8	0x050014  	RETLW	#1, WREG4
;__Lib_MathDouble.c,545 :: 		
Float2Longint_normalize:
;__Lib_MathDouble.c,546 :: 		
0x04FA	0xE90285  	DEC	WREG5, WREG5
;__Lib_MathDouble.c,547 :: 		
Float2Longint_subnormal:
;__Lib_MathDouble.c,548 :: 		
0x04FC	0x400000  	ADD	WREG0, WREG0, WREG0
;__Lib_MathDouble.c,549 :: 		
0x04FE	0x48C081  	ADDC.B	WREG1, WREG1, WREG1
;__Lib_MathDouble.c,550 :: 		
0x0500	0x3BFFFC  	BRA NN	Float2Longint_normalize
;__Lib_MathDouble.c,551 :: 		
0x0502	0xA8E002  	BSET	WREG1, #7
;__Lib_MathDouble.c,552 :: 		
0x0504	0x050024  	RETLW	#2, WREG4
;__Lib_MathDouble.c,555 :: 		
the_end__Float2Longint:
;__Lib_MathDouble.c,557 :: 		
L_end__Float2Longint:
0x0506	0xFA8000  	ULNK
0x0508	0x060000  	RETURN
; end of __Float2Longint
0x0D2A	0x208001  	MOV	#lo_addr(?lstr1_test), WREG1
0x0D2C	0x280000  	MOV	#32768, WREG0
0x0D2E	0x09001A  	REPEAT	#26
0x0D30	0x7818B0  	MOV	[WREG0++], [WREG1++]
0x0D32	0x060000  	RETURN
;test.c,0 :: ?ICS?lstr1_test [4]
0x8000	0x5049 ;?ICS?lstr1_test+0
0x8002	0x0041 ;?ICS?lstr1_test+2
; end of ?ICS?lstr1_test
;,0 :: _initBlock_1 [24]
; Containing: ?ICS?lstr3_test [5]
;             ?ICS?lstr4_test [8]
;             ?ICS?lstr2_test [4]
;             ?ICS?lstr6_test [7]
0x8004	0x4253 ;_initBlock_1+0 : ?ICS?lstr3_test at 0x8004
0x8006	0x2044 ;_initBlock_1+2
0x8008	0x2400 ;_initBlock_1+4 : ?ICS?lstr4_test at 0x8009
0x800A	0x4430 ;_initBlock_1+6
0x800C	0x3030 ;_initBlock_1+8
0x800E	0x3030 ;_initBlock_1+10
0x8010	0x4500 ;_initBlock_1+12 : ?ICS?lstr2_test at 0x8011
0x8012	0x5343 ;_initBlock_1+14
0x8014	0x5700 ;_initBlock_1+16 : ?ICS?lstr6_test at 0x8015
0x8016	0x4652 ;_initBlock_1+18
0x8018	0x3220 ;_initBlock_1+20
0x801A	0x0038 ;_initBlock_1+22
; end of _initBlock_1
;,0 :: _initBlock_2 [26]
; Containing: ?ICS?lstr5_test [13]
;             ?ICS?lstr7_test [13]
0x801C	0x504F ;_initBlock_2+0 : ?ICS?lstr5_test at 0x801C
0x801E	0x2057 ;_initBlock_2+2
0x8020	0x4554 ;_initBlock_2+4
0x8022	0x5453 ;_initBlock_2+6
0x8024	0x632E ;_initBlock_2+8
0x8026	0x7673 ;_initBlock_2+10
0x8028	0x4300 ;_initBlock_2+12 : ?ICS?lstr7_test at 0x8029
0x802A	0x464C ;_initBlock_2+14
0x802C	0x7420 ;_initBlock_2+16
0x802E	0x7365 ;_initBlock_2+18
0x8030	0x2E74 ;_initBlock_2+20
0x8032	0x7363 ;_initBlock_2+22
0x8034	0x0076 ;_initBlock_2+24
; end of _initBlock_2
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0200      [18]    __Multiply_32x32
0x0212      [14]    _Delay_100ms
0x0220      [88]    __Modulus_32x32
0x0278      [72]    _WordToStr
0x02C0      [82]    __Divide_32x32
0x0312     [364]    __AddSub_FP
0x047E       [6]    _Get_Fosc_kHz
0x0484      [14]    _UART1_Write
0x0492     [120]    __Float2Longint
0x050A      [80]    _IntToStr
0x055A      [10]    __Sub_FP
0x0564     [182]    __Long2Float
0x061A     [282]    __Mul_FP
0x0734     [242]    _UART2_Init
0x0826     [122]    _pll_init
0x08A0      [38]    _ADC1_Init_Advanced
0x08C6     [242]    _UART1_Init
0x09B8      [48]    _ADC1_Get_Sample
0x09E8      [34]    _UART2_Write_Text
0x0A0A      [14]    _UART2_Write
0x0A18     [786]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0330       [2]    AD1CSSL
0x0332       [2]    AD1CON4
0x032E       [2]    AD1CSSH
0x0836       [2]    _UART_Rd_Ptr
0x0838       [2]    _UART_Wr_Ptr
0x0300       [2]    ADC1BUF0
0x0320       [2]    AD1CON1
0x083A       [2]    _ADC_Get_Sample_Ptr
0x0324       [2]    AD1CON3
0x0322       [2]    AD1CON2
0x0232       [2]    U2STA
0x0230       [2]    U2MODE
0x0238       [2]    U2BRG
0x0224       [2]    U1TXREG
0x0234       [2]    U2TXREG
0x083C       [2]    _UART_Tx_Idle_Ptr
0x083E       [2]    _UART_Rdy_Ptr
0x0220       [2]    U1MODE
0x0228       [2]    U1BRG
0x0222       [2]    U1STA
0x0328       [2]    AD1CHS0
0x0742       [0]    OSWEN_bit
0x0746       [2]    PLLFBDbits
0x0742       [0]    LOCK_bit
0x02D2       [2]    TRISD
0x02E4       [2]    TRISG
0x02E6       [2]    PORTG
0x0742       [0]    CLKLOCK_bit
0x0742       [2]    OSCCON
0x0744       [2]    CLKDIVbits
0x0742       [2]    OSCCONbits
0x032C       [2]    AD1PCFGL
0x032A       [2]    AD1PCFGH
0x02D4       [0]    RD0_bit
0x0800       [4]    ?lstr1_test
0x0804       [5]    ?lstr3_test
0x0809       [8]    ?lstr4_test
0x0811       [4]    ?lstr2_test
0x0815       [7]    ?lstr6_test
0x081C      [13]    ?lstr5_test
0x0829      [13]    ?lstr7_test
0x0020       [2]    SPLIM
0x0022       [2]    ACCAL
0x0024       [2]    ACCAH
0x0026       [2]    ACCAU
0x0028       [2]    ACCBL
0x002A       [2]    ACCBH
0x002C       [2]    ACCBU
0x002E       [2]    PCL
0x0030       [2]    PCH
0x0032       [2]    TBLPAG
0x0034       [2]    PSVPAG
0x0036       [2]    RCOUNT
0x0038       [2]    DCOUNT
0x003A       [2]    DOSTARTL
0x003C       [2]    DOSTARTH
0x003E       [2]    DOENDL
0x0040       [2]    DOENDH
0x0042       [2]    SR
0x0044       [2]    CORCON
0x0046       [2]    MODCON
0x0048       [2]    XMODSRT
0x004A       [2]    XMODEND
0x004C       [2]    YMODSRT
0x004E       [2]    YMODEND
0x0050       [2]    XBREV
0x0052       [2]    DISICNT
0x0060       [2]    CNEN1
0x0062       [2]    CNEN2
0x0068       [2]    CNPU1
0x006A       [2]    CNPU2
0x0080       [2]    INTCON1
0x0082       [2]    INTCON2
0x0084       [2]    IFS0
0x0086       [2]    IFS1
0x0088       [2]    IFS2
0x008A       [2]    IFS3
0x008C       [2]    IFS4
0x0094       [2]    IEC0
0x0096       [2]    IEC1
0x0098       [2]    IEC2
0x009A       [2]    IEC3
0x009C       [2]    IEC4
0x00A4       [2]    IPC0
0x00A6       [2]    IPC1
0x00A8       [2]    IPC2
0x00AA       [2]    IPC3
0x00AC       [2]    IPC4
0x00AE       [2]    IPC5
0x00B0       [2]    IPC6
0x00B2       [2]    IPC7
0x00B4       [2]    IPC8
0x00B6       [2]    IPC9
0x00B8       [2]    IPC10
0x00BA       [2]    IPC11
0x00BC       [2]    IPC12
0x00BE       [2]    IPC13
0x00C0       [2]    IPC14
0x00C2       [2]    IPC15
0x00C4       [2]    IPC16
0x00C6       [2]    IPC17
0x00E0       [2]    INTTREG
0x0100       [2]    TMR1
0x0102       [2]    PR1
0x0104       [2]    T1CON
0x0106       [2]    TMR2
0x0108       [2]    TMR3HLD
0x010A       [2]    TMR3
0x010C       [2]    PR2
0x010E       [2]    PR3
0x0110       [2]    T2CON
0x0112       [2]    T3CON
0x0114       [2]    TMR4
0x0116       [2]    TMR5HLD
0x0118       [2]    TMR5
0x011A       [2]    PR4
0x011C       [2]    PR5
0x011E       [2]    T4CON
0x0120       [2]    T5CON
0x0122       [2]    TMR6
0x0124       [2]    TMR7HLD
0x0126       [2]    TMR7
0x0128       [2]    PR6
0x012A       [2]    PR7
0x012C       [2]    T6CON
0x012E       [2]    T7CON
0x0130       [2]    TMR8
0x0132       [2]    TMR9HLD
0x0134       [2]    TMR9
0x0136       [2]    PR8
0x0138       [2]    PR9
0x013A       [2]    T8CON
0x013C       [2]    T9CON
0x0140       [2]    IC1BUF
0x0142       [2]    IC1CON
0x0144       [2]    IC2BUF
0x0146       [2]    IC2CON
0x0148       [2]    IC3BUF
0x014A       [2]    IC3CON
0x014C       [2]    IC4BUF
0x014E       [2]    IC4CON
0x0150       [2]    IC5BUF
0x0152       [2]    IC5CON
0x0154       [2]    IC6BUF
0x0156       [2]    IC6CON
0x0158       [2]    IC7BUF
0x015A       [2]    IC7CON
0x015C       [2]    IC8BUF
0x015E       [2]    IC8CON
0x0180       [2]    OC1RS
0x0182       [2]    OC1R
0x0184       [2]    OC1CON
0x0186       [2]    OC2RS
0x0188       [2]    OC2R
0x018A       [2]    OC2CON
0x018C       [2]    OC3RS
0x018E       [2]    OC3R
0x0190       [2]    OC3CON
0x0192       [2]    OC4RS
0x0194       [2]    OC4R
0x0196       [2]    OC4CON
0x0198       [2]    OC5RS
0x019A       [2]    OC5R
0x019C       [2]    OC5CON
0x019E       [2]    OC6RS
0x01A0       [2]    OC6R
0x01A2       [2]    OC6CON
0x01A4       [2]    OC7RS
0x01A6       [2]    OC7R
0x01A8       [2]    OC7CON
0x01AA       [2]    OC8RS
0x01AC       [2]    OC8R
0x01AE       [2]    OC8CON
0x0200       [2]    I2C1RCV
0x0200       [2]    I2CRCV
0x0202       [2]    I2C1TRN
0x0202       [2]    I2CTRN
0x0204       [2]    I2C1BRG
0x0206       [2]    I2C1CON
0x0206       [2]    I2CCON
0x0208       [2]    I2CSTAT
0x0208       [2]    I2C1STAT
0x020A       [2]    I2C1ADD
0x020A       [2]    I2CADD
0x020C       [2]    I2C1MSK
0x0210       [2]    I2C2RCV
0x0212       [2]    I2C2TRN
0x0214       [2]    I2C2BRG
0x0216       [2]    I2C2CON
0x0218       [2]    I2C2STAT
0x021A       [2]    I2C2ADD
0x021C       [2]    I2C2MSK
0x0220       [2]    U1MODE
0x0222       [2]    U1STA
0x0224       [2]    U1TXREG
0x0226       [2]    U1RXREG
0x0228       [2]    U1BRG
0x0230       [2]    U2MODE
0x0232       [2]    U2STA
0x0234       [2]    U2TXREG
0x0236       [2]    U2RXREG
0x0238       [2]    U2BRG
0x0240       [2]    SPI1STAT
0x0242       [2]    SPI1CON1
0x0242       [2]    SPI1CON
0x0244       [2]    SPI1CON2
0x0248       [2]    SPI1BUF
0x0260       [2]    SPI2STAT
0x0262       [2]    SPI2CON1
0x0262       [2]    SPI2CON
0x0264       [2]    SPI2CON2
0x0268       [2]    SPI2BUF
0x0014       [2]    FARG_WordToStr_input
0x0016       [2]    FARG_WordToStr_output
0x0280       [2]    DCICON1
0x0282       [2]    DCICON2
0x0284       [2]    DCICON3
0x0286       [2]    DCISTAT
0x0288       [2]    TSCON
0x028C       [2]    RSCON
0x0290       [2]    RXBUF0
0x0292       [2]    RXBUF1
0x0294       [2]    RXBUF2
0x0296       [2]    RXBUF3
0x0298       [2]    TXBUF0
0x029A       [2]    TXBUF1
0x029C       [2]    TXBUF2
0x029E       [2]    TXBUF3
0x02C6       [2]    TRISB
0x02C8       [2]    PORTB
0x02CA       [2]    LATB
0x02CC       [2]    TRISC
0x02CE       [2]    PORTC
0x02D0       [2]    LATC
0x02D2       [2]    TRISD
0x02D4       [2]    PORTD
0x02D6       [2]    LATD
0x02DE       [2]    TRISF
0x02E0       [2]    PORTF
0x02E2       [2]    LATF
0x02E4       [2]    TRISG
0x02E6       [2]    PORTG
0x02E8       [2]    LATG
0x0300       [2]    ADCBUF0
0x0300       [2]    ADC1BUF0
0x0320       [2]    AD1CON1
0x0322       [2]    AD1CON2
0x0324       [2]    AD1CON3
0x0326       [2]    AD1CHS123
0x0328       [2]    AD1CHS0
0x032A       [2]    AD1PCFGH
0x032C       [2]    AD1PCFGL
0x032E       [2]    AD1CSSH
0x0330       [2]    AD1CSSL
0x0332       [2]    AD1CON4
0x0340       [2]    ADC2BUF0
0x0360       [2]    AD2CON1
0x0362       [2]    AD2CON2
0x0364       [2]    AD2CON3
0x0366       [2]    AD2CHS123
0x0368       [2]    AD2CHS0
0x036C       [2]    AD2PCFGL
0x036C       [2]    AD2PCFG
0x0370       [2]    AD2CSSL
0x0372       [2]    AD2CON4
0x0380       [2]    DMA0CON
0x0382       [2]    DMA0REQ
0x0384       [2]    DMA0STA
0x0386       [2]    DMA0STB
0x0388       [2]    DMA0PAD
0x038A       [2]    DMA0CNT
0x038C       [2]    DMA1CON
0x038E       [2]    DMA1REQ
0x0390       [2]    DMA1STA
0x0392       [2]    DMA1STB
0x0394       [2]    DMA1PAD
0x0396       [2]    DMA1CNT
0x0398       [2]    DMA2CON
0x039A       [2]    DMA2REQ
0x039C       [2]    DMA2STA
0x039E       [2]    DMA2STB
0x03A0       [2]    DMA2PAD
0x03A2       [2]    DMA2CNT
0x03A4       [2]    DMA3CON
0x03A6       [2]    DMA3REQ
0x03A8       [2]    DMA3STA
0x03AA       [2]    DMA3STB
0x03AC       [2]    DMA3PAD
0x03AE       [2]    DMA3CNT
0x03B0       [2]    DMA4CON
0x03B2       [2]    DMA4REQ
0x03B4       [2]    DMA4STA
0x03B6       [2]    DMA4STB
0x03B8       [2]    DMA4PAD
0x03BA       [2]    DMA4CNT
0x03BC       [2]    DMA5CON
0x03BE       [2]    DMA5REQ
0x03C0       [2]    DMA5STA
0x03C2       [2]    DMA5STB
0x03C4       [2]    DMA5PAD
0x03C6       [2]    DMA5CNT
0x03C8       [2]    DMA6CON
0x03CA       [2]    DMA6REQ
0x03CC       [2]    DMA6STA
0x03CE       [2]    DMA6STB
0x03D0       [2]    DMA6PAD
0x03D2       [2]    DMA6CNT
0x03D4       [2]    DMA7CON
0x03D6       [2]    DMA7REQ
0x03D8       [2]    DMA7STA
0x03DA       [2]    DMA7STB
0x03DC       [2]    DMA7PAD
0x03DE       [2]    DMA7CNT
0x03E0       [2]    DMACS0
0x03E2       [2]    DMACS1
0x03E4       [2]    DSADR
0x0400       [2]    C1CTRL1
0x0402       [2]    C1CTRL2
0x0404       [2]    C1VEC
0x0406       [2]    C1FCTRL
0x0408       [2]    C1FIFO
0x040A       [2]    C1INTF
0x040C       [2]    C1INTE
0x040E       [2]    C1RERRCNT
0x040E       [2]    C1EC
0x0410       [2]    C1CFG1
0x0412       [2]    C1CFG2
0x0414       [2]    C1FEN1
0x0418       [2]    C1FMSKSEL1
0x041A       [2]    C1FMSKSEL2
0x0420       [2]    C1RXFUL1
0x0420       [2]    C1BUFPNT1
0x0422       [2]    C1RXFUL2
0x0422       [2]    C1BUFPNT2
0x0424       [2]    C1BUFPNT3
0x0426       [2]    C1BUFPNT4
0x0428       [2]    C1RXOVF1
0x042A       [2]    C1RXOVF2
0x0430       [2]    C1RXM0SID
0x0430       [2]    C1TR01CON
0x0432       [2]    C1TR23CON
0x0432       [2]    C1RXM0EID
0x0434       [2]    C1RXM1SID
0x0434       [2]    C1TR45CON
0x0436       [2]    C1RXM1EID
0x0436       [2]    C1TR67CON
0x0438       [2]    C1RXM2SID
0x043A       [2]    C1RXM2EID
0x0440       [2]    C1RXF0SID
0x0440       [2]    C1RXD
0x0442       [2]    C1TXD
0x0442       [2]    C1RXF0EID
0x0444       [2]    C1RXF1SID
0x0446       [2]    C1RXF1EID
0x0448       [2]    C1RXF2SID
0x044A       [2]    C1RXF2EID
0x044C       [2]    C1RXF3SID
0x044E       [2]    C1RXF3EID
0x0450       [2]    C1RXF4SID
0x0452       [2]    C1RXF4EID
0x0454       [2]    C1RXF5SID
0x0456       [2]    C1RXF5EID
0x0458       [2]    C1RXF6SID
0x045A       [2]    C1RXF6EID
0x045C       [2]    C1RXF7SID
0x045E       [2]    C1RXF7EID
0x0460       [2]    C1RXF8SID
0x0462       [2]    C1RXF8EID
0x0464       [2]    C1RXF9SID
0x0466       [2]    C1RXF9EID
0x0468       [2]    C1RXF10SID
0x046A       [2]    C1RXF10EID
0x046C       [2]    C1RXF11SID
0x046E       [2]    C1RXF11EID
0x0470       [2]    C1RXF12SID
0x0472       [2]    C1RXF12EID
0x0474       [2]    C1RXF13SID
0x0476       [2]    C1RXF13EID
0x0478       [2]    C1RXF14SID
0x047A       [2]    C1RXF14EID
0x047C       [2]    C1RXF15SID
0x047E       [2]    C1RXF15EID
0x0014       [2]    FARG_UART1_Write__data
0x0500       [2]    C2CTRL1
0x0502       [2]    C2CTRL2
0x0504       [2]    C2VEC
0x0506       [2]    C2FCTRL
0x0508       [2]    C2FIFO
0x050A       [2]    C2INTF
0x0014       [2]    FARG_IntToStr_input
0x0016       [2]    FARG_IntToStr_output
0x050C       [2]    C2INTE
0x050E       [2]    C2EC
0x050E       [2]    C2RERRCNT
0x0510       [2]    C2CFG1
0x0512       [2]    C2CFG2
0x0514       [2]    C2FEN1
0x0518       [2]    C2FMSKSEL1
0x051A       [2]    C2FMSKSEL2
0x0520       [2]    C2RXFUL1
0x0520       [2]    C2BUFPNT1
0x0522       [2]    C2BUFPNT2
0x0522       [2]    C2RXFUL2
0x0524       [2]    C2BUFPNT3
0x0526       [2]    C2BUFPNT4
0x0528       [2]    C2RXOVF1
0x052A       [2]    C2RXOVF2
0x0530       [2]    C2RXM0SID
0x0530       [2]    C2TR01CON
0x0532       [2]    C2TR23CON
0x0532       [2]    C2RXM0EID
0x0534       [2]    C2RXM1SID
0x0534       [2]    C2TR45CON
0x0536       [2]    C2RXM1EID
0x0536       [2]    C2TR67CON
0x0538       [2]    C2RXM2SID
0x053A       [2]    C2RXM2EID
0x0540       [2]    C2RXF0SID
0x0540       [2]    C2RXD
0x0542       [2]    C2TXD
0x0542       [2]    C2RXF0EID
0x0544       [2]    C2RXF1SID
0x0546       [2]    C2RXF1EID
0x0548       [2]    C2RXF2SID
0x054A       [2]    C2RXF2EID
0x054C       [2]    C2RXF3SID
0x054E       [2]    C2RXF3EID
0x0550       [2]    C2RXF4SID
0x0552       [2]    C2RXF4EID
0x0554       [2]    C2RXF5SID
0x0556       [2]    C2RXF5EID
0x0558       [2]    C2RXF6SID
0x055A       [2]    C2RXF6EID
0x055C       [2]    C2RXF7SID
0x055E       [2]    C2RXF7EID
0x0560       [2]    C2RXF8SID
0x0562       [2]    C2RXF8EID
0x0564       [2]    C2RXF9SID
0x0566       [2]    C2RXF9EID
0x0568       [2]    C2RXF10SID
0x056A       [2]    C2RXF10EID
0x056C       [2]    C2RXF11SID
0x056E       [2]    C2RXF11EID
0x0570       [2]    C2RXF12SID
0x0572       [2]    C2RXF12EID
0x0574       [2]    C2RXF13SID
0x0576       [2]    C2RXF13EID
0x0578       [2]    C2RXF14SID
0x057A       [2]    C2RXF14EID
0x057C       [2]    C2RXF15SID
0x057E       [2]    C2RXF15EID
0x06D2       [2]    ODCD
0x06DE       [2]    ODCF
0x06E4       [2]    ODCG
0x0014       [4]    FARG_UART2_Init_baud_rate
0x0740       [2]    RCON
0x0742       [2]    OSCCON
0x0742       [2]    OSCCONL
0x0744       [2]    CLKDIV
0x0746       [2]    PLLFBD
0x0748       [2]    OSCTUN
0x0750       [2]    BSRAM
0x0752       [2]    SSRAM
0x0760       [2]    NVMCON
0x0766       [2]    NVMKEY
0x0770       [2]    PMD1
0x0772       [2]    PMD2
0x0774       [2]    PMD3
0x0014       [2]    FARG_ADC1_Init_Advanced_AdcMode
0x0016       [2]    FARG_ADC1_Init_Advanced_Reference
0x0014       [4]    FARG_UART1_Init_baud_rate
0x0014       [2]    FARG_ADC1_Get_Sample_channel
0x0014       [2]    FARG_UART2_Write_Text_uart_text
0x0014       [2]    FARG_UART2_Write__data
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x8000       [4]    ?ICS?lstr1_test
0x8004       [5]    ?ICS?lstr3_test
0x8009       [8]    ?ICS?lstr4_test
0x8011       [4]    ?ICS?lstr2_test
0x8015       [7]    ?ICS?lstr6_test
0x801C      [13]    ?ICS?lstr5_test
0x8029      [13]    ?ICS?lstr7_test
//** Label List: ** 
//----------------------------------------------
  L_pll_init0
  L_pll_init2
  L_pll_init3
  L_pll_init4
  L_pll_init5
  L_chop6
  L_chop8
  L_chop10
  L_chop12
  L_chop14
  L_main16
  L_main18
  L_main20
  L_main22
  L_main24
  L_main26
  L_main27
  L_main28
  L_main29
  L_main30
  L_main31
  L_main32
  L_main33
  L_main34
  L_main35
  L_main36
  L_main37
  L_main38
  L_main39
  L_main40
  L_main41
  L_main42
  L_main43
  L_main44
  L_main45
  L_main46
  L_main47
  L_main48
  L_main49
  L_main50
  L_end_pll_init
  _pll_init
  L_end_chop
  _chop
  L_end_main
  _main
  L__main54
  L__main55
  L__main56
  L__main57
  L__main58
  L__main59
  L__main60
  L_ADC1_Get_Sample0
  L_ADC1_Get_Sample1
  L_ADC1_Get_Sample2
  L_ADC1_Get_Sample3
  L_ADC2_Get_Sample4
  L_ADC2_Get_Sample5
  L_end_ADC1_Init
  _ADC1_Init
  L_end_ADC1_Init_Advanced
  _ADC1_Init_Advanced
  L_end_ADC1_Get_Sample
  _ADC1_Get_Sample
  L__ADC1_Get_Sample9
  L_end_ADC1_Read
  _ADC1_Read
  L_end_ADC2_Init
  _ADC2_Init
  L_end_ADC2_Init_Advanced
  _ADC2_Init_Advanced
  L_end_ADC2_Get_Sample
  _ADC2_Get_Sample
  L_end_ADC2_Read
  _ADC2_Read
  L_end_ADC_Set_Active
  _ADC_Set_Active
  L_ByteToStr0
  L_ByteToStr1
  L_ByteToStr2
  L_ByteToStr3
  L_ByteToStr4
  L_ByteToStr5
  L_WordToStr6
  L_WordToStr7
  L_WordToStr8
  L_WordToStr9
  L_WordToStr10
  L_WordToStr11
  L_WordToStrWithZeros12
  L_WordToStrWithZeros13
  L_WordToStrWithZeros14
  L_WordToStrWithZeros15
  L_WordToStrWithZeros16
  L_ShortToStr17
  L_ShortToStr18
  L_ShortToStr19
  L_ShortToStr20
  L_ShortToStr21
  L_ShortToStr22
  L_IntToStr23
  L_IntToStr24
  L_IntToStr25
  L_IntToStr26
  L_IntToStr27
  L_IntToStr28
  L_IntToStrWithZeros29
  L_IntToStrWithZeros30
  L_IntToStrWithZeros31
  L_IntToStrWithZeros32
  L_IntToStrWithZeros33
  L_IntToStrWithZeros34
  L_IntToStrWithZeros35
  L_IntToStrWithZeros36
  L_LongWordToStr37
  L_LongWordToStr38
  L_LongWordToStr39
  L_LongWordToStr40
  L_LongWordToStr41
  L_LongWordToStr42
  L_LongWordToStrWithZeros43
  L_LongWordToStrWithZeros44
  L_LongWordToStrWithZeros45
  L_LongWordToStrWithZeros46
  L_LongWordToStrWithZeros47
  L_LongToStr48
  L_LongToStr49
  L_LongToStr50
  L_LongToStr51
  L_LongToStr52
  L_LongToStr53
  L_LongIntToStrWithZeros54
  L_LongIntToStrWithZeros55
  L_LongIntToStrWithZeros56
  L_LongIntToStrWithZeros57
  L_LongIntToStrWithZeros58
  L_LongIntToStrWithZeros59
  L_LongIntToStrWithZeros60
  L_LongIntToStrWithZeros61
  L_Dec2Bcd62
  L_Dec2Bcd63
  L_Rtrim64
  L_Rtrim65
  L_Ltrim66
  L_Ltrim67
  L_Ltrim68
  L_Ltrim69
  L_Ltrim70
  L_Ltrim71
  L_FloatToStr72
  L_FloatToStr73
  L_FloatToStr74
  L_FloatToStr75
  L_FloatToStr76
  L_FloatToStr77
  L_FloatToStr78
  L_FloatToStr79
  L_FloatToStr80
  L_FloatToStr81
  L_FloatToStr82
  L_FloatToStr83
  L_FloatToStr84
  L_FloatToStr85
  L_FloatToStr86
  L_FloatToStr87
  L_FloatToStr88
  L_FloatToStr89
  L_FloatToStr90
  L_FloatToStr91
  L_FloatToStr92
  L_FloatToStr93
  L__ShortToStr94
  L__IntToStr95
  L__IntToStrWithZeros96
  L__LongToStr97
  L__Ltrim98
  L__Ltrim99
  L__Ltrim100
  L__Ltrim101
  L__FloatToStr102
  L__FloatToStr103
  L__FloatToStr104
  L__FloatToStr105
  L__FloatToStr106
  L__FloatToStr107
  L_end_ByteToHex
  _ByteToHex
  L_end_ShortToHex
  _ShortToHex
  L_end_WordToHex
  _WordToHex
  L_end_IntToHex
  _IntToHex
  L_end_LongWordToHex
  _LongWordToHex
  L_end_LongIntToHex
  _LongIntToHex
  L_end_ByteToStr
  _ByteToStr
  L__ByteToStr115
  L__ByteToStr116
  L_end_WordToStr
  _WordToStr
  L__WordToStr118
  L__WordToStr119
  L_end_WordToStrWithZeros
  _WordToStrWithZeros
  L__WordToStrWithZeros121
  L__WordToStrWithZeros122
  L_end_ShortToStr
  _ShortToStr
  L__ShortToStr124
  L__ShortToStr125
  L__ShortToStr126
  L__ShortToStr127
  L_end_IntToStr
  _IntToStr
  L__IntToStr129
  L__IntToStr130
  L__IntToStr131
  L__IntToStr132
  L_end_IntToStrWithZeros
  _IntToStrWithZeros
  L__IntToStrWithZeros134
  L__IntToStrWithZeros135
  L__IntToStrWithZeros136
  L__IntToStrWithZeros137
  L__IntToStrWithZeros138
  L_end_LongWordToStr
  _LongWordToStr
  L__LongWordToStr140
  L__LongWordToStr141
  L_end_LongWordToStrWithZeros
  _LongWordToStrWithZeros
  L__LongWordToStrWithZeros143
  L__LongWordToStrWithZeros144
  L_end_LongToStr
  _LongToStr
  L__LongToStr146
  L__LongToStr147
  L__LongToStr148
  L__LongToStr149
  L_end_LongIntToStrWithZeros
  _LongIntToStrWithZeros
  L__LongIntToStrWithZeros151
  L__LongIntToStrWithZeros152
  L__LongIntToStrWithZeros153
  L__LongIntToStrWithZeros154
  L__LongIntToStrWithZeros155
  L_end_Dec2Bcd
  _Dec2Bcd
  L__Dec2Bcd157
  L_end_Bcd2Dec
  _Bcd2Dec
  L_end_Bcd2Dec16
  _Bcd2Dec16
  L_end_Dec2Bcd16
  _Dec2Bcd16
  L_end_Rtrim
  _Rtrim
  L__Rtrim162
  L_end_Ltrim
  _Ltrim
  L__Ltrim164
  L__Ltrim165
  L__Ltrim166
  L_end_FloatToStr
  _FloatToStr
  L__FloatToStr168
  L__FloatToStr169
  L__FloatToStr170
  L__FloatToStr171
  L__FloatToStr172
  L__FloatToStr173
  L__FloatToStr174
  L__FloatToStr175
  L__FloatToStr176
  L__FloatToStr177
  L__FloatToStr178
  L__FloatToStr179
  L__FloatToStr180
  L__FloatToStr181
  L__FloatToStr182
  L__FloatToStr183
  L__FloatToStr184
  L__FloatToStr185
  L__FloatToStr186
  Delay_Cyc_loop
  Delay_Cyc_rez
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_VDelay_ms3
  L_VDelay_ms4
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_VDelay_Advanced_ms7
  L_VDelay_Advanced_ms8
  Label1
  Label2
  Delay_Cyc_loop
  Delay_Cyc_rem
  L_Delay_1us11
  L_Delay_10us13
  L_Delay_22us15
  L_Delay_50us17
  L_Delay_80us19
  L_Delay_500us21
  L_Delay_5500us23
  L_Delay_1ms25
  L_Delay_5ms27
  L_Delay_8ms29
  L_Delay_10ms31
  L_Delay_100ms33
  L_Delay_1sec35
  L_end_Get_Fosc_kHz
  _Get_Fosc_kHz
  L_end_Get_Fosc_Per_Cyc
  _Get_Fosc_Per_Cyc
  L_end_Delay_Cyc
  _Delay_Cyc
  L_end_Delay_Cyc_Long
  _Delay_Cyc_Long
  L_end_VDelay_ms
  _VDelay_ms
  L_end_VDelay_Advanced_ms
  _VDelay_Advanced_ms
  L_end_Delay_W0
  _Delay_W0
  L_end_Delay_1us
  _Delay_1us
  L_end_Delay_10us
  _Delay_10us
  L_end_Delay_22us
  _Delay_22us
  L_end_Delay_50us
  _Delay_50us
  L_end_Delay_80us
  _Delay_80us
  L_end_Delay_500us
  _Delay_500us
  L_end_Delay_5500us
  _Delay_5500us
  L_end_Delay_1ms
  _Delay_1ms
  L_end_Delay_5ms
  _Delay_5ms
  L_end_Delay_8ms
  _Delay_8ms
  L_end_Delay_10ms
  _Delay_10ms
  L_end_Delay_100ms
  _Delay_100ms
  L_end_Delay_1sec
  _Delay_1sec
  Divide_32x32___testsus
  the_end_Divide_32x32
  Divide_32x32___divsi3
  Divide_32x32___udivsi3
  Divide_32x32_divtestb
  Divide_32x32_calcquot
  Divide_32x32_returnq
  Divide_32x32_nextbit
  Divide_32x32_iterate
  Modulus_32x32___testsus
  the_end_Modulus_32x32
  Modulus_32x32___modsi3
  Modulus_32x32___umodsi3
  Modulus_32x32_modtestb
  Modulus_32x32_calcrem
  Modulus_32x32_exitr
  Modulus_32x32___udivsi3
  Modulus_32x32_nextbit
  Modulus_32x32_iterate
  L_end__Multiply_32x32
  __Multiply_32x32
  L_end__Divide_32x32
  __Divide_32x32
  L_end__Modulus_32x32
  __Modulus_32x32
  Float__fpack
  the_end_Float__fpack
  Float_notsubnormal
  Float_zerosig
  Float_subnormal
  Float_packupandgo
  Float_overflow
  LL_intro_Long2Float
  the_end__Long2Float
  Longint2Float__floatsisf
  Longword2Float__floatuisf
  Long2Float_notspecial
  Long2Float_return0
  Longint2Float_negative
  Long2Float_fixshift
  Long2Float_round
  Long2Float_shiftleft
  Long2Float_shiftright
  Long2Float__fpack
  Long2Float_notsubnormal
  Long2Float_zerosig
  Long2Float_subnormal
  Long2Float_packupandgo
  Long2Float_overflow
  Longlong2Float_floatdisf
  the_end__LongLong2Float
  Longlong2Float_negative
  Longlong2Float_notspecial
  Longlong2Float_return0
  Longlong2Float_fixshift
  Longlong2Float_round
  Longlong2Float_shiftleft
  Longlong2Float_shiftright
  Float2Longword_fixunssfsi
  the_end__Float2Longword
  Float2Longword_funpack
  Float2Longword_returnzero
  Float2Longword_exit
  Float2Longword_shiftright
  Float2Longword_shiftleft
  Float2Longword_shiftrightloop
  Float2Longword_zeroorsub
  Float2Longword_nanorinf
  Float2Longword_finitereturn
  Float2Longword_infinite
  Float2Longword_subnormal
  Float2Longword_normalize
  Float2Longint__fixsfsi
  the_end__Float2Longint
  Float2Longint__funpack
  Float2Longint_setsign
  Float2Longint_shiftright
  Float2Longint_shiftleft
  Float2Longint_exit
  Float2Longint_shiftrightloop
  Float2Longint_zeroorsub
  Float2Longint_nanorinf
  Float2Longint_finitereturn
  Float2Longint_infinite
  Float2Longint_subnormal
  Float2Longint_normalize
  AddSubFP__addsf3
  the_end__AddSub_FP
  AddSubFP__funpack2
  AddSubFP__fPropagateNaN
  AddSubFP_aisinfinite
  AddSubFP_checkspecialb
  AddSubFP_return2_3
  AddSubFP_getsign
  AddSubFP_gotsign
  AddSubFP_expcanonical
  AddSubFP_nonegate
  AddSubFP_aligniter
  AddSubFP_signoff
  AddSubFP_align
  AddSubFP_aligned
  AddSubFP_normalizesum
  AddSubFP_checknormal
  AddSubFP_round
  AddSubFP_discardguard
  AddSubFP_underflow
  AddSubFP_normalizeloop
  AddSubFP_normalizeexit
  AddSubFP_normalizetest
  AddSubFP__fpack
  AddSubFP__fbopExit
  AddSubFP_return8_3
  AddSubFP__fbopReturnNaN
  AddSubFP__funpack
  AddSubFP_return0_1
  AddSubFP_return8_1
  AddSubFP_notsubnormal_1
  AddSubFP_zerosig
  AddSubFP_subnormal_1
  AddSubFP_packupandgo
  AddSubFP_overflow
  AddSubFP_zeroorsub
  AddSubFP_nanorinf
  AddSubFP_finitereturn
  AddSubFP_infinite
  AddSubFP_subnormal_2
  AddSubFP_normalize
  MulFP___mulsf3
  the_end__Mul_FP
  MulFP__funpack2
  MulFP__fPropagateNaN
  MulFP_aisinfinite
  MulFP_bisinfinite
  MulFP_return8_1
  MulFP_return2_1
  MulFP_formsticky
  MulFP_formRandSig
  MulFP__fpack
  MulFP_return0_1
  MulFP__fbopExit
  MulFP__fbopReturnNaN
  MulFP__funpack
  MulFP_return0_2
  MulFP_return8_2
  MulFP_notsubnormal
  MulFP_zerosig
  MulFP_subnormal1
  MulFP_packupandgo
  MulFP_overflow
  MulFP_zeroorsub
  MulFP_nanorinf
  MulFP_finitereturn
  MulFP_infinite
  MulFP_subnormal2
  MulFP_normalize
  DivFP___divsf3
  the_end__Div_FP
  DivFP__funpack2
  DivFP__fPropagateNaN
  DivFP_aisinfinite
  DivFP_returnZero
  DivFP_aiszero
  DivFP_returnInf
  DivFP_finitenonzero
  DivFP_diventry
  DivFP_divnext
  DivFP_divdone
  DivFP_divloop
  DivFP_stickyok
  DivFP_guardused
  DivFP__fpack
  DivFP_return0_1
  DivFP__fbopExit
  DivFP__fbopReturnNaN
  DivFP_return8_1
  DivFP_return2_1
  DivFP__funpack
  DivFP_return0
  DivFP_return8
  DivFP_notsubnormal
  DivFP_zerosig
  DivFP_subnormal
  DivFP_packupandgo
  DivFP_overfloW
  DivFP_zeroorsub
  DivFP_nanorinf
  DivFP_finitereturn
  DivFP_infinite
  DivFP_subnormal2
  DivFP_normalize
  CompareFp__fcompare
  the_end__Compare_Fp
  CompareFp__funpack2
  CompareFp_exit
  CompareFp_comparemag
  CompareFp_returnEqual
  CompareFp_adjust
  CompareFp__funpack
  CompareFp_zeroorsub
  CompareFp_nanorinf
  CompareFp_finitereturn
  CompareFp_infinite
  CompareFp_subnormal
  CompareFp_normalize
  L_end_Float_fpack
  _Float_fpack
  L_end__Long2Float
  __Long2Float
  L_end__LongLong2Float
  __LongLong2Float
  L_end__Float2Longword
  __Float2Longword
  L_end__Float2Longint
  __Float2Longint
  L_end__AddSub_FP
  __AddSub_FP
  L_end__Sub_FP
  __Sub_FP
  L_end__Mul_FP
  __Mul_FP
  L_end__Div_FP
  __Div_FP
  L_end__Compare_Fp
  __Compare_Fp
  L_end__Compare_Le_Fp
  __Compare_Le_Fp
  L_end__Compare_Ge_Fp
  __Compare_Ge_Fp
  L_UART1_Write0
  L_UART1_Write1
  L_UART1_Write_Text2
  L_UART1_Write_Text3
  L_UART1_Read_Text4
  L_UART1_Read_Text5
  L_UART1_Read_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Init13
  L_UART1_Init14
  L_UART1_Init15
  L_UART1_Init_Advanced16
  L_UART1_Init_Advanced17
  L_UART1_Init_Advanced18
  L_UART1_Init_Advanced19
  L_UART1_Init_Advanced20
  L_UART1_Init_Advanced21
  L_UART1_Init_Advanced22
  L_UART1_Init_Advanced23
  L_UART1_Init_Advanced24
  L_UART2_Write25
  L_UART2_Write26
  L_UART2_Write_Text27
  L_UART2_Write_Text28
  L_UART2_Read_Text29
  L_UART2_Read_Text30
  L_UART2_Read_Text31
  L_UART2_Read_Text32
  L_UART2_Read_Text33
  L_UART2_Read_Text34
  L_UART2_Read_Text35
  L_UART2_Read_Text36
  L_UART2_Read_Text37
  L_UART2_Init38
  L_UART2_Init39
  L_UART2_Init40
  L_UART2_Init_Advanced41
  L_UART2_Init_Advanced42
  L_UART2_Init_Advanced43
  L_UART2_Init_Advanced44
  L_UART2_Init_Advanced45
  L_UART2_Init_Advanced46
  L_UART2_Init_Advanced47
  L_UART2_Init_Advanced48
  L_UART2_Init_Advanced49
  L__UART1_Read_Text50
  L__UART1_Init51
  L__UART1_Init52
  L__UART1_Init53
  L__UART2_Read_Text54
  L__UART2_Init55
  L__UART2_Init56
  L__UART2_Init57
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L__UART1_Write_Text60
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L__UART1_Read_Text64
  L__UART1_Read_Text65
  L__UART1_Read_Text66
  L__UART1_Read_Text67
  L__UART1_Read_Text68
  L__UART1_Read_Text69
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Init
  _UART1_Init
  L__UART1_Init72
  L__UART1_Init73
  L__UART1_Init74
  L__UART1_Init75
  L__UART1_Init76
  L__UART1_Init77
  L__UART1_Init78
  L_end_UART1_Init_Advanced
  _UART1_Init_Advanced
  L__UART1_Init_Advanced80
  L__UART1_Init_Advanced81
  L__UART1_Init_Advanced82
  L__UART1_Init_Advanced83
  L__UART1_Init_Advanced84
  L__UART1_Init_Advanced85
  L__UART1_Init_Advanced86
  L__UART1_Init_Advanced87
  L__UART1_Init_Advanced88
  L__UART1_Init_Advanced89
  L__UART1_Init_Advanced90
  L__UART1_Init_Advanced91
  L__UART1_Init_Advanced92
  L__UART1_Init_Advanced93
  L__UART1_Init_Advanced94
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART2_Write
  _UART2_Write
  L_end_UART2_Write_Text
  _UART2_Write_Text
  L__UART2_Write_Text98
  L_end_UART2_Data_Ready
  _UART2_Data_Ready
  L_end_UART2_Read
  _UART2_Read
  L_end_UART2_Read_Text
  _UART2_Read_Text
  L__UART2_Read_Text102
  L__UART2_Read_Text103
  L__UART2_Read_Text104
  L__UART2_Read_Text105
  L__UART2_Read_Text106
  L__UART2_Read_Text107
  L_end_UART2_Tx_Idle
  _UART2_Tx_Idle
  L_end_UART2_Init
  _UART2_Init
  L__UART2_Init110
  L__UART2_Init111
  L__UART2_Init112
  L__UART2_Init113
  L__UART2_Init114
  L__UART2_Init115
  L__UART2_Init116
  L_end_UART2_Init_Advanced
  _UART2_Init_Advanced
  L__UART2_Init_Advanced118
  L__UART2_Init_Advanced119
  L__UART2_Init_Advanced120
  L__UART2_Init_Advanced121
  L__UART2_Init_Advanced122
  L__UART2_Init_Advanced123
  L__UART2_Init_Advanced124
  L__UART2_Init_Advanced125
  L__UART2_Init_Advanced126
  L__UART2_Init_Advanced127
  L__UART2_Init_Advanced128
  L__UART2_Init_Advanced129
  L__UART2_Init_Advanced130
  L__UART2_Init_Advanced131
  L__UART2_Init_Advanced132
